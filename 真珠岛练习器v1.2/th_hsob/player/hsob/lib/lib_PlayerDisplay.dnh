
//　自機描画
task PlayerDisplay( v_playerNo, v_path, v_pos ){
	alternative(v_playerNo)
	case(0, 1)
	{
		_PlayerDisplay02( v_path, v_pos );
	}
	case(2, 3)
	{
		_PlayerDisplay01( v_path, v_pos );
	}
}

task _PlayerDisplay01( v_path, v_pos ){
	let obj				= ObjPrim_Create(OBJ_SPRITE_2D);
	let frame			= 0;
	let animeX			= 0;
	let animeY			= 0;
	let animeL			= 0;
	let animeR			= 0;
	let animeXL			= 0;
	let animeXR			= 0;
	let animeYLR		= 0;
	
	ObjPrim_SetTexture( obj, v_path );
	Obj_SetRenderPriorityI( obj, 38 );
	ObjRender_SetBlendType( obj, BLEND_ALPHA );
	ObjRender_SetAlpha( obj, 255 );
	
	loop{
		animeYLR = 0;
		if( GetVirtualKeyState(VK_LEFT) != KEY_FREE ){ animeY = 1; animeXR = 0; }
		if( GetVirtualKeyState(VK_RIGHT) != KEY_FREE ){ animeY = 2; animeXL = 0; }
		if( GetVirtualKeyState(VK_LEFT) == KEY_FREE && GetVirtualKeyState(VK_RIGHT) == KEY_FREE ){
			if( animeXL <= 0 && animeXR <= 0 ){
				animeY = 0;
			}
			else{
				animeY = 3;
				if( animeXL > 0 ){ animeYLR = -2; }
				if( animeXR > 0 ){ animeYLR = -1; }
			}
		}
		
		ObjRender_SetPosition( obj, round(GetPlayerX() + v_pos[0]), round(GetPlayerY() + v_pos[1]), 0 );
		ObjSprite2D_SetSourceRect( obj, 0 + animeX*32, 0 + animeY*48 + animeYLR*48 , 32 + animeX*32, 48 + animeY*48 + animeYLR*48 );
		ObjSprite2D_SetDestCenter( obj );
		
		//　テクスチャ不可視化
		if( GetPlayerState == STATE_HIT || GetPlayerState == STATE_DOWN || GetPlayerState == STATE_END ){
			ObjRender_SetAlpha( obj, 0 );
		}
		else{
			ObjRender_SetAlpha( obj, 255 );
		}
		
		alternative( animeY )
		case( 0 ){
			if( frame > 0 && frame%4 == 0 ){ animeX++; }
			animeXL = 0;
			animeXR = 0;
		}
		case( 1 ){
			if( animeL > 0 && animeL%3 == 0 ){ animeXL++; }
			if( animeXL > 7 ){ animeXL = 4; }
			animeX = 0 + animeXL;
			animeL++;
		}
		case( 2 ){
			if( animeR > 0 && animeR%3 == 0 ){ animeXR++; }
			if( animeXR > 7 ){ animeXR = 4; }
			animeX = 0 + animeXR;
			animeR++;
		}
		case( 3 ){
			if( frame > 0 && frame%2 == 0 && animeXL > 0 ){ animeXL--; }
			if( frame > 0 && frame%2 == 0 && animeXR > 0 ){ animeXR--; }
			animeX = 0 + animeXL + animeXR;
			animeL = 0;
			animeR = 0;
		}
		frame++;
		
		//　復帰点滅
		if( GetPlayerInvincibility() <= 0 ){
			ObjRender_SetColor( obj, 255, 255, 255 );
		}
		else{
			let rgb = [ 255, 0 ];
			ObjRender_SetColor( obj, rgb[frame%2], rgb[frame%2], rgb[frame%2] );
		}
		
		//　テクスチャ不可視化
		if( GetPlayerState() == STATE_HIT || GetPlayerState() == STATE_DOWN || GetPlayerState() == STATE_END ){
			ObjRender_SetAlpha( obj, 0 );
		}
		else{
			ObjRender_SetAlpha( obj, 255 );
		}
		
		yield;
	}
	Obj_Delete( obj );
}

task _PlayerDisplay02( v_path, v_pos ){
	let obj				= ObjPrim_Create(OBJ_SPRITE_2D);
	let frame			= 0;
	let animeX			= 0;
	let animeY			= 0;
	let animeLR			= 0;
	
	ObjPrim_SetTexture( obj, v_path );
	Obj_SetRenderPriorityI( obj, 38 );
	ObjRender_SetBlendType( obj, BLEND_ALPHA );
	ObjRender_SetAlpha( obj, 255 );
	
	loop{
		if( GetVirtualKeyState(VK_LEFT) != KEY_FREE ){ animeLR = max(animeLR-1, -10); }
		if( GetVirtualKeyState(VK_RIGHT) != KEY_FREE ){ animeLR = min(animeLR+1, 10); }
		if( GetVirtualKeyState(VK_LEFT) == KEY_FREE && GetVirtualKeyState(VK_RIGHT) == KEY_FREE ){
			if (animeLR < 0) { animeLR++; }
			if (animeLR > 0) { animeLR--; }
		}
		
		if (animeLR < 0)
		{
			animeY = 2;
			animeX = -trunc((animeLR+1)/10*2);
		}
		else if (animeLR > 0)
		{
			animeY = 1;
			animeX = trunc((animeLR-1)/10*2);
		}
		else
		{
			animeY = 0;
			if( frame > 0 && frame%4 == 0 ){ animeX = (animeX+1)%5; }
		}
		
		ObjRender_SetPosition( obj, round(GetPlayerX() + v_pos[0]), round(GetPlayerY() + v_pos[1]), 0 );
		ObjSprite2D_SetSourceRect( obj, 0 + animeX*48, 0 + animeY*64 , 48 + animeX*48, 64 + animeY*64 );
		ObjSprite2D_SetDestCenter( obj );
		
		//　テクスチャ不可視化
		if( GetPlayerState == STATE_HIT || GetPlayerState == STATE_DOWN || GetPlayerState == STATE_END ){
			ObjRender_SetAlpha( obj, 0 );
		}
		else{
			ObjRender_SetAlpha( obj, 255 );
		}
		
		frame++;
		
		//　復帰点滅
		if( GetPlayerInvincibility() <= 0 ){
			ObjRender_SetColor( obj, 255, 255, 255 );
		}
		else{
			let rgb = [ 255, 0 ];
			ObjRender_SetColor( obj, rgb[frame%2], rgb[frame%2], rgb[frame%2] );
		}
		
		//　テクスチャ不可視化
		if( GetPlayerState() == STATE_HIT || GetPlayerState() == STATE_DOWN || GetPlayerState() == STATE_END ){
			ObjRender_SetAlpha( obj, 0 );
		}
		else{
			ObjRender_SetAlpha( obj, 255 );
		}
		
		yield;
	}
	Obj_Delete( obj );
}
