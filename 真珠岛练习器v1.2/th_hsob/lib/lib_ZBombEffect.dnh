//------------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------------
//　タイトルで出す用エフェクト（内容は自機のやつと一緒
//------------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------------

task ZBombArea( obj ){
	let frame = 0;
	while( !Obj_IsDeleted(obj) ){
		if( frame%48 == 0 ){
			let col = [ 255, 128, 64 ];
			ZBombFog( [ randEffect(0,640), randEffect(0,480) ], randEffect(0.9,1.8), randEffect(64,128), col );
		}
		
		frame++;
		
		yield;
	}
}

task ZBombFog( v_pos, v_scale, v_alpha, v_color ){
	if( !CfgIsUseShader() ){ return; }
	let obj		= ObjPrim_Create(OBJ_SPRITE_2D);
	let path	= GetCurrentScriptDirectory() ~ "./../img/effect/aura01d.png";
	let frame	= 0;
	let move1	= 0;
	let moveA	= 0;
	let seed	= randEffect(0,1);
	let lay		= [ 0, 100 ];
	
	//　fxにマスク用テクスチャを渡す
	let shader	= CreateShaderObject( obj, 3 );
	let g_mask	= CreateRenderTexture( "BG", lay[0], lay[1], true );
	ObjShader_SetTexture( shader, "g_Texture", g_mask );
	
	ObjRender_SetPosition( obj, v_pos[0], v_pos[1], 0 );
	ObjPrim_SetTexture( obj, path );
	Obj_SetRenderPriorityI( obj, 20 );
	ObjRender_SetBlendType( obj, BLEND_ADD_ARGB );
	ObjSprite2D_SetSourceRect( obj, 0, 0, 256, 256 );
	ObjSprite2D_SetDestCenter( obj );
	
	// in
	while( !Obj_IsDeleted(obj) && move1 >= 0 ){
		move1 = 1 * sin( moveA );
		
		let sca = v_scale/2 + move1*(v_scale/2) + frame/100;
		ObjRender_SetScaleXYZ( obj, sca, sca, 0 );
		ObjRender_SetAlpha( obj, move1*v_alpha );
		
		//　a値反映レベル(0〜1)
		ObjShader_SetFloat( shader, "m_frame", seed + frame );
		ObjShader_SetVector( shader, "m_xyzw", (1/255)*v_color[0], (1/255)*v_color[1], (1/255)*v_color[2], (1/255)*0 );
		ObjShader_SetFloat( shader, "m_param", move1 * ( (1/255)*v_alpha ) );
		
		g_mask = CreateRenderTexture( "BG", lay[0], lay[1], true );
		ObjShader_SetTexture( shader, "g_Texture", g_mask );
		
		moveA += 1;
		frame++;
		
		yield;
	}
	ObjShader_ResetShader( obj );
	Obj_Delete( shader );
	Obj_Delete( obj );
}