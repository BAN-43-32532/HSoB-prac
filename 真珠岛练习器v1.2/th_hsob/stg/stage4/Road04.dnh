#東方弾幕風[Stage]
#ScriptVersion[3]
#Title["Stage4道中"]
#Text["Stage4道中"]
#System["./../../system/System.dnh"]

#include "./../../lib/lib_Common.dnh"
#include "./../../lib/lib_Stage.dnh"
#include "./../../lib/lib_Zako.dnh"
#include "./Road04_Zako.dnh"
#include "./../../lib/lib_ChapterSkip.dnh"
let dest=GetStartChapter(4);
@Initialize
{
	STAGE_ID = 4;		//ステージID記録
	NEXT_STAGE_ID = 5;	//次のステージIDを記録
	StageInit();
	TStage();
}

@Event()
{
	StageEvent();
}

@Loading
{
}

@MainLoop
{
	yield;
}



task TStage
{
	// 保険
	yield;
	
	let dir = GetCurrentScriptDirectory();
	let pathBG	= dir ~ "BackgroundWorld04.dnh";	//背景
	let pathMBoss	= dir ~ "boss/04a_plural.dnh";	//中ボス
	let pathBoss	= dir ~ "boss/04b_plural.dnh";	//ボス
	
	//　中ボスロード
	if(dest<=4){
		StartScriptInThread(pathMBoss);
	}
	else{
		StartScriptInThread(pathBoss);
	}
	//  背景配置
	SetStageBackGround(pathBG);
	if(dest>1 && dest<=6){
		PlayMusicWithName( 8, 30, 0 );
		WaitRoad(50);
	}
	if(dest>6){
		PlayMusicWithName( 9, 30, 30 );
		WaitRoad(50);
		//WaitRoad(120);
	}
	wait(75);
// ------------------------ 前半
	if(dest<=1){
		CHAPTER_1();
	}
	if(dest<=2){
		CHAPTER_2();
	}
	if(dest<=3){
		CHAPTER_3();
	}
	

// ------------------------ 中ボス
	if(dest<=4){
		CHAPTER_MBOSS(pathBoss);
	}
	if(dest<=5){
		CHAPTER_4();	//中ボスの早回し用
	}
	

// ------------------------ 後半
	if(dest<=6){
		CHAPTER_5();
	}

// ------------------------ ボス
	KillAllEnemy();
	DeleteShotAll_Effect(CenX, CenY);
	SetItemCollect(180);
	CallBoss();
	// 待機とロード
	WaitForBossKilled();

	wait(45);

	StageEND();
}
function CHAPTER_5()
{
	ChapterStart(STAGE_ID, 4, CHAPTER_ROAD);
	SetEnemyF03(GetCenterX()-60+120*cos(225), GetCenterY()+120*sin(225), 2.0, 315, 60/phaseEx(2), phaseEx(2));
	SetEnemyF02(GetCenterX()-135, GetClipMinY()+90, 1.5, 15, 0, phaseEx(2));
	WaitRoad(phase(4));
	
	SetEnemyF03(GetCenterX()+60+120*cos(315), GetCenterY()+120*sin(315), 2.0, 225, -60/phaseEx(2), phaseEx(2));
	WaitRoad(phase(2));
	SetEnemyF02(GetCenterX()+135, GetClipMinY()+90, 1.5, 165, 0, phaseEx(2));
	WaitRoad(phase(2));
	
	SetEnemyF03(GetCenterX()-60+120*cos(225), GetCenterY()+120*sin(225), 2.0, 315, 60/phaseEx(2), phaseEx(2));
	WaitRoad(phase(4));
	
	SetEnemyF03(GetCenterX()+60+120*cos(315), GetCenterY()+120*sin(315), 2.0, 225, -60/phaseEx(2), phaseEx(2));
	SetEnemyF02(GetCenterX()-180, GetClipMinY()+180, 1.8, 330, 0, phaseEx(2));
	WaitRoad(phase(4));
	
	SetEnemyF03(GetCenterX()-60+120*cos(225), GetCenterY()+120*sin(225), 2.0, 315, 60/phaseEx(2), phaseEx(2));
	WaitRoad(phase(2));
	SetEnemyF02(GetCenterX()+180, GetClipMinY()+180, 1.8, 210, 0, phaseEx(2));
	WaitRoad(phase(2));
	
	SetEnemyF03(GetCenterX()+60+120*cos(315), GetCenterY()+120*sin(315), 2.0, 225, -60/phaseEx(2), phaseEx(2));
	WaitRoad(phase(4));
	SetEnemyF02(GetCenterX()-135, GetClipMinY()+90, 1.5, 15, 0, phaseEx(2));
	SetEnemyF02(GetCenterX()+135, GetClipMinY()+90, 1.5, 165, 0, phaseEx(2));
	WaitRoad(phase(12));
}
function CHAPTER_4()
{
	if(dest==5){
		ChapterStart(STAGE_ID, 3, CHAPTER_ROAD);
	}
	
	else{
		//以下、早回し箇所
		WaitRoad_Time(SinglePhase*(8+4-2)/60, "STG4R_WAIT_1");	// 何もない所は実時間に合わせて待機
	}
	
//	WaitRoad(phase(2));
//	WaitRoad(phase(8));
	SetEnemyF04(GetCenterX()+160, GetClipMinY()+120, 1.5, 175, 320/cos(5), phaseEx(2));
	WaitRoad(phase(8));
	SetEnemyF04(GetCenterX()-160, GetClipMinY()+120, 1.5, 5, 320/cos(5), phaseEx(2));
	WaitRoad(phase(8));
	SetEnemyF04(GetCenterX()+160, GetClipMinY()+120, 1.5, 175, 320/cos(5), phaseEx(2));
	WaitRoad(phase(8));
	SetEnemyF04(GetCenterX()-160, GetClipMinY()+120, 1.5, 5, 320/cos(5), phaseEx(2));
	WaitRoad(phase(8));
	//以上までが早回し
	SetEnemyF03(GetCenterX()-60+120*cos(135), GetCenterY()+120*sin(135), 2, 225, 90/phaseEx(2), phaseEx(2));
	WaitRoad(phase(2));
	THitodama();
	WaitRoad(phase(2));
	SetEnemyF03(GetCenterX()+60+120*cos(45), GetCenterY()+120*sin(45), 2, 315, -90/phaseEx(2), phaseEx(2));
	WaitRoad(phase(4));
	SetEnemyF03(GetCenterX()-60+120*cos( 90), GetCenterY()+120*sin( 90), 2, 180, 90/phaseEx(2), phaseEx(2));
	SetEnemyF03(GetCenterX()+60+120*cos( 90), GetCenterY()+120*sin( 90), 2, 0, -90/phaseEx(2), phaseEx(2));
	WaitRoad(phase(8+1));
	ascent(i in 0 .. 3){
		SetEnemyF01(GetCenterX()-(75+30*i), GetClipMinY()+96, 1.50+0.25*i, 270, 0, phaseEx(2));
	}
	WaitRoad(phase(4));
	ascent(i in 0 .. 3){
		SetEnemyF01(GetCenterX()+(75+30*i), GetClipMinY()+96, 1.50+0.25*i, 270, 0, phaseEx(2));
	}
	WaitRoad(phase(2));
	ascent(i in 0 .. 3){
		SetEnemyF01(GetCenterX()-(45+30*i), GetClipMinY()+96, 1.50+0.25*i, 270, 0, phaseEx(2));
	}
	WaitRoad(phase(2));
	ascent(i in 0 .. 3){
		SetEnemyF01(GetCenterX()+(75+30*i), GetClipMinY()+96, 1.50+0.25*i, 270, 0, phaseEx(2));
	}
	WaitRoad(phase(2));
	ascent(i in 0 .. 5){
		SetEnemyF01(GetCenterX()+(150-75*i), GetClipMinY()+96, 1.50, 270, 0, phaseEx(2));
	}
	WaitRoad(phase(2));
	ascent(i in 0 .. 6){
		SetEnemyF01(GetCenterX()+(187.5-75*i), GetClipMinY()+96, 1.50, 270, 0, phaseEx(2));
	}
	WaitRoad(phase(6-1));
	
	task THitodama(){
//		let angle = 60;
		let CX = GetCenterX()-GetClipMinX();
		let D = -1;
		ascent(t in 0 .. 16){
			SetEnemyH02(GetCenterX()+CX*D, GetCenterY()-135, 0.8, 90+rand(60, 85)*D, 0, phaseEx(1));
//			angle += 82;
			D = -D;
			WaitRoad(phaseEx(4/3));
		}
	}
}

function CHAPTER_3()
{
	ChapterStart(STAGE_ID, 2, CHAPTER_ROAD);
	SetEnemyF02(GetCenterX()+135, GetClipMinY()+90, 1.5, 165, 0, phaseEx(2));
	WaitRoad(phase(1));
	THitodama();
	WaitRoad(phase(3));
	SetEnemyF02(GetCenterX()-135, GetClipMinY()+90, 1.5, 15, 0, phaseEx(2));
	WaitRoad(phase(4));
	SetEnemyF02(GetCenterX()+60, GetClipMinY()+150, 1.2, 210, 0, phaseEx(2));
	WaitRoad(phase(4));
	SetEnemyF02(GetCenterX()-60, GetClipMinY()+150, 1.2, -30, 0, phaseEx(2));
	WaitRoad(phase(4));
	SetEnemyF02(GetCenterX()+180, GetClipMinY()+240, 1.8, 225, 0, phaseEx(2));
	WaitRoad(phase(4));
	SetEnemyF02(GetCenterX()-180, GetClipMinY()+240, 1.8, -45, 0, phaseEx(2));
	WaitRoad(phase(4));
	SetEnemyF03(GetCenterX()+120*cos(180), GetCenterY()+120*sin(180), 2, 270, 90/phaseEx(2), phaseEx(2));
	WaitRoad(phase(1.5));
	SetEnemyF03(GetCenterX()+120*cos(150), GetCenterY()+120*sin(150), 2, 240, 90/phaseEx(2), phaseEx(2));
	WaitRoad(phase(1.5));
	SetEnemyF03(GetCenterX()+120*cos(120), GetCenterY()+120*sin(120), 2, 210, 90/phaseEx(2), phaseEx(2));
	WaitRoad(phase(1.5));
	SetEnemyF03(GetCenterX()+120*cos( 90), GetCenterY()+120*sin( 90), 2, 180, 90/phaseEx(2), phaseEx(2));
	WaitRoad(phase(1.5));
	WaitRoad(phase(8-2));

	task THitodama(){
		let angle = 60;
		ascent(t in 0 .. 48){
			SetEnemyH02(GetCenterX(), GetCenterY()-120, 0.8, angle, 0, phaseEx(1));
			angle += 82;
			WaitRoad(phaseEx(2/3));
		}
	}
}

function CHAPTER_2()
{
	ChapterStart(STAGE_ID, 1, CHAPTER_ROAD);
	SetEnemyF04(GetCenterX()+160, GetClipMinY()+120, 1.5, 175, 320/cos(5), phaseEx(2));
	WaitRoad(phase(8));
	SetEnemyF04(GetCenterX()-160, GetClipMinY()+165, 1.5, 5, 320/cos(5), phaseEx(2));
	WaitRoad(phase(8));
	SetEnemyF04(GetCenterX()+160, GetClipMinY()+210, 1.5, 175, 320/cos(5), phaseEx(2));
	WaitRoad(phase(8));
	SetEnemyF03(GetCenterX()+120*cos( 0), GetCenterY()+120*sin( 0), 2, 270, -90/phaseEx(2), phaseEx(2));
	WaitRoad(phase(1.5));
	SetEnemyF03(GetCenterX()+120*cos(45), GetCenterY()+120*sin(45), 2, 315, -90/phaseEx(2), phaseEx(2));
	WaitRoad(phase(1.5));
	SetEnemyF03(GetCenterX()+120*cos(90), GetCenterY()+120*sin(90), 2,   0, -90/phaseEx(2), phaseEx(2));
	WaitRoad(phase(6));
}

function CHAPTER_1()
{
	// BGM
	task PlayMusicDelay(){
		WaitRoad(phaseEx(2)-24);
		PlayMusicWithName( 8, 30, 0 );
	}
	
	PlayMusicDelay();
	ChapterStart(STAGE_ID, 0, CHAPTER_ROAD);
	SetEnemyF01(GetCenterX()+120, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1));
	SetEnemyF01(GetCenterX()+30, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1));
	SetEnemyF01(GetCenterX()-60, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1));
	SetEnemyF01(GetCenterX()-150, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1));
	SetEnemyF01(GetCenterX()-120, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1));
	SetEnemyF01(GetCenterX()-30, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1));
	SetEnemyF01(GetCenterX()+60, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1));
	SetEnemyF01(GetCenterX()+150, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1));
	
	SetEnemyF01(GetCenterX()+120, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1/2));
	SetEnemyF01(GetCenterX()+60, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1/2));
	SetEnemyF01(GetCenterX()+150, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1/2));
	SetEnemyF01(GetCenterX()+90, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1/2));

	SetEnemyF01(GetCenterX()-120, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1/2));
	SetEnemyF01(GetCenterX()-60, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1/2));
	SetEnemyF01(GetCenterX()-150, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1/2));
	SetEnemyF01(GetCenterX()-90, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1/2));

	SetEnemyF01(GetCenterX()+60, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1/2));
	SetEnemyF01(GetCenterX()-60, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1/2));
	SetEnemyF01(GetCenterX()+30, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1/2));
	SetEnemyF01(GetCenterX()-30, GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(1/2));
	SetEnemyF01(GetCenterX(), GetClipMinY()+96, 1.5, 270, 0, phaseEx(2));
	WaitRoad(phase(2));
	SetEnemyF02(GetCenterX()-120, GetClipMinY()+210, 1.5, -30, 0, phaseEx(2));
	WaitRoad(phase(4));
	SetEnemyF02(GetCenterX()+120, GetClipMinY()+210, 1.5, 210, 0, phaseEx(2));
	WaitRoad(phase(4));
	SetEnemyF03(GetCenterX()-90, GetCenterY()+60, 2, 210, 90/phaseEx(2), phaseEx(2));
	SetEnemyF03(GetCenterX()+90, GetCenterY()+60, 2, -30, -90/phaseEx(2), phaseEx(2));
	WaitRoad(phase(8));	
	DisplayStage(STAGE_ID, 0);	// タイトル表示
	WaitRoad(phase(8-1-1/4));	

}

task CHAPTER_MBOSS(pathBoss)
{
	// みんなしねばいい
	KillAllEnemy();
	DeleteShotAll_Effect(CenX, CenY);
	SetItemCollect(120);
	
	// ボスがでたぞー
	CallBoss();
	flgStopSetZako = true;
	// 中ボスが消えてからボスをロード
	StartScriptInThreadWaitBoss(pathBoss);
	
	// ボス撃破待ち
	CheckBossKilled();
	WaitForMiddleBossKilled();
	
	flgStopSetZako = false;

	// 表示待ち
	wait(180);

	ChapterStart(STAGE_ID, 3, CHAPTER_ROAD);
}
