#東方弾幕風[Single]
#ScriptVersion[3]
#Title["6面　会話前半"]
#Text["6面　会話前半"]
#Background[""]
#System["./../../../system/System.dnh"]

//---------------------------------------------------------------------

// 関数取り込み
#include"./../../../lib/lib_boss.dnh"
#include"./../../../lib/lib_talk.dnh"

// 各ボスのオブジェクトID
let MOVE_END = false;

@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult( 0);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(-1);	}
	BossEvent();
}

@Initialize {
	Boss_Init();	//初期設定
	
	objEnemy  = CreateBossTalk(BOSS_ID_HOROU);

	ChapterReset();	//チャプターリセット

	Task_Main();
}

@MainLoop {
	yield;

}

// メインタスク
task Task_Main()
{
	// 魔法陣リセット
	BossEffect_ResetMagicCircle();

	// 会話準備
	StartTalk();

	wait(120);

	//会話処理
	FuncTalk();
	
	//次のシーンへ
	FinishTalk(true);
	while(!MOVE_END) { yield; }
	Boss_Finalize(objEnemy, false, false);
}

// 会話処理
function FuncTalk()
{
	// オブジェクト作成
	let cutinBoss1   = CreateTalkObject(BOSS_ID_HOROU, true);
	let cutinPlayer1 = CreateTalkObject(BOSS_ID_KAGUYA, false);
	
	let talkID = -1;
	loop
	{
		let talkType = FuncTalkSingle(talkID);
		if (talkType == 0) { break; }
		else if (talkType == 1) { talkID = max(0, talkID+WaitNext()); }
		else { talkID++; }
	}

	// 会話処理単発（巻き戻しも出来るように）
	function FuncTalkSingle(talkID)
	{
		let talk_type = 1;
		alternative(talkID)
		case(-1)
		{
			// 初期設定
			SetImageVisible(cutinBoss1, false);
			SetImageFoward(cutinPlayer1, true);
			ChangeTalkTexture(cutinPlayer1, I_NORMAL2);
			
			wait(15);	// 表示しきるまでウェイト
			talk_type = 2;	// キー入力待ちしない
		}
		case(0)
		{
			ChangeTalkTexture(cutinPlayer1, I_NORMAL2);
			SetTalkEx(cutinPlayer1, "永琳は居なくなったし、永遠も無くなった。[r]太陽の力が再び幻想郷を満たして行くわ。");
		}
		case(1)
		{
			ChangeTalkTexture(cutinPlayer1, I_UPSET_SMILE);
			SetTalkEx(cutinPlayer1, "月に代わって黒幕をお仕置きするには、[r]却って都合が悪くなっちゃったかも");
		}
		case(2)
		{
			ChangeTalkTexture(cutinPlayer1, I_SMILE3);
			SetTalkEx2(cutinBoss1, "セトくんが潰れてしまったか…", -48, -280);
		}
		case(3)
		{
			ChangeTalkTexture(cutinPlayer1, I_NORMAL);
			ChangeTalkTexture(cutinBoss1, I_DOYA);

			EnterBoss();
			BossScene_SetNameVisible(objScene, true);	//ボスネーム表示状態
			SetImageVisible(cutinBoss1, true);	// ボス画像出現フラグ
			SetBossName(cutinBoss1, objEnemy);

			SetTalkEx(cutinBoss1, "ククク、[r]セトくんは我ら妖土真宗の中でも最弱…");
		}
		case(4)
		{
			ChangeTalkTexture(cutinPlayer1, I_SMILE2);
			SetTalkEx(cutinPlayer1, "今回の異変で出会った敵で一番強かったわ");
		}
		case(5)
		{
			ChangeTalkTexture(cutinBoss1, I_NORMAL2);
			SetTalkEx(cutinBoss1, "妖土真宗は年功序列を取り入れたんだ。");
		}
		case(6)
		{
			ChangeTalkTexture(cutinBoss1, I_DOYA);
			SetTalkEx(cutinBoss1, "新入りは先輩を敬って、[r]それで極楽に行けるか決まるんだよ。");
		}
		case(7)
		{
			ChangeTalkTexture(cutinBoss1, I_UPSET);
			SetTalkEx(cutinBoss1, "まあ、セトくんは私になんか厚い本くれたし、[r]時を止めるすごい呪文とか教えてくれたから[r]いい奴だったね！");
		}
		case(8)
		{
			ChangeTalkTexture(cutinPlayer1, I_SMILE4);
			SetTalkEx(cutinPlayer1, "つまりあなたの持つ『本』が[r]異変の元凶なのね。");
		}
		case(9)
		{
			ChangeTalkTexture(cutinPlayer1, I_SMILE);
			SetTalkEx(cutinPlayer1, "月の連中じゃなくて良かった。");
		}
		case(10)
		{
			ChangeTalkTexture(cutinPlayer1, I_UPSET3);
			SetTalkEx(cutinPlayer1, "古巣の連中が、こんな奴らに力を[r]貸すほど堕落したとは思いたくないし");
		}
		case(11)
		{
			ChangeTalkTexture(cutinBoss1, I_NORMAL);
			SetTalkEx(cutinBoss1, "お前は月の奴なのかい？[r]じゃあここで私と出会ったのが運の尽きだね");
		}
		case(12)
		{
			ChangeTalkTexture(cutinBoss1, I_NORMAL2);
			SetTalkEx(cutinBoss1, "この本を書いた、異国の[ruby rb=\"朱鷺神\" rt=\"ト　ト\"]様の[r]武勇伝を知ってるかい？");
		}
		case(13)
		{
			ChangeTalkTexture(cutinBoss1, I_NORMAL);
			SetTalkEx(cutinBoss1, "月と賭けをして勝って、月の力と[r]時間を操れるようになったってさ。");
		}
		case(14)
		{
			ChangeTalkTexture(cutinBoss1, I_DOYA);
			SetTalkEx(cutinBoss1, "やっぱり朱鷺は国際的に[r]凄くて強い種族だったよ");
		}
		case(15)
		{
			ChangeTalkTexture(cutinPlayer1, I_WORRY4);
			SetTalkEx(cutinPlayer1, "えー、外国の月人はもっと[r]馬鹿で鳥頭なの、うーん複雑");
		}
		case(16)
		{
			ChangeTalkTexture(cutinBoss1, I_NORMAL2);
			SetTalkEx(cutinBoss1, "特別に見逃してやろう、私はこれから[r]幻想郷の外に出る仕事が忙しいからな！");
		}
		case(17)
		{
			ChangeTalkTexture(cutinPlayer1, I_SMILE4);
			ChangeTalkTexture(cutinBoss1, I_DOYA);
			SetTalkEx(cutinBoss1, "じゃ！");
		}
		case(18)
		{
			while(!MOVE_END) { yield; }	// 前の移動が終わるまで待機
			MoveBossT01_a();

			SetImageVisible(cutinBoss1, false);	// ボス画像出現フラグ
			DeleteAllFukidashi();
		}
		case(19)
		{
			ChangeTalkTexture(cutinPlayer1, I_CALM2);
			SetTalkEx(cutinPlayer1, "永琳の術を真似して[r]密室を作ってみようかなぁ");
		}
		case(20)
		{
			while(!MOVE_END) { yield; }	// 前の移動が終わるまで待機
			MoveBossT01_b();

			SetImageVisible(cutinBoss1, true);	// ボス画像出現フラグ
			ChangeTalkTexture(cutinBoss1, I_ANGER);
			SetTalkEx(cutinBoss1, "ほろっ！？");
			SetFukidashiType(cutinBoss1, FUKIDASHI_ANGER);
		}
		case(21)
		{
			ChangeTalkTexture(cutinPlayer1, I_DOYA2);
			SetTalkEx(cutinPlayer1, "異変解決よ。弾幕ごっこで遊びましょう[r]あなたは密室殺人の被害者役");
		}
		case(22)
		{
			ChangeTalkTexture(cutinBoss1, I_ANGER);
			SetTalkEx(cutinBoss1, "見逃してやろうって言ったのに。[r]仕方ないから遊んでやるしかない。");
		}
		case(23)
		{
			// BGM
			PlayMusicWithName( 13, 30, 30 );
			
			ChangeTalkTexture(cutinBoss1, I_DOYA2);
			SetTalkEx(cutinBoss1, "我は時の主役、　　　　　　　　　　");
			WaitNext();
			SetFukidashiRefresh(cutinBoss1);
			SetTalkEx(cutinBoss1, "我は時の主役、　　　　　　　　　　[r]　　我は遠方の者を連れ戻す役、");
			WaitNext();
			SetFukidashiRefresh(cutinBoss1);
			SetTalkEx(cutinBoss1, "我は時の主役、　　　　　　　　　　[r]　　我は遠方の者を連れ戻す役、[r]　　　　我は二人の戦士を分ける役。");
		}
		case(24)
		{
			ChangeTalkTexture(cutinBoss1, I_ANGER);
			SetTalkEx(cutinBoss1, "ごっこ遊びなんて無粋！");
		}
		case(25)
		{
			ChangeTalkTexture(cutinBoss1, I_SPECIAL);
			SetTalkEx(cutinBoss1, "この七色の翼のように、[r]多才な私が全部の役をしてあげるから！");
		}
		case(26)
		{
			ChangeTalkTexture(cutinPlayer1, I_NORMAL);
			SetTalkEx(cutinPlayer1, "『認めて欲しい、忘れられたくない』");
		}
		case(27)
		{
			ChangeTalkTexture(cutinPlayer1, I_NORMAL6);
			SetTalkEx(cutinPlayer1, "今まで多くの人妖が敗れ去って行った[r]究極難題、あなたに果たして解けるかしら！？");
		}
		others
		{
			return(0);
		}
		return(talk_type);
	}
}

// 登場モーション
task EnterBoss()
{
	if (Obj_GetValueD(objEnemy, "BOSS_MOVED", false)) { return; }
	Obj_SetValue(objEnemy, "BOSS_MOVED", true);

	// 登場モーション
	SetAction(objEnemy, ACT_MOVE, 600);
	ObjMove_SetDestAtWeightSpeedUp(objEnemy, CenX, 140, 10, 1, 0.05, 5);
	wait(90);
	MOVE_END = true;
}
// 移動さん
task MoveBossT01_a()
{
	while(!MOVE_END) { yield; }	// 前の移動が終わるまで待機
	MOVE_END = false;

	// 登場モーション
	SetAction(objEnemy, ACT_MOVE, 120);
	MoveToSlowdown(objEnemy, MinX-64, 140-64, 60);
	wait(60);
	MOVE_END = true;
}

task MoveBossT01_b()
{
	while(!MOVE_END) { yield; }	// 前の移動が終わるまで待機
	MOVE_END = false;

	// 登場モーション
	SetAction(objEnemy, ACT_MOVE, 120);
	ObjMove_SetPosition(objEnemy, MaxX+64, 140-64);
	MoveToSlowdown(objEnemy, CenX, 140, 60);
	wait(60);

	MOVE_END = true;
}
