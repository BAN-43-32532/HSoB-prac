#東方弾幕風[Single]
#ScriptVersion[3]
#Title["ﾎﾛｳﾁｬﾝスペカ1"]
#Text["ﾎﾛｳﾁｬﾝスペカ1"]
#Background[""]
#System["./../../../system/System.dnh"]

//---------------------------------------------------------------------

// 関数取り込み
#include"./../../../lib/lib_boss.dnh"
#include"./lib_Horou.dnh"

@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult(777);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(77);		}
	BossEvent();
}

@Initialize {
	let SPELL_ID = 71;
	let SPELL_NAME = [0, 0, 1, 2][Difficult];

	// アイテム数
	bossDropItem = 150;
	//ダメージ透過率
	dIni_Shot = 20;
	// 停止無効
	bossResistTime = 1;

	Boss_Init();	//初期設定
	objEnemy = CreateBoss(BOSS_ID_HOROU);	//ボスセット

	//スペカデータ・セット
	SetSpellCardData(GetSpellCardID(SPELL_ID), SPELL_NAME, 
			GetCurrentScriptDirectory()~"06b_Background.dnh",
			GetBossTexture(objEnemy, I_CUTIN), 0.65, CUTMOTION_NORMAL);

	// チャプター開始
	ChapterStartBoss(GetBossID(objEnemy), SPELL_NAME, CHAPTER_SPELL);

	InitHorou();

	// 使い魔と体力連動
	CheckLinkLife_Boss(objEnemy);

	Task_Main();
}

@MainLoop {
	yield;
}



// メインタスク
task Task_Main
{
	standBy(objEnemy, CenX, 160, 60);
	waitObj(objEnemy, 60);
	CallSpellCard(true);	//スペカ起動
	waitObj(objEnemy, 60);
	
	let wt = [300, 300, 180, 270][Difficult];
	
	let t = 0;
	let muki = 1;
	while(eAlive)
	{
		let sx = [CenX, CenX+rand(64,128), CenX, CenX-rand(64,128)][t%4];
		SetAction(objEnemy, ACT_SHOT2, 90);
		ChargeEffS01(sx, MinY);
		BossCharge(objEnemy);
		wait(90);
		if (!eAlive) { return; }

		MoveTo(objEnemy, sx, 160, 90);
		SetAction(objEnemy, ACT_MOVE, 90);
		wait(30);
		if (!eAlive) { return; }
		
		TSandstorm(360, sx, muki);
		CallSound(sndFlare);
		wait(wt);
		muki = -muki;
		t++;
	}
	
	task ChargeEffS01(x, y)
	{
		let objDummy = CreateShotA1(x, y, 0, 0, BGW_BALL_S_ORANGE, 0);
		SetShotDisabled(objDummy);
		Obj_SetVisible(objDummy, false);
		ObjShot_SetAutoDelete(objDummy, 240);
		
		EffectConcentrationPoint(ObjMove_GetX(objEnemy)-16, ObjMove_GetY(objEnemy)-48, objDummy,
			[192,128,64], 15, 120);
	}
	
	task TSandstorm(timer, x, muki)
	{
		//timer=360,x=boss.x,muki=1 or -1
		let wt = 1;
		let max_r = 360;
		let speed = 3;
		let base_angle = rand(0,360);
		let graphic = BGW_FIRE_ORANGE;
		let graphic2 = [BGW_CHRYSTAL_S_YELLOW, BGW_CHRYSTAL_S_YELLOW, BGW_CHRYSTAL_S_WHITE, BGW_CHRYSTAL_S_YELLOW][Difficult];
		let way = [7, 7, 7, 7][Difficult];
		let shot_span = [4, 3, 4, 3][Difficult];
		let bl_max = [72, 64, 64, 64][Difficult];
		
		let st = 0;
		ascent(t in 0 .. timer)
		{
			if (!eAlive) { return; }
			
			if (t%wt == 0)
			{
				let tmp = (t+1)/timer;
				let sy = MinY;
				if (t < timer/3) { sy += (GetClipHeight+64)/3*GetCurve_d(t/timer*3); }
				else { sy += (GetClipHeight+64)*(1/3+GetCurve_ad((t-timer/3)/timer/2*3)*2/3); }
				
				ascent(i in 0 .. way)
				{
					let ba = base_angle + i*360/way + (t*137.35/7 - tmp^2*180)*muki;
					let sx = x + sin(ba)*max_r;
					let bl = bl_max*GetCurve_d(tmp);
					if (sx > MinX-64 && sx < MaxX+64 && absolute(sx-x) > bl)
					{
						let sa = 90 - cos(ba)*10;
						let ss = speed;
						let to_angle = 180-sa + 15*muki*0;
						let to_speed = speed * (1+tmp*0.5);
						SandStormShot(sx, sy, ss, sa, graphic, 30, to_speed, to_angle, graphic2, (i%shot_span==0));
					}
				}
				st++;
			}
			waitObj(objEnemy, 1);
		}
	}
	
	task SandStormShot(x, y, speed, angle, graphic, delay, to_speed, to_angle, graphic2, shot_flg)
	{
		let obj = My_CreateShotA2Ex(x, y, 0, angle, -speed/15, -speed, graphic, delay, DELAY_ADD);
		ObjMove_AddPatternA2(obj, 30, NO_CHANGE, NO_CHANGE, -speed/120, 0, -speed*4);
		wait(delay);
		if (!shot_flg || ObjMove_GetY(obj) < MinY) { return; }
		
		while(!Obj_IsDeleted(obj))
		{
			if (ObjMove_GetY(obj) < MinY)
			{
				let sa = 180-angle;
				let ss = to_speed;
				SandStormShotSingle(ObjMove_GetX(obj), ObjMove_GetY(obj), ss, sa, graphic2, 15);
				CallSound(sndBulletBreak);
				break;
			}
			yield;
		}

		task SandStormShotSingle(x, y, speed, angle, graphic, delay)
		{
			let obj = My_CreateShotA2Ex(x, y, speed, angle, -speed/120, speed/8, graphic, delay, DELAY_ADD);
			if (Difficult <= D_HARD)
			{
				ObjMove_AddPatternA2(obj, 180, NO_CHANGE, NO_CHANGE, speed/480, 0, speed/2);
			}
			else
			{
				ObjMove_AddPatternA2(obj, 180, NO_CHANGE, NO_CHANGE, speed/180, 0, speed/2);
				wait(240);
				if (!Obj_IsDeleted(obj))
				{
					ascent(i in 0 .. 2)
					{
						My_CreateShotA2Ex(ObjMove_GetX(obj), ObjMove_GetY(obj),
							speed/2, angle+(i-0.5)*20, -speed/60/4, speed/4, BGW_VIRUS_YELLOW, 0, DELAY_ADD);
					}
					Obj_Delete(obj);
				}
			}
		}
	}

}

