#東方弾幕風[Single]
#ScriptVersion[3]
#Title["6面　会話前半"]
#Text["6面　会話前半"]
#Background[""]
#System["./../../../system/System.dnh"]

//---------------------------------------------------------------------

// 関数取り込み
#include"./../../../lib/lib_boss.dnh"
#include"./../../../lib/lib_talk.dnh"

// 各ボスのオブジェクトID
let MOVE_END = false;

@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult( 0);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(-1);	}
	BossEvent();
}

@Initialize {
	Boss_Init();	//初期設定
	
	objEnemy  = CreateBossTalk(BOSS_ID_HOROU);

	ChapterReset();	//チャプターリセット

	Task_Main();
}

@MainLoop {
	yield;

}

// メインタスク
task Task_Main()
{
	// 魔法陣リセット
	BossEffect_ResetMagicCircle();

	// 会話準備
	StartTalk();

	wait(120);

	//会話処理
	FuncTalk();
	
	//次のシーンへ
	FinishTalk(true);
	while(!MOVE_END) { yield; }
	Boss_Finalize(objEnemy, false, false);
}

// 会話処理
function FuncTalk()
{
	// オブジェクト作成
	let cutinBoss1   = CreateTalkObject(BOSS_ID_HOROU, true);
	let cutinPlayer1 = CreateTalkObject(BOSS_ID_MARISA, false);
	
	let talkID = -1;
	loop
	{
		let talkType = FuncTalkSingle(talkID);
		if (talkType == 0) { break; }
		else if (talkType == 1) { talkID = max(0, talkID+WaitNext()); }
		else { talkID++; }
	}

	// 会話処理単発（巻き戻しも出来るように）
	function FuncTalkSingle(talkID)
	{
		let talk_type = 1;
		alternative(talkID)
		case(-1)
		{
			// 初期設定
			SetImageVisible(cutinBoss1, false);
			SetImageFoward(cutinPlayer1, true);
			ChangeTalkTexture(cutinPlayer1, I_WORRY);
			
			wait(15);	// 表示しきるまでウェイト
			talk_type = 2;	// キー入力待ちしない
		}
		case(0)
		{
			ChangeTalkTexture(cutinPlayer1, I_WORRY);
			SetTalkEx(cutinPlayer1, "魅魔様…？[r]今までのは…夢だったのか？");
		}
		case(1)
		{
			ChangeTalkTexture(cutinPlayer1, I_WORRY);
			SetTalkEx(cutinPlayer1, "うっ、思い出そうとすると頭が…");
		}
		case(2)
		{
			ChangeTalkTexture(cutinPlayer1, I_NOTICE);
			SetTalkEx2(cutinBoss1, "星の記憶も全て根源へと回帰する。[r]いわんや花は根に、鳥は[ruby rb=\"故郷\" rt=\" ふるす\"]に。", -48, -280);
		}
		case(3)
		{
			ChangeTalkTexture(cutinPlayer1, I_NORMAL);
			ChangeTalkTexture(cutinBoss1, I_WORRY);

			EnterBoss();
			BossScene_SetNameVisible(objScene, true);	//ボスネーム表示状態
			SetImageVisible(cutinBoss1, true);	// ボス画像出現フラグ
			SetBossName(cutinBoss1, objEnemy);

			SetTalkEx(cutinBoss1, "という事で、もう邪魔はやめてくれよう");
		}
		case(4)
		{
			ChangeTalkTexture(cutinPlayer1, I_NOTICE2);
			SetTalkEx(cutinPlayer1, "お前が最後の鳥だな。成る程、[r]時を止めていたのは[ruby rb=\"朱鷺\" rt=\"ト　キ\"]ってか、わはは");
		}
		case(5)
		{
			ChangeTalkTexture(cutinBoss1, I_WORRY);
			SetTalkEx(cutinBoss1, "もうやめよう、[r]金ピカ塔はもう潰れてしまった。");
		}
		case(6)
		{
			ChangeTalkTexture(cutinBoss1, I_QUESTION);
			SetTalkEx(cutinBoss1, "あれ？　名前違ったっけ？[r]えーと確か…");
		}
		case(7)
		{
			ChangeTalkTexture(cutinPlayer1, I_NORMAL);
			SetTalkEx(cutinPlayer1, "禁呪塔だよ。またの名を霧雨魔法店");
		}
		case(8)
		{
			ChangeTalkTexture(cutinBoss1, I_QUESTION);
			SetTalkEx(cutinBoss1, "そうか霧雨魔法店か。[r]じゃあ言い直すね。");
		}
		case(9)
		{
			ChangeTalkTexture(cutinBoss1, I_WORRY);
			SetTalkEx(cutinBoss1, "もうやめよう、[r]霧雨魔法店はもう潰れてしまった。");
		}
		case(10)
		{
			ChangeTalkTexture(cutinPlayer1, I_UPSET);
			SetTalkEx(cutinPlayer1, "勝手に潰すな、禁呪塔の方で呼べ");
		}
		case(11)
		{
			ChangeTalkTexture(cutinBoss1, I_NORMAL);
			SetTalkEx(cutinBoss1, "幻想郷の停止はじきに完全に元に[r]戻るし、セトくん潰れたなら多分[r]砂漠も無くなるんじゃない？");
		}
		case(12)
		{
			ChangeTalkTexture(cutinBoss1, I_NORMAL);
			SetTalkEx(cutinBoss1, "お前らの世界は全部元通りだよ。");
		}
		case(13)
		{
			ChangeTalkTexture(cutinPlayer1, I_NOTICE);
			ChangeTalkTexture(cutinBoss1, I_DOYA);
			SetTalkEx(cutinBoss1, "じゃ、あとはそうなる前に、[r]私結界飛び越えるから！");
		}
		case(14)
		{
			//移動
			while(!MOVE_END) { yield; }	// 前の移動終わりまで待機
			MoveBossT01_a();

			SetImageVisible(cutinBoss1, false);	// ボス画像出現フラグ
			DeleteAllFukidashi();
		}
		case(15)
		{
			ChangeTalkTexture(cutinPlayer1, I_DOYA2);
			SetTalkEx(cutinPlayer1, "外界に行く為に時間ごと結界を止めたのか。[r]そうかその手があったか…そうか。");
		}
		case(16)
		{
			ChangeTalkTexture(cutinPlayer1, I_NORMAL);
			SetTalkEx(cutinPlayer1, "だが、朱鷺のお前にそれは出来んよ。[r]時を飛び越えない事にはな");
		}
		case(17)
		{
			//移動
			while(!MOVE_END) { yield; }	// 前の移動終わりまで待機
			MoveBossT01_b();

			SetImageVisible(cutinBoss1, true);	// ボス画像出現フラグ
			ChangeTalkTexture(cutinBoss1, I_SURPRISE);
			SetTalkEx(cutinBoss1, "ほろっ！？");
			SetFukidashiType(cutinBoss1, FUKIDASHI_ANGER);
		}
		case(18)
		{
			ChangeTalkTexture(cutinPlayer1, I_NORMAL);
			SetTalkEx(cutinPlayer1, "聞いた事があるぜ、[r]幻想郷の結界は霊夢と紫による二段構え。");
		}
		case(19)
		{
			ChangeTalkTexture(cutinPlayer1, I_WORRY);
			SetTalkEx(cutinPlayer1, "紫め、止まってて出て来れないと思ったが、[r]さては最初から止まってなかったな");
		}
		case(20)
		{
			ChangeTalkTexture(cutinBoss1, I_ANGER);
			SetTalkEx(cutinBoss1, "よっしゃ、その紫って奴を倒せばいいんだね。");
		}
		case(21)
		{
			ChangeTalkTexture(cutinBoss1, I_DOYA);
			SetTalkEx(cutinBoss1, "私の羽は七色だから、[r]一色だけの奴なんて楽勝楽勝！");
		}
		case(22)
		{
			ChangeTalkTexture(cutinPlayer1, I_NOTICE);
			SetTalkEx(cutinPlayer1, "盛り上がってる所悪いが、[r]その前に私の家と森をすぐ元に戻して貰う。");
		}
		case(23)
		{
			ChangeTalkTexture(cutinPlayer1, I_SMILE2);
			SetTalkEx(cutinPlayer1, "魔法使いの私には分かるぜ、[r]元凶はお前の持つ[ruby rb=\" 魔本。\" rt=\"グリモワール\"]");
		}
		case(24)
		{
			ChangeTalkTexture(cutinPlayer1, I_DOYA);
			SetTalkEx(cutinPlayer1, "それも、その辺の妖怪が使ってこの力だ、[r]私が持つに相応しいレア物のようだな");
		}
		case(25)
		{
			ChangeTalkTexture(cutinBoss1, I_NORMAL);
			SetTalkEx(cutinBoss1, "外へ出て不老不死になるのは私だよ。");
		}
		case(26)
		{
			ChangeTalkTexture(cutinBoss1, I_ANGER);
			SetTalkEx(cutinBoss1, "もっと強くなって、どこかで仲間を見つけて、[r]幻想郷の外でも生きて行く！");
		}
		case(27)
		{
			ChangeTalkTexture(cutinPlayer1, I_SMILE3);
			SetTalkEx(cutinPlayer1, "お前のような奴との勝負は面白そうだ。");
			
			// BGM
			PlayMusicWithName( 13, 30, 30 );
		}
		case(28)
		{
			ChangeTalkTexture(cutinPlayer1, I_DOYA);
			SetTalkEx(cutinPlayer1, "だが私が時間を飛び越え未来を予言する…[r]勝つのは私だ！");
		}
		case(29)
		{
			ResetTalkImagePosition(cutinPlayer1, 112, 24, 1.25);
// おまえはそこでずれていけ
			ChangeTalkTexture(cutinPlayer1, I_CUTIN2);
			ChangeTalkTexture(cutinBoss1, I_SPECIAL);
			// 吹き出しリセット
			SetFukidashiType(cutinPlayer1, FUKIDASHI_NORMAL);
			SetFukidashiType(cutinBoss1, FUKIDASHI_NORMAL);
			// 吹き出し削除
			DeleteAllFukidashi();
			// 会話
			_SetTalk(cutinPlayer1, "幻想郷のルールを破ったお前に…勝ち目は無い！", -32, -16);
//			SetFukidashiType(cutinPlayer1, FUKIDASHI_ANGER);
			_SetTalk(cutinBoss1, "私の時間は…ここで止まってはいない！", 32, 48);
//			SetFukidashiType(cutinBoss1, FUKIDASHI_ANGER);
			// カットインを前面に出す
			ChangeImageFowardEx([cutinPlayer1, cutinBoss1]);
		}
		others
		{
			return(0);
		}
		return(talk_type);
	}
}

// 登場モーション
task EnterBoss()
{
	if (Obj_GetValueD(objEnemy, "BOSS_MOVED", false)) { return; }
	Obj_SetValue(objEnemy, "BOSS_MOVED", true);

	// 登場モーション
	SetAction(objEnemy, ACT_MOVE, 600);
	ObjMove_SetDestAtWeightSpeedUp(objEnemy, CenX, 140, 10, 1, 0.05, 5);
	wait(90);
	MOVE_END = true;
}


// 移動さん
task MoveBossT01_a()
{
	while(!MOVE_END) { yield; }	// 前の移動が終わるまで待機
	MOVE_END = false;

	// 登場モーション
	SetAction(objEnemy, ACT_MOVE, 120);
	MoveToSlowdown(objEnemy, MinX-64, 140-64, 60);
	wait(60);
	MOVE_END = true;
}

task MoveBossT01_b()
{
	while(!MOVE_END) { yield; }	// 前の移動が終わるまで待機
	MOVE_END = false;

	// 登場モーション
	SetAction(objEnemy, ACT_MOVE, 120);
	ObjMove_SetPosition(objEnemy, MaxX+64, 140-64);
	MoveToSlowdown(objEnemy, CenX, 140, 60);
	wait(60);

	MOVE_END = true;
}
