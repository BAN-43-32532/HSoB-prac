#東方弾幕風[Single]
#ScriptVersion[3]
#Title["2面　会話後半"]
#Text["2面　会話後半"]
#Background[""]
#System["./../../../system/System.dnh"]

//---------------------------------------------------------------------

// 関数取り込み
#include"./../../../lib/lib_boss.dnh"
#include"./../../../lib/lib_talk.dnh"

// 各ボスのオブジェクトID
let MOVE_END = false;

@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult( 0);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(-1);	}
	BossEvent();
}

@Initialize {
	Boss_Init();	//初期設定
	
	objEnemy  = CreateBossTalk(BOSS_ID_CHII);
	Obj_SetVisible(GetBossImageID(objEnemy), false);	//画像非表示

	ChapterReset();	//チャプターリセット

	Task_Main();
}

@MainLoop {
	yield;

}

// メインタスク
task Task_Main()
{
	// 魔法陣リセット
	BossEffect_ResetMagicCircle();

	// 会話準備
	StartTalk();

	wait(120);

	//会話処理
	FuncTalk();
	
	//次のシーンへ
	FinishTalk(true);
	Boss_Finalize(objEnemy, false, false);
}

// 会話処理
function FuncTalk()
{
	// オブジェクト作成
	let cutinBoss1   = CreateTalkObject(BOSS_ID_CHII, true);
	let cutinPlayer1 = CreateTalkObject(BOSS_ID_MARISA, false);
	
	let talkID = -1;
	loop
	{
		let talkType = FuncTalkSingle(talkID);
		if (talkType == 0) { break; }
		else if (talkType == 1) { talkID = max(0, talkID+WaitNext()); }
		else { talkID++; }
	}

	// 会話処理単発（巻き戻しも出来るように）
	function FuncTalkSingle(talkID)
	{
		let talk_type = 1;
		alternative(talkID)
		case(-1)
		{
			// 初期設定
			SetImageFoward(cutinPlayer1, true);
			ChangeTalkTexture(cutinBoss1, I_BORO1);
			ChangeTalkTexture(cutinPlayer1, I_NORMAL);
			
			wait(15);	// 表示しきるまでウェイト
			talk_type = 2;	// キー入力待ちしない
		}
		case(0)
		{
			ChangeTalkTexture(cutinPlayer1, I_NORMAL);
			SetTalkEx(cutinPlayer1, "分かってると思うが、[r]一騎当千とは一人で千人の敵を倒す事でな");
		}
		case(1)
		{
			ChangeTalkTexture(cutinBoss1, I_BORO1);
			SetTalkEx(cutinBoss1, "つまり自分のことだと言いたいでちな");
		}
		case(2)
		{
			ChangeTalkTexture(cutinPlayer1, I_UPSET2);
			SetTalkEx(cutinPlayer1, "私はそんなに傲慢じゃないのだが…");
		}
		case(3)
		{
			ChangeTalkTexture(cutinPlayer1, I_NOTICE2);
			SetTalkEx(cutinPlayer1, "まあ良いや、これからは[r]一騎当千の大魔法使いと呼んでくれ");
		}
		case(4)
		{
			ChangeTalkTexture(cutinBoss1, I_BORO1);
			SetTalkEx(cutinBoss1, "そんな小さな炉でその火力…[r]悔しいでちぃ、羨ましいでちぃ");
		}
		case(5)
		{
			ChangeTalkTexture(cutinPlayer1, I_SMILE3);
			SetTalkEx(cutinPlayer1, "元の質量を保存してる場合じゃないんでな");
		}
		others
		{
			return(0);
		}
		return(talk_type);
	}
}

// 登場モーション
task EnterBoss()
{
	if (Obj_GetValueD(objEnemy, "BOSS_MOVED", false)) { return; }
	Obj_SetValue(objEnemy, "BOSS_MOVED", true);

	// 登場モーション
	SetAction(objEnemy, ACT_MOVE, 600);
	ObjMove_SetDestAtWeightSpeedUp(objEnemy, CenX, 140, 10, 1, 0.05, 5);
	wait(90);
	MOVE_END = true;
}
