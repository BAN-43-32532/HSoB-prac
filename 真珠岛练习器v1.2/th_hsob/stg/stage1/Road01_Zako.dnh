// -------------- ìGíPëÃÇÃèàóù -------------- //

function MoveWithBackS01(objEnemy)
{
	let BX = MaxX+384;
	let BY = MinY-128;
	let BS = 0.12;
	FairyFadeIN_MotionStraight02(objEnemy, 120, (ObjMove_GetX(objEnemy)-BX)*BS, (ObjMove_GetY(objEnemy)-BY)*BS);
	return(atan2(ObjMove_GetY(objEnemy)-BY, ObjMove_GetX(objEnemy)-BX));
}
function MoveWithBackS01_GetAngle(x, y)
{
	let BX = MaxX+384;
	let BY = MinY-128;
	let BS = 0.12;
	return(atan2(x-BY, y-BX));
}

// ç≈èâÇÃódê∏
task SetEnemyF01(iniX, iniY, iniSpeed, iniAngle, iniValue, iniWait)
{
	if (flgStopSetZako) { return; }
	
	let e_type = iniValue%2;
	let eSize = ENEMY_S;
	let eColor = EFF_RED;
	let emnImage = imgZakoFairyRed;
	
	let objEnemy = MakeEnemy(iniX, iniY, 10, eSize);
	SetEnemyDropItem(objEnemy, [MY_ITEM_TIME_2], [MY_ITEM_TIME_1, 0]);
	DrawFairy(objEnemy, emnImage, FAIRY_SMALL);
	TAct();
	WaitForKilled(objEnemy);
	ZakoFinalize(objEnemy, eColor);
	
	task TAct()
	{
		// éûä‘í‚é~ââèo
		FairyFadeIN_TimeStop(objEnemy, 120);
		MoveWithBackS01(objEnemy);

		waitObj(objEnemy, 30);
		TShot();

		let moveAngle = atan2(iniY-0, iniX-CenX);
		Enemy_SetPatternA2(objEnemy, 0, 0, moveAngle, iniSpeed/300, 0, iniSpeed);
		TCheckDispINOut(objEnemy, 16);
	}
	
	// ÉVÉáÉbÉg
	task TShot()
	{
		let wt = [240, 240, 30, 15][Difficult];
		let shot_delay = [60, 45, 15, 0][Difficult];
		let timer = [0, 90, 75, 120][Difficult] + shot_delay;
		
		let speed = [1.5, 2, 2.5, 2.5][Difficult];
		let speed_max = [1.5, 2, 2.5, 4][Difficult];
		let way = 1;
		let way_angle = 45;
		let graphic = BGW_BALL_S_RED;
		
		let t = shot_delay;
		waitObj(objEnemy, shot_delay);
		while(CanShotBullet(objEnemy) && t < timer)
		{
			let sa = GetAngleToPlayer(objEnemy);
			let ss = speed + (speed_max-speed)*(t/timer);
			CreateShotWayA2(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy),
				0, sa, ss/15, ss, graphic, 15, way, way_angle, 0);
			CallSound(sndShot2);
			waitObj(objEnemy, wt);
			t += wt;
		}
	}
}

// è„Ç©ÇÁóàÇƒãAÇ¡ÇƒÇ¢Ç≠ódê∏
task SetEnemyF02(iniX, iniY, iniSpeed, iniAngle, iniValue, iniWait)
{
	if (flgStopSetZako) { return; }
	
	let e_type = iniValue%2;
	let eSize = ENEMY_L;
	let eColor = EFF_RED;
	let emnImage = imgZakoFairyRed;
	
	let objEnemy = MakeEnemy(iniX, iniY, 500, eSize);
	DrawFairy(objEnemy, emnImage, FAIRY_LARGE);
	TAct();
	WaitForKilled(objEnemy);
	ZakoFinalize(objEnemy, eColor);
	
	task TAct()
	{
		// éûä‘í‚é~ââèo
		FairyFadeIN_TimeStop(objEnemy, 120);
		MoveWithBackS01(objEnemy);
		
		waitObj(objEnemy, 30);
		TShot();
		TMove();
	}
	
	// à⁄ìÆ
	task TMove()
	{
		waitObj(objEnemy, 360);
		Enemy_SetPatternA2(objEnemy, 0, 0, 270, iniSpeed/120, 0, iniSpeed);
		TCheckDispINOut(objEnemy, 16);
	}
	
	// ÉVÉáÉbÉg
	task TShot()
	{
		ascent(i in 0 .. 6)
		{
			if (!CanShotBullet(objEnemy)) { break; }
			TShot_sub(GetAngleToPlayer(objEnemy)+180, [1, -1][i%2], [BGW_SCALE_RED,BGB_SCALE_RED][i%2]);
			waitObj(objEnemy, 90);
		}
		
		task TShot_sub(base_angle, muki, graphic)
		{
			let speed = [1.25, 1.25, 1.25, 1.25][Difficult];
			let srate = [0.1, 0.1, 0.2, 0.2][Difficult];
			let way = [4, 4, 6, 8][Difficult];
			let way_angle = [29, 29, 19, 19.5][Difficult];

			let count = [12, 12, 20, 20][Difficult];
			let wt = [8, 8, 5, 5][Difficult];
			
			ascent(t in 0 .. count)
			{
				if (!CanShotBullet(objEnemy)) { break; }

				let ba = base_angle + t/count*360*muki;
				ascent(i in 0 .. way)
				{
					let sr = 0 + (way-i)*2;
					let sa = ba - (i-(way-1)/2)*way_angle*muki;
					let sx = ObjMove_GetX(objEnemy) + cos(sa)*sr;
					let sy = ObjMove_GetY(objEnemy) + sin(sa)*sr;
					let ss = speed * (1+i*srate);
					
					My_CreateShotA2(sx, sy, 0, sa, ss/15, ss, graphic, 15);
				}
				waitObj(objEnemy, wt);
			}
		}
	}
}

// îwåiÇ…ó¨ÇÍÇÈódê∏
task SetEnemyF03(iniX, iniY, iniSpeed, iniAngle, iniValue, iniWait)
{
	if (flgStopSetZako) { return; }
	
	let e_type = iniValue%2;
	let eSize = ENEMY_S;
	let eColor = EFF_RED;
	let emnImage = imgZakoFairyRed;
	
	let objEnemy = MakeEnemy(iniX, iniY, 10, eSize);
	SetEnemyDropItem(objEnemy, [MY_ITEM_TIME_2], [MY_ITEM_TIME_1, 0]);
	DrawFairy(objEnemy, emnImage, FAIRY_SMALL);
	TAct();
	WaitForKilled(objEnemy);
	ZakoFinalize(objEnemy, eColor);
	
	task TAct()
	{
		// éûä‘í‚é~ââèo
		FairyFadeIN_TimeStop(objEnemy, 120);
		let moveAngle = MoveWithBackS01(objEnemy);

		waitObj(objEnemy, 30);
		TShot();

		let speed = iniSpeed;
		let a = iniAngle;
	//	if (e_type) { a = moveAngle; }
		Enemy_SetPatternA2(objEnemy, 0, 0, a, speed/240, 0, speed);
		TCheckDispINOut(objEnemy, 16);
	}
	
	// ÉVÉáÉbÉg
	task TShot()
	{
		if (!e_type)
		{
			// êiçsï˚å¸
			let wt = 60;
			let shot_delay = [0, 0, 0, 0][Difficult];
			let count = [0, 0, 1, 2][Difficult];
			if (iniValue >= 2) { count = [1, 1, 1, 2][Difficult]; }
			
			let speed = [2, 2.5, 3, 3.5][Difficult];
			let way = [2, 2, 3, 5][Difficult];
			let way_angle = [3, 3, 5, 5][Difficult];
			let graphic = BGW_BALL_BS_RED;
			
			let st = 0;
			waitObj(objEnemy, shot_delay);
			while(CanShotBullet(objEnemy) && st < count)
			{
				let sa = iniAngle;
				let ss = speed * (1+st/10);
				CreateShotWayA2(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy),
					0, sa, ss/60, ss, graphic, 15, way, way_angle, 0);
				CallSound(sndShot2);
				waitObj(objEnemy, wt);
				st++;
			}
		}
		else
		{
			// é©ã@ë_Ç¢
			let wt = 60;
			let shot_delay = [0, 0, 0, 0][Difficult];
			let count = [0, 1, 1, 1][Difficult];
			
			let speed = [2, 2.5, 3, 3.5][Difficult];
			let way = [2, 2, 4, 6][Difficult];
			let way_angle = [3, 3, 5, 10][Difficult];
			let graphic = BGW_BALL_BS_RED;
			
			let st = 0;
			waitObj(objEnemy, shot_delay);
			while(CanShotBullet(objEnemy) && st < count)
			{
				let sa = GetAngleToPlayer(objEnemy);
				let ss = speed * (1+st/10);
				CreateShotWayA2(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy),
					0, sa, ss/60, ss, graphic, 15, way, way_angle, 0);
				CallSound(sndShot2);
				waitObj(objEnemy, wt);
				st++;
			}
		}
	}
}

// îwåiÇ…ó¨ÇÍÇÈódê∏ÇªÇÃÇQ
task SetEnemyF04(iniX, iniY, iniSpeed, iniAngle, iniValue, iniWait)
{
	if (flgStopSetZako) { return; }
	
	let e_type = iniValue%2;
	let eSize = ENEMY_M;
	let eColor = EFF_RED;
	let emnImage = imgZakoFairyRed;
	
	let objEnemy = MakeEnemy(iniX, iniY, 200, eSize);
	DrawFairy(objEnemy, emnImage, FAIRY_MIDDLE);
	TAct();
	WaitForKilled(objEnemy);
	ZakoFinalize(objEnemy, eColor);
	
	task TAct()
	{
		// égÇ¢ñÇîrèo
		let iway = [3, 4, 5, 6][Difficult];
		let ba = atan2(CenY-iniY, CenX-iniX) - 30*iniValue;
		ascent(i in 0 .. iway)
		{
			SetEnemyI02(objEnemy, iniX, iniY, 1, 90, ba+i*360/iway, 0, iniValue);
		}

		// éûä‘í‚é~ââèo
		FairyFadeIN_TimeStop(objEnemy, 165);
		FairyFadeIN_MotionStraight(objEnemy, 150, 180*cos(iniAngle), 150*sin(iniAngle));

		waitObj(objEnemy, 30);
		TShot();
		TMove();
		
	}
	
	// à⁄ìÆ
	task TMove()
	{
		let speed = 2;
		let a = GetAngleToPlayer(objEnemy);
		Enemy_SetPatternA2(objEnemy, 0, 0, iniAngle, speed/240, 0, speed);
		TCheckDispINOut(objEnemy, 16);
	}
	
	// ÉVÉáÉbÉg
	task TShot()
	{
		let wt = [240, 120, 120, 60][Difficult];
		let shot_delay = [60, 0, 0, 0][Difficult];
		let count = [0, 1, 3, 4][Difficult];
		
		let speed = [2, 2, 2.5, 2.5][Difficult];
		let way = [6, 10, 14, 16][Difficult];
		let way2 = 3;
		let graphic = BGW_BALL_BS_PURPLE;
		
		let st = 0;
		waitObj(objEnemy, shot_delay);
		while(CanShotBullet(objEnemy) && st < count)
		{
			let ba = GetAngleToPlayer(objEnemy);
			ascent(i in 0 .. way2)
			{
				let sa = ba + (i-(way2-1)/2)*2;
				CreateShotCircleA2(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy),
					0, sa, speed/60, speed, graphic, 15, way, 12);
			}
			CallSound(sndShot2);
			waitObj(objEnemy, wt);
			st++;
		}
	}
}

// ïÅí Ç…ìÆÇ≠ódê∏s
task SetEnemyF05(iniX, iniY, iniSpeed, iniAngle, iniValue, iniWait)
{
	if (flgStopSetZako) { return; }
	
	let e_type = iniValue%2;
	let eSize = ENEMY_S;
	let eColor = EFF_RED;
	let emnImage = imgZakoFairyRed;
	
	let objEnemy = MakeEnemy(-32, -32, 10, eSize);
	DrawFairy(objEnemy, emnImage, FAIRY_SMALL);
	TAct();
	WaitForKilled(objEnemy);
	ZakoFinalize(objEnemy, eColor);
	
	task TAct()
	{
		TMove();
		TShot();
	}
	
	task TMove()
	{
		let moveAngle = MoveWithBackS01_GetAngle(iniX, iniY);
		let pos = GetVergeDistance(iniX, iniY, moveAngle+180);
		let r = pos[0]+16;
		
		// âÊñ í[ÇÊÇËè≠ÇµâúÇ©ÇÁÉXÉ^Å[Ég
		let speed = iniSpeed;
		let vx = speed*cos(moveAngle); let vy = speed*sin(moveAngle);
		ObjMove_SetPosition(objEnemy, iniX-r*cos(moveAngle), iniY-r*sin(moveAngle));
		Enemy_SetPatternA2(objEnemy, 0, speed/2, moveAngle, -speed/120/4, 0, speed/4);
		Enemy_SetPatternB2(objEnemy, 120, NO_CHANGE, NO_CHANGE, vx/120, -0.02, vx, -1);
		TCheckDispINOut(objEnemy, 16);
	}
	
	// ÉVÉáÉbÉg
	task TShot()
	{
		let wt = [90, 90, 90, 60][Difficult];
		let count = [0, 0, 1, 3][Difficult];
		let speed = [2, 2, 2.5, 4][Difficult];
		let graphic = BGB_ICE_RED;
		
		let shot_delay = trunc(rand(0,wt*2)/5)*5 + 10;
		let st = 0;
		waitObj(objEnemy, shot_delay);
		while(CanShotBullet(objEnemy) && st < count)
		{
			let sa = 90 - ObjMove_GetX(objEnemy)/CenX*15;
			CreateShotCrystalA2(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy),
				0, sa, speed/120, speed, graphic, 15, 3, 1, 0.05);
		//	CallSound(sndShot3);
			waitObj(objEnemy, wt);
			st++;
		}
		
	}
}

// óxÇÈâAózíe
task SetEnemyI01(iniX, iniY, iniSpeed, iniAngle, iniValue, iniWait)
{
	if (flgStopSetZako) { return; }
	
	let iniMuki = [1, -1][cos(iniAngle) > 0];
	let rorate_angle = 0;

	let e_type = iniValue%2;
	let eSize = ENEMY_M;
	let eColor = EFF_RED;
	let emnImage = imgZakoFairyRed;
	
	let objEnemy = MakeEnemy(iniX, iniY, 165, eSize);
	DrawOnmyou( objEnemy, EFF_RED );
	TAct();
	WaitForKilled(objEnemy);
	ZakoFinalize(objEnemy, eColor);
	
	task TAct()
	{
		TShot();
		TMove();
	}
	
	// à⁄ìÆ
	task TMove()
	{
		TCheckDispINOut(objEnemy, 16);

		rorate_angle = iniAngle + 180 + iniValue;
		let add_a = 3 * iniMuki;
		
		let bx = ObjMove_GetX(objEnemy);
		let by = ObjMove_GetY(objEnemy);
		let vx = iniSpeed*cos(iniAngle);
		let vy = iniSpeed*sin(iniAngle);
		
		let t = 0;
		while(CanShotBullet(objEnemy))
		{
			let tmp_s = 0.33;
			if (t < 180) { tmp_s = 1 - t/180*0.67; }
			else if (t > 180) { tmp_s = 0.33 + min(1,(t-180)/180)*0.67; }
			let er = 64*tmp_s;
			let ex = bx + cos(rorate_angle)*er;
			let ey = by + sin(rorate_angle)*er;
			ObjMove_SetDestAtFrame(objEnemy, ex, ey, 1);
			bx += vx*tmp_s; by += vy*tmp_s;
			rorate_angle += add_a;
			t++;
			waitObj(objEnemy, 1);
		}
	}
	
	// ÉVÉáÉbÉg
	task TShot()
	{
		waitObj(objEnemy, 30);

		let wt = 3;
		let timer = [180, 300, 300, 300][Difficult];
		
		let speed = [2, 2.5, 2.5, 2.5][Difficult];
		let way = [1, 1, 2, 3][Difficult];
		let move_angle = [5, 5, 6.66, 7.5][Difficult];
		let graphic = BGW_RICE_S_RED;
		let shot_ct = 7;
		
		let st = 0;
		let t = 0;
		while(CanShotBullet(objEnemy) && t < timer)
		{
			if (st%10 < shot_ct)
			{
				let ba = -90 + cos(rorate_angle)*move_angle;
				ascent(i in 0 .. way)
				{
					let sa = -90 + cos(rorate_angle)*move_angle*(1+i*0.1);
					let sr = 12 + i*4;
					let sx = ObjMove_GetX(objEnemy) + sr*cos(sa);
					let sy = ObjMove_GetY(objEnemy) + sr*sin(sa);
					let ss = speed * (1 + i*0.1);
					My_CreateShotB2(sx, sy, ss*cos(sa), ss*sin(sa), 0, ss/60, 99, ss, graphic, 15);
				}
				if (st%2 == 0) { CallSound(sndShot2); }
			}
			waitObj(objEnemy, wt);
			t += wt;
			st++;
		}
	}
}
// óxÇÈâAózíeÇªÇÃÇQ
task SetEnemyI02(parent, iniX, iniY, iniSpeed, iniAngle, iniValue, iniWait, iniMuki)
{
	if (flgStopSetZako) { return; }

	let e_type = iniValue%2;
	let eSize = ENEMY_M;
	let eColor = EFF_RED;
	let emnImage = imgZakoFairyRed;
	
	let objEnemy = MakeEnemy(iniX, iniY, 100, eSize);
	DrawOnmyou( objEnemy, EFF_RED );
	TAct();
	WaitForKilled(objEnemy);
	ZakoFinalize(objEnemy, eColor);
	
	task TAct()
	{
		TShot();
		TMove();
	}
	
	// à⁄ìÆ
	task TMove()
	{

		let add_a = 3 * iniMuki;
		
		let bx = ObjMove_GetX(objEnemy);
		let by = ObjMove_GetY(objEnemy);
		let vx = iniSpeed*cos(iniAngle);
		let vy = iniSpeed*sin(iniAngle);
		let ba = iniValue;
		
		let t = 0;
		
		ZakoEnterEffect_Onmyou(objEnemy, 150);
		while(CanShotBullet(objEnemy) && t <= 150)
		{
			let tmp = min((1-t/150)*4, 1);
			let br = sin((t+1)/150*90)*64;
			if (!Obj_IsDeleted(parent))
			{
				bx = ObjMove_GetX(parent);
				by = ObjMove_GetY(parent);
			}
			ObjMove_SetPosition(objEnemy, bx+cos(ba)*br, by+sin(ba)*br);
			ba += add_a*tmp;
			t++;
			waitObj(objEnemy, 1);
		}
		if (CanShotBullet(objEnemy))
		{
			Enemy_SetPatternA2(objEnemy, 0, 0, ba+90*iniMuki, 4/240, iniMuki, 8);
			TCheckDispINOut(objEnemy, 16);
		}
	}
	
	// ÉVÉáÉbÉg
	task TShot()
	{
		waitObj(objEnemy, 180);

		let wt = 5;
		let timer = [45, 75, 90, 90][Difficult];
		
		let speed = [1.5, 1.5, 1.75, 2][Difficult];
		let way = 3;
		let graphic = BGW_ICE_RED;
		
		let st = 0;
		let t = 0;
		while(CanShotBullet(objEnemy) && t < timer)
		{
			let ss = speed * (1 + st*0.1);
			let sa = Enemy_GetAngle(objEnemy) - 90*iniMuki - t*iniMuki*0.75;
			CreateShotWayA2(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy),
				0, sa, ss/60, ss, graphic, 15, way, 3, 0);
			waitObj(objEnemy, wt);
			t += wt;
			st++;
		}
	}
}
