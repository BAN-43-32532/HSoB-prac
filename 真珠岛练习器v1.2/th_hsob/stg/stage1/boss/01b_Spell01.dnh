#東方弾幕風[Single]
#ScriptVersion[3]
#Title["乱々スペカ1"]
#Text["乱々スペカ1"]
#Background[""]
#System["./../../../system/System.dnh"]

//---------------------------------------------------------------------

// 関数取り込み
#include"./../../../lib/lib_boss.dnh"
#include"./lib_Ranran.dnh"

@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult(160);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(35);		}
	BossEvent();
}

@Initialize {
	let SPELL_ID = 2;
	let SPELL_NAME = [1, 1, 2, 3][Difficult];
	
	//ダメージ透過率
	dIni_Shot = 10;
	if (Difficult >= D_HARD) { dIni_Shot = 15; }
	// アイテム数
	bossDropItem = 100;
	//初期設定
	Boss_Init();

	objEnemy = CreateBoss(BOSS_ID_RANRAN);	//ボスセット

	//スペカデータ・セット
	SetSpellCardData(GetSpellCardID(SPELL_ID), SPELL_NAME, 
			GetCurrentScriptDirectory()~"01a_Background.dnh",
			GetBossTexture(objEnemy, I_CUTIN), 0.6, CUTMOTION_NORMAL);

	// チャプター開始
	ChapterStartBoss(GetBossID(objEnemy), SPELL_NAME, CHAPTER_SPELL);

	Task_Main();
}

@MainLoop {
	yield;
}

// メインタスク
task Task_Main
{
	standBy(objEnemy, CenX, 140, 60);
	waitObj(objEnemy, 60);
	
	let muki = rand_dir();
	Shot01(muki);

	waitObj(objEnemy, 135);
	CallSpellCard(true);	//スペカ起動

	let wt = [540+60, 540, 720, 720][Difficult];

	waitObj(objEnemy, wt-90-60+15);
	while(eAlive)
	{
		muki = -muki;
		Shot01(muki);
		waitObj(objEnemy, wt);
	}
}

task Shot01(muki)
{
	let bx = ObjMove_GetX(objEnemy);
	let by = ObjMove_GetY(objEnemy);
	
	let speed = [3, 3, 3, 3][Difficult];
	let angle = rand(0, 360);
	let way = [8, 8, 8, 8][Difficult];
	
	ascent(i in 0 .. 4)
	{
		SetCloud(bx, by, 0+(i-1.5)*45, 0+(i-1.5)*15, 4-absolute(i-1.5), -1);
		SetCloud(bx, by, 180+(i-1.5)*45, 180+(i-1.5)*15, 4-absolute(i-1.5), 1);
	}
	RanranActSet(objEnemy, 30, 120);
	BossCharge(objEnemy);
	waitObj(objEnemy, 120);
	if (!eAlive) { return; }
	ascent(i in 0 .. way)
	{
		RanranWave(bx, by, i*360/way+angle, muki, speed);
	}
	CallSound(sndShot1);
	
	// 隠れる
	let objImg = GetBossImageID(objEnemy);
	SetEnemyVisible(objEnemy, false);
	descent(i in 0 .. 60)
	{
		if (!eAlive) { break; }
		ObjRender_SetAlpha(objImg, i/60*255);
		waitObj(objEnemy, 1);
	}
	if (!eAlive) { return; }
	EffectConcentrationPointEx(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), objEnemy,
		[128,32,32], 10, 2, 180, 120);
	if (Difficult <= D_NORM)
	{
		ObjMove_SetPosition(objEnemy, CenX+320*muki, by+96);
		ObjRender_SetAlpha(objImg, 255);
		SetEnemyVisible(objEnemy, true);
		
		waitObj(objEnemy, 30);
		if (!eAlive) { return; }
		MoveTo(objEnemy, CenX, by, 300);
		SetAction(objEnemy, ACT_SHOT2, 300);
		waitObj(objEnemy, 60);
		if (!eAlive) { return; }
		Shot02(300-60);
	}
	else
	{
		ObjMove_SetPosition(objEnemy, CenX+200*muki, GetStgFrameHeight+128);
		ObjRender_SetAlpha(objImg, 255);
		SetEnemyVisible(objEnemy, true);
		
		waitObj(objEnemy, 30);
		if (!eAlive) { return; }
		MoveTo(objEnemy, CenX+140*muki, GetStgFrameHeight, 60);
		SetAction(objEnemy, ACT_MOVE, 60);
		waitObj(objEnemy, 90);
		MoveS01_Hard(by, 300);
		if (!eAlive) { return; }
		Shot02(300);
	}
}

task MoveS01_Hard(to_y, timer)
{
	let by = ObjMove_GetY(objEnemy);
	
	SetAction(objEnemy, ACT_SHOT2, timer);
	ascent(t in 0 .. timer)
	{
		if (!eAlive) { return; }
		let tmp = (1-cos((t+1)/timer*180))/2;
		let tmp2 = tmp * (1-tmp);
		let ex = ObjMove_GetX(objEnemy)*(1-0.1*tmp2) + GetPlayerX*0.1*tmp2;
		let ey = by*(1-tmp) + to_y*tmp;
		ObjMove_SetPosition(objEnemy, ex, ey);
		waitObj(objEnemy, 1);
	}
}

task Shot02(timer)
{
	let shot_ba = [0, 0, 90, 90][Difficult];
	let wt = [10, 10, 10, 10][Difficult];
	let count = [5, 5, 3, 5][Difficult];
	
	// 最後のやつ
	let speed = 0.75;
	let way = [0, 24, 24, 48][Difficult];
	
	let st = 0;
	ascent(t in 0 .. timer)
	{
		if (!eAlive) { return; }
		if (t%wt == 0)
		{
			if (Difficult >= D_HARD && st%2 == 1)
			{
				ascent(i in 0 .. count)
				{
					let ss = 1 + i*0.5;
					let sa = shot_ba + rand(-5,5);
					let sx = ObjMove_GetX(objEnemy);
					let sy = ObjMove_GetY(objEnemy)-32;
					My_CreateShotA1(sx, sy, ss, sa, ADD_BGW_BALL_M_RED, 15);
				}
			}
			else
			{
				ascent(i in 0 .. count)
				{
					let ss = 1 + i*0.5;
					let sa = shot_ba + rand(-5,5);
					let sx = ObjMove_GetX(objEnemy);
					let sy = ObjMove_GetY(objEnemy)-32;
					My_CreateShotA1(sx, sy, ss, sa-90, ADD_BGW_BALL_M_RED, 15);
					My_CreateShotA1(sx, sy, ss, sa+90, ADD_BGW_BALL_M_RED, 15);
				}
			}
			st++;
			CallSound(sndShot2);
		}
		waitObj(objEnemy, 1);
	}
	if (!eAlive) { return; }
	if (way > 0)
	{
		let sx = ObjMove_GetX(objEnemy);
		let sy = ObjMove_GetY(objEnemy)-32;
		let sa = atan2(sy-GetPlayerY, sx-GetPlayerX);
		CreateShotCircleA2(sx, sy, 5, sa, -5/45, speed, BGW_BALL_M_RED, 15, way, 0);
		if (Difficult >= D_LUNA)
		{
			ascent(i in 0 .. 3)
			{
				let bs = 3 + i*1;
				let tmp_s = speed * (1.5+i*0.1);
				let way = 64 - i*8;
				CreateShotWayA2(sx, sy, bs, -90+rand(-5,5), -bs/30, tmp_s, ADD_BGW_FUGU_RED, 15, way, 270/64, 0);
			}
		}
		CallSound(sndShot1);
	}
}

// 楕円を切り取った感じな軌道
task RanranWave(x, y, angle, muki, speed)
{
	let timer = [30, 45, 40, 45][Difficult];
	
	ascent(t in 0 .. timer)
	{
		if (!eAlive) { return; }

		let tmp = sin(t/timer*90);
		
		let va = 90 + (-60+tmp*150)*muki;
		let vs = speed;
		let vx = sin(va)/3;
		let vy = cos(va);
		let pos = Rotate2D_XY(vx, vy, angle);
		let obj = My_CreateShotB2(x, y, vs*pos[0], vs*pos[1], -vs*pos[0]/90, -vs*pos[1]/90, vs*pos[0]/8, vs*pos[1]/8, BGB_SCALE_RED, 0);
		ObjMove_AddPatternB2(obj, 120, NO_CHANGE, NO_CHANGE, vs*pos[0]/180, vs*pos[1]/180, vs*pos[0], vs*pos[1]);

//		wait(1);
	}
}

// 雲えへくと
task SetCloud(x, y, angle, to_angle, to_speed, muki)
{
	let obj = CreateShotA1(x, y, 0, 0, BGW_BALL_S_RED, 0);
	SetShotDisabled(obj);
	Obj_SetVisible(obj, false);
	CloudEffect(obj, 0.5, muki);
	
	ascent(t in 0 .. 120)
	{
		let tmp = sin((t+1)/120*90);
		let sr = (1-tmp)*128 + 24;
		let sa = angle + (1-tmp)*90;
		let sx = x + sr*cos(sa);
		let sy = y + sr*sin(sa);
		ObjMove_SetPosition(obj, sx, sy);
		waitObj(objEnemy, 1);
	}
	ObjMove_SetAngle(obj, to_angle);
	ObjMove_SetSpeed(obj, 0);
	ObjMove_SetAcceleration(obj, to_speed/60);
	ObjMove_SetMaxSpeed(obj, 99);
}

task CloudEffect(objBase, scale, muki)
{
	let path = imgDir ~ "effect/ranran_cloud.png";
	
	let obj	= ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture( obj, path );
	Obj_SetRenderPriorityI( obj, 71 );
	ObjRender_SetBlendType( obj, BLEND_ADD_ARGB );
	ObjSprite2D_SetSourceRect( obj, 0, 128, 256, 256 );
	ObjSprite2D_SetDestRect( obj, -(128-24)*muki, -64, (128+24)*muki, 64 );
	ObjRender_SetPosition( obj, ObjMove_GetX(objBase), ObjMove_GetY(objBase), 0);
	ObjRender_SetColor( obj, 255, 64, 64);
	
	let t = 0;
	while(!Obj_IsDeleted(objBase))
	{
		let tmp_s = (1 + cos(t*6)/8) * scale;
		if (t < 120)
		{
			let tmp = sin((t+1)/120*90);
			tmp_s *= (2-tmp);
			ObjRender_SetAlpha(obj, 255*tmp);
			CloudEffect_Dark(ObjMove_GetX(objBase), ObjMove_GetY(objBase), tmp_s, muki, 255*tmp);
		}
		else
		{
			CloudEffect_Dark(ObjMove_GetX(objBase), ObjMove_GetY(objBase), tmp_s, muki, 255);
		}
		ObjRender_SetScaleXYZ(obj, tmp_s, tmp_s, 1);
		ObjRender_SetPosition( obj, ObjMove_GetX(objBase), ObjMove_GetY(objBase), 0);
		t++;
		waitObj(objEnemy, 1);
	}
	Obj_Delete(obj);
}

task CloudEffect_Dark(x, y, scale, muki, alpha)
{
	let path = imgDir ~ "effect/ranran_cloud.png";
	
	let obj	= ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture( obj, path );
	Obj_SetRenderPriorityI( obj, 70 );
	ObjRender_SetBlendType( obj, BLEND_SUBTRACT );
	ObjSprite2D_SetSourceRect( obj, 0, 0, 256, 128 );
	ObjSprite2D_SetDestRect( obj, -(128-24)*muki, -64, (128+24)*muki, 64 );
	ObjRender_SetPosition( obj, x, y, 0);
	ObjRender_SetColor( obj, 16, 32, 32);
	ObjRender_SetScaleXYZ(obj, scale, scale, 1);
	
	descent(i in 0 .. 15)
	{
		ObjRender_SetAlpha(obj, (i+1)/15*alpha);
		waitObj(objEnemy, 1);
	}
	Obj_Delete(obj);
}
