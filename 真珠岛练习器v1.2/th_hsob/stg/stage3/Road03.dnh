#東方弾幕風[Stage]
#ScriptVersion[3]
#Title["Stage3道中"]
#Text["Stage3道中"]
#System["./../../system/System.dnh"]

#include "./../../lib/lib_Common.dnh"
#include "./../../lib/lib_Stage.dnh"
#include "./../../lib/lib_Zako.dnh"
#include "./Road03_Zako.dnh"
#include "./../../lib/lib_ChapterSkip.dnh"
let dest=GetStartChapter(3);
@Initialize
{
	STAGE_ID = 3;		//ステージID記録
	NEXT_STAGE_ID = 4;	//次のステージIDを記録
	StageInit();
	TStage();
}

@Event()
{
	StageEvent();
}

@Loading
{
}

@MainLoop
{
	yield;
}



task TStage
{
	// 保険
	yield;
	

	let dir = GetCurrentScriptDirectory();
	let pathBG	= dir ~ "BackgroundWorld03.dnh";	//背景
	let pathMBoss	= dir ~ "boss/03a_plural.dnh";	//中ボス
	let pathBoss	= dir ~ "boss/03b_plural.dnh";	//ボス
	
	// BGM
	// 道中曲 : 1拍25.3fくらい
	//　中ボスロード
	if(dest<=4){
		StartScriptInThread(pathMBoss);
	}
	else{
		StartScriptInThread(pathBoss);
	}
	
	//  背景配置
	SetStageBackGround(pathBG);
	if(dest==3 || dest==4 || dest>=6){
		WaitRoad(50);
	}
	wait(75);
	if(dest<=5){
		PlayMusicWithName( 6, 30, 100 );
	}
	else{
		PlayMusicWithName( 7, 30, 30 );
	}
	
// ------------------------ 前半
	if(dest<=1){
		CHAPTER_1();
	}
	if(dest<=2){
		CHAPTER_2();
	}
	if(dest<=4){
		CHAPTER_MBOSS(pathBoss);	//中ボス
	}
	if(dest<=5){
		CHAPTER_3();
	}
	
	

// ------------------------ ボス
	KillAllEnemy();
	DeleteShotAll_Effect(CenX, CenY);
	SetItemCollect(120);

	CallBoss();

	// 待機とロード
	WaitForBossKilled();

	wait(45);

	StageEND();
}

function CHAPTER_1()
{
	_CHAPTER_1();
	WaitRoad(60*29-240);

	task _CHAPTER_1()
	{
		ChapterStart(STAGE_ID, 0, CHAPTER_ROAD);
		CHAPTER_1_Frog();
		I01([MaxX-256,MinY], [32,1.25*25], 1.25, 90+30, 4, 25);
		WaitRoad(101);
		I01([MinX+256,MinY], [-32,1.25*25], 1.25, 90-30, 4, 25);
		WaitRoad(101);
		I01([MaxX-256,MinY], [32,1.25*25], 1.25, 90+30, 8, 25);
		WaitRoad(202);
		I01([MinX+256,MinY], [-32,1.25*25], 1.25, 90-30, 8, 25);
		WaitRoad(505);
		H01([CenX+96,MinY-16], 1, 90+30, 12, 12);
		WaitRoad(202);
		H01([CenX+96,MinY-16], 1, 90+30, 12, 12);
		WaitRoad(101);
		DisplayStage(STAGE_ID, 0);	// タイトル表示

		task CHAPTER_1_Frog()
		{
			WaitRoad(202*3-101-240+25);
			SetEnemyF01(CenX, CenY+30, 0, 0, 0, 404);
			WaitRoad(101);
			SetEnemyF02(CenX+128, CenY+60, 0, 0, 1, 404);
			WaitRoad(101);
			SetEnemyF02(CenX-128, CenY+60, 0, 0, 1, 404);
		}
	}
}

function CHAPTER_2()
{
	_CHAPTER_2();
	WaitRoad(60*40);

	task _CHAPTER_2()
	{
		CHAPTER_2_Frog();
		WaitRoad(240);

		ChapterStart(STAGE_ID, 1, CHAPTER_ROAD);

		WaitRoad(101);
		H01([MaxX,MinY+32], 1, 180-20, 12, 25);
		WaitRoad(303);
		H01([MinX,MinY+32], 1, 20, 16, 25);
		WaitRoad(404);
		H01([MaxX,MinY+32], 1, 180-20, 16, 25);
		WaitRoad(404);
		H01([MinX,MinY+32], 1, 20, 16, 25);
		WaitRoad(303);
		I01([MaxX-256,MinY], [32,1.25*25], 1.25, 90+30, 8, 25);
		WaitRoad(202);
		I01([MinX+256,MinY], [-32,1.25*25], 1.25, 90-30, 8, 25);
		WaitRoad(202);
		I01([MaxX-96,MinY-32], [24,1.25*50], 1.25, 90+45, 4, 50);
		WaitRoad(25);
		I01([MinX+96,MinY+64], [-24,1.25*50], 1.25, 90-45, 4, 50);

		task CHAPTER_2_Frog()
		{
			WaitRoad(5);
			SetEnemyF02(CenX+96, CenY+30, 0, 0, 0, 101);
			WaitRoad(202);
			SetEnemyF02(CenX-80, CenY+50, 0, 0, 0, 101);
			WaitRoad(202);
			SetEnemyF02(CenX+128, CenY+20, 0, 0, 0, 101);
			SetEnemyF02(CenX+64, CenY+80, 0, 0, 0, 101);
			WaitRoad(202);
			SetEnemyF02(CenX-144, CenY+20, 0, 0, 0, 101);
			SetEnemyF02(CenX-80, CenY+80, 0, 0, 0, 101);
			WaitRoad(202+2);
			F03([CenX-108,CenY+120], [0,-32], 4, 101);
			F03([CenX+108,CenY+120], [0,-32], 4, 101);
			WaitRoad(404-2);
			SetEnemyF04(CenX, CenY+30, 0, 0, 1, 101);
		}
	}
}

task CHAPTER_MBOSS(pathBoss)
{
	// ボスがでたぞー
	CallBoss();
	flgStopSetZako = true;
	// 中ボスが消えてからボスをロード
	StartScriptInThreadWaitBoss(pathBoss);
	
	// ボス撃破待ち
	CheckBossKilled();
	WaitForMiddleBossKilled();
	
	flgStopSetZako = false;

	ChapterStart(STAGE_ID, 2, CHAPTER_ROAD);
}

function CHAPTER_3()
{
	let dest=GetStartChapter(3);
	
	
	_CHAPTER_3A();	// 早回し
	
	if(dest<=4){
		//midboss not skipped
		WaitRoad(2411);
		WaitForMiddleBossKilled();	// 中ボス撃破待ち
	}
	else{
		WaitRoad(2411-(120+60*15+15));
	}
	_CHAPTER_3B();	// 後半
	WaitRoad(60*58 - 2411);

	task _CHAPTER_3A()
	{
		if(dest<=4){
			WaitRoad(120+60*15+15);
		}
		else{
			ChapterStart(STAGE_ID, 2, CHAPTER_ROAD);
		}

		H02([MaxX,MinY+72], 1, 180-20, 8, 50, 1);
		WaitRoad(404);
		H02([MinX,MinY+48], 1, 20, 8, 50, 1);
		WaitRoad(404);
		H02([MaxX,MinY+64], 1, 180-20, 6, 101, 0);
		WaitRoad(50);
		H02([MinX,MinY+32], 1, 20, 6, 101, 0);
		WaitRoad(51);
		B01([MinX,MinY+128], [0, 8], 1, 0, 8, 50);
		WaitRoad(202);
		B01([MaxX,MinY+128], [0, 8], 1, 180, 8, 50);
		
	}
	task _CHAPTER_3B()
	{
		CHAPTER_3_Frog();
		WaitRoad(240+202+202);
	//	H02([MaxX,MinY+24], 1, 180-20, 2, 101, 1);
		WaitRoad(50);
	//	H02([MinX,MinY+72], 1, 20, 2, 101, 1);
		WaitRoad(606);
	}

	task CHAPTER_3_Frog()
	{
		WaitRoad(5);
		F03([CenX-108,CenY+120], [0,-32], 4, 101);
		WaitRoad(50);
		F03([CenX+108,CenY+120], [0,-32], 4, 101);
		WaitRoad(404-50);
		SetEnemyF04(CenX, CenY+30, 0, 0, 1, 101);
	}
}


// -------------------------- 敵配置用 -------------------------- //

task I01(pos, add_pos, speed, angle, count, wt)
{
	ascent(t in 0 .. count)
	{
		let ex = pos[0] + add_pos[0]*t;
		let ey = pos[1] + add_pos[1]*t;
		let muki = [1,-1][t%2];
		if (add_pos[0] < 0) { muki = -muki; }
		SetEnemyI01(ex, ey, speed, angle, muki, randStage(0,1));
		wait(wt);
	}
}

task H01(pos, speed, angle, count, wt)
{
	ascent(i in 0 .. count)
	{
		SetEnemyH01(pos[0], pos[1], speed, angle, 0, i*wt);
		wait(wt);
	}
}

task F03(pos, add_pos, count, wt)
{
	ascent(t in 0 .. count)
	{
		let ex = pos[0] + add_pos[0]*t+randStage(-8,8);
		let ey = pos[1] + add_pos[1]*t+randStage(-8,8);
		SetEnemyF03(ex, ey, 0, 0, 0, 101);
		wait(wt);
	}
}

task H02(pos, speed, angle, count, wt, shot_type)
{
	loop(count)
	{
		SetEnemyH02(pos[0], pos[1], speed, angle, shot_type, 0);
		wait(wt);
	}
}

task B01(pos, add_pos, speed, angle, count, wt)
{
	ascent(i in 0 .. count)
	{
		ShotBubble01(pos[0]+add_pos[0]*i+randStage(-32,32), pos[1]+add_pos[1]*i, speed, angle, 1);
		wait(wt);
	}
}
