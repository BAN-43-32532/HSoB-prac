function GetDrawingPosition(index)
{
	alternative(index)
	case("a")
	{
		// a
		return([
			[-0.87500, -0.81250, 0.31869, -11.30993],
			[-0.56250, -0.87500, 0.17678, -45.00000],
			[-0.43750, -1.00000, 0.18750, 0.00000],
			[-0.25000, -1.00000, 0.27951, 63.43495],
			[-0.12500, -0.75000, 0.39528, 71.56505],
			[0.00000, -0.37500, 0.45069, 33.69007],
			[0.37500, -0.12500, 0.55902, 63.43495],
			[0.62500, 0.37500, 0.55902, 63.43495],
			[0.87500, 0.87500, 0.70711, -135.00000],
			[0.37500, 0.37500, 0.80039, -141.34019],
			[-0.25000, -0.12500, 0.27951, -153.43495],
			[-0.50000, -0.25000, 0.50000, -90.00000],
			[-0.50000, -0.75000, 0.38017, -170.53768],
			[-0.37500, -0.18750, 1.12500, 90.00000],
			[-0.37500, 0.06250, 0.88829, 50.71059],
			[0.18750, 0.75000, 0.50000, -90.00000],
			[0.18750, 0.43750, 0.70711, 45.00000],
			[0.68750, 0.93750, 0.19764, -18.43495],
			[-0.06250, 0.43750, 0.50389, 82.87498],
			[-0.81250, 0.93750, 1.18750, 0.00000],
			[0.00000, -0.37500, 0.31869, -168.69007],
			[-0.31250, -0.43750, 0.25769, 104.03624],
		]);
	}
	case("i")
	{
		// i,e
		return([
			[-0.06250, -0.31250, 0.76291, 55.00798],
			[-0.37500, -0.31250, 0.72887, 59.03624],
		]);
	}
	case("e")
	{
		// i,e
		return([
			[0.18750, 0.93750, 1.50000, -90.00000],
			[0.18750, -0.56250, 0.25769, -104.03624],
			[0.12500, -0.81250, 0.26517, -135.00000],
			[-0.06250, -1.00000, 1.38773, 97.76517],
			[-0.25000, 0.37500, 0.57622, 40.60129],
		]);
	}
	case("u")
	{
		// u
		return([
			[-0.62500, 0.93750, 1.00000, 0.00000],
			[-0.62500, -0.81250, 0.13975, -26.56505],
			[-0.50000, -0.87500, 0.17678, -45.00000],
			[-0.37500, -1.00000, 0.18750, 0.00000],
			[-0.18750, -1.00000, 0.22535, 56.30993],
			[-0.06250, -0.81250, 0.25769, 75.96376],
			[0.00000, -0.56250, 0.44194, 45.00000],
			[0.31250, -0.25000, 0.45069, 56.30993],
			[0.56250, 0.12500, 0.17678, 45.00000],
			[0.68750, 0.25000, 0.39528, 161.56505],
			[0.31250, 0.37500, 0.31869, -168.69007],
			[0.00000, 0.31250, 0.45069, -123.69007],
			[-0.25000, -0.06250, 0.57622, -102.52881],
			[-0.37500, -0.62500, 0.13975, -116.56505],
			[-0.43750, -0.75000, 0.19764, -161.56505],
			[-0.12500, -0.50000, 0.19764, 108.43495],
			[-0.18750, -0.31250, 0.40020, 51.34019],
			[0.06250, 0.00000, 0.13975, -63.43495],
			[0.12500, -0.12500, 0.19764, -108.43495],
			[0.00000, 0.31250, 0.25000, 90.00000],
			[0.00000, 0.56250, 0.39528, 108.43495],
			[0.18750, 0.37500, 0.25769, 75.96376],
			[0.25000, 0.62500, 0.33657, 111.80141],
		]);
	}
	case("o")
	{
		// o
		return([
			[0.75000, 1.00000, 0.36443, -120.96376],
			[0.56250, 0.68750, 0.50389, -97.12502],
			[0.50000, 0.18750, 0.75000, -90.00000],
			[0.50000, -0.56250, 0.19764, -108.43495],
			[0.43750, -0.75000, 0.17678, -135.00000],
			[0.31250, -0.87500, 0.25769, -165.96376],
			[0.06250, -0.93750, 0.25769, 165.96376],
			[-0.18750, -0.87500, 0.22535, 146.30993],
			[-0.37500, -0.75000, 0.25769, 104.03624],
			[-0.43750, -0.50000, 0.75000, 90.00000],
			[-0.43750, 0.25000, 0.17678, 135.00000],
			[-0.56250, 0.37500, 0.19764, 108.43495],
			[-0.62500, 0.56250, 0.25769, 75.96376],
			[-0.56250, 0.81250, 0.13975, 26.56505],
			[-0.43750, 0.87500, 0.13975, -26.56505],
			[-0.31250, 0.81250, 0.19764, -71.56505],
			[-0.25000, 0.62500, 0.25769, -104.03624],
			[-0.31250, 0.37500, 0.17678, -135.00000],
			[-0.87500, 0.06250, 0.56250, 0.00000],
			[-0.31250, 0.06250, 0.08839, -45.00000],
			[-0.25000, 0.00000, 0.18750, 0.00000],
			[-0.06250, 0.00000, 0.08839, 45.00000],
			[0.00000, 0.06250, 0.08839, 135.00000],
			[-0.06250, 0.12500, 0.18750, 180.00000],
			[-0.25000, 0.12500, 0.08839, -135.00000],
		]);
	}
	case("k")
	{
		// k
		return([
			[-1.00000, -0.31250, 1.81250, 0.00000],
			[0.81250, -0.31250, 0.26517, 45.00000],
			[1.00000, -0.12500, 0.18750, 90.00000],
			[1.00000, 0.06250, 0.13975, 153.43495],
			[0.87500, 0.12500, 0.47599, -113.19859],
			[0.68750, -0.31250, 0.36443, 120.96376],
			[0.50000, 0.00000, 0.36443, 149.03624],
			[0.18750, 0.18750, 0.75000, 180.00000],
			[-0.56250, 0.18750, 0.31250, -143.13010],
			[-0.81250, 0.00000, 0.36443, -120.96376],
		]);
	}
	case("s")
	{
		// s
		return([
			[0.18750, 1.00000, 1.81250, -90.00000],
			[0.18750, -0.81250, 0.13975, -116.56505],
			[0.12500, -0.93750, 0.13975, -153.43495],
			[0.00000, -1.00000, 0.13975, 153.43495],
			[-0.12500, -0.93750, 0.13975, 116.56505],
			[-0.18750, -0.81250, 1.00000, 90.00000],
		]);
	}
	case("t")
	{
		// t
		return([
			[0.50000, 0.25000, 1.00000, 180.00000],
			[-0.50000, 0.25000, 0.18750, -90.00000],
			[-0.50000, 0.06250, 0.22535, -56.30993],
			[-0.37500, -0.12500, 0.22535, -33.69007],
			[-0.18750, -0.25000, 0.19764, -18.43495],
			[0.00000, -0.31250, 0.19764, 18.43495],
			[0.18750, -0.25000, 0.22535, 33.69007],
			[0.37500, -0.12500, 0.22535, 56.30993],
			[0.50000, 0.06250, 0.18750, 90.00000],
		]);
	}
	case("n")
	{
		// n
		return([
			[-0.93750, 0.06250, 0.26517, -45.00000],
			[-0.75000, -0.12500, 0.26517, 45.00000],
			[-0.56250, 0.06250, 0.26517, -45.00000],
			[-0.37500, -0.12500, 0.26517, 45.00000],
			[-0.18750, 0.06250, 0.26517, -45.00000],
			[0.00000, -0.12500, 0.26517, 45.00000],
			[0.18750, 0.06250, 0.26517, -45.00000],
			[0.37500, -0.12500, 0.26517, 45.00000],
			[0.56250, 0.06250, 0.26517, -45.00000],
			[0.75000, -0.12500, 0.26517, 45.00000],
		]);
	}
	case("h")
	{
		// h
		return([
			[0.00000, -0.12500, 0.56250, 90.00000],
			[0.00000, 0.43750, 0.56250, 0.00000],
			[0.56250, 0.43750, 0.87500, -90.00000],
			[0.56250, -0.43750, 1.12500, 180.00000],
			[-0.56250, -0.43750, 0.87500, 90.00000],
		]);
	}
	case("m")
	{
		// m
		return([
			[-0.56250, -1.00000, 0.17678, 135.00000],
			[-0.68750, -0.87500, 0.37500, 90.00000],
			[-0.68750, -0.50000, 0.62500, 53.13010],
			[-0.31250, 0.00000, 0.85009, 53.97263],
			[0.18750, 0.68750, 0.31869, -78.69007],
			[0.25000, 0.37500, 0.50389, 60.25512],
			[0.50000, 0.81250, 0.22535, 33.69007],
			[0.68750, 0.93750, 0.25769, 14.03624],
			[0.93750, 1.00000, 0.31250, -90.00000],
			[0.93750, 0.68750, 1.30054, -125.21759],
			[0.18750, -0.37500, 0.40020, -141.34019],
			[-0.12500, -0.62500, 0.25000, -90.00000],
			[-0.12500, -0.87500, 0.17678, -135.00000],
			[-0.25000, -1.00000, 0.31250, 180.00000],
			[-0.56250, -0.81250, 0.27951, 63.43495],
			[-0.43750, -0.56250, 0.31250, -53.13010],
			[-0.06250, -0.43750, 0.18750, 180.00000],
			[-0.25000, -0.43750, 0.13975, 116.56505],
			[-0.31250, -0.31250, 0.22535, 56.30993],
			[-0.18750, -0.12500, 1.07529, 35.53768],
			[-0.31250, 0.00000, 0.87723, 94.08562],
			[-0.06250, 0.37500, 0.50000, 90.00000],
			[-0.06250, 0.87500, 0.81250, 180.00000],
		]);
	}
	case("r")
	{
		// r
		return([
			[-1.00000, 0.00000, 0.61555, -23.96249],
			[-0.43750, -0.25000, 0.44194, -8.13010],
			[0.00000, -0.31250, 0.38017, 9.46232],
			[0.37500, -0.25000, 0.67315, 21.80141],
			[1.00000, 0.00000, 0.65252, 163.30076],
			[0.37500, 0.18750, 0.38017, 170.53768],
			[0.00000, 0.25000, 0.44194, -171.86990],
			[-0.43750, 0.18750, 0.59293, -161.56505],
		]);
	}
	case("g")
	{
		return([
			[0.00000, -0.18750, 0.47599, 113.19859],
			[-0.18750, 0.25000, 0.13975, 26.56505],
			[-0.06250, 0.31250, 0.12500, 0.00000],
			[0.06250, 0.31250, 0.13975, -26.56505],
			[0.18750, 0.25000, 0.47599, -113.19859],
			[-0.50000, -0.43750, 1.00000, 0.00000],
			[-0.37500, -0.43750, 0.76035, 99.46232],
			[-0.50000, 0.31250, 0.33657, 21.80141],
			[-0.18750, 0.43750, 0.37500, 0.00000],
			[0.18750, 0.43750, 0.33657, -21.80141],
			[0.50000, 0.31250, 0.76035, -99.46232],
		]);
	}
	case("j")
	{
		return([
			[-0.93750, -0.87500, 0.17678, -45.00000],
			[-0.81250, -1.00000, 0.18750, 0.00000],
			[-0.62500, -1.00000, 0.22535, 56.30993],
			[-0.50000, -0.81250, 0.25000, 90.00000],
			[-0.50000, -0.56250, 0.56596, -6.34019],
			[0.06250, -0.62500, 0.50389, 7.12502],
			[0.56250, -0.56250, 0.31250, 36.86990],
			[0.81250, -0.37500, 0.38017, 80.53768],
			[0.87500, 0.00000, 0.56596, 96.34019],
			[0.81250, 0.56250, 0.44194, 81.86990],
			[0.87500, 1.00000, 0.53400, -110.55605],
			[0.68750, 0.50000, 0.56250, -90.00000],
			[0.68750, -0.06250, 0.25769, -104.03624],
			[0.62500, -0.31250, 0.27951, -153.43495],
			[0.37500, -0.43750, 0.50000, 180.00000],
			[-0.12500, -0.43750, 0.44194, 171.86990],
			[-0.56250, -0.37500, 0.17678, -135.00000],
			[-0.68750, -0.50000, 0.25000, -90.00000],
			[-0.68750, -0.75000, 0.12500, 180.00000],
			[-0.81250, -0.75000, 0.17678, -135.00000],
		]);
	}
	case("z")
	{
		return([
			[-1.00000, 0.00000, 0.75000, 0.00000],
			[-0.25000, 0.00000, 0.17678, -45.00000],
			[-0.12500, -0.12500, 0.25000, 0.00000],
			[0.12500, -0.12500, 0.17678, 45.00000],
			[0.25000, 0.00000, 0.75000, 0.00000],
			[0.25000, 0.00000, 0.17678, 135.00000],
			[0.12500, 0.12500, 0.25000, 180.00000],
			[-0.12500, 0.12500, 0.17678, -135.00000],
			[0.00000, -0.12500, 0.25000, 90.00000],
		]);
	}
	case("d")
	{
		return([
			[0.93750, -0.12500, 0.31250, 90.00000],
			[0.93750, 0.18750, 0.50000, 180.00000],
			[0.43750, 0.18750, 0.31869, 168.69007],
			[0.12500, 0.25000, 0.81250, 180.00000],
			[-0.68750, 0.25000, 0.25769, -165.96376],
			[-0.93750, 0.18750, 0.13975, -116.56505],
			[-1.00000, 0.06250, 0.17678, -45.00000],
			[-0.87500, -0.06250, 0.93750, 0.00000],
			[0.93750, -0.12500, 0.43750, 180.00000],
			[0.50000, -0.12500, 0.39528, -161.56505],
			[0.12500, -0.25000, 0.56250, 180.00000],
			[-0.43750, -0.25000, 0.13975, 153.43495],
			[-0.56250, -0.18750, 0.12500, 90.00000],
		]);
	}
	case("b")
	{
		return([
			[0.56250, -0.93750, 1.81250, 90.00000],
			[0.56250, 0.87500, 1.06250, 180.00000],
			[-0.50000, 0.87500, 0.06250, -90.00000],
			[-0.50000, 0.81250, 0.38017, -9.46232],
			[-0.12500, 0.75000, 0.36443, -30.96376],
			[0.18750, 0.56250, 0.22535, -56.30993],
			[0.31250, 0.37500, 1.31250, -90.00000],
			[0.31250, -0.93750, 0.25000, 0.00000],
		]);
	}
	case("p")
	{
		return([
			[-0.31250, -0.43750, 0.62500, 0.00000],
			[0.31250, -0.43750, 0.81250, 90.00000],
			[0.31250, 0.37500, 0.62500, 180.00000],
			[-0.31250, 0.37500, 0.81250, -90.00000],
		]);
	}
	case("f")
	{
		return([
			[0.93750, 0.25000, 1.37500, 180.00000],
			[-0.43750, 0.25000, 0.13975, -153.43495],
			[-0.56250, 0.18750, 0.13975, -116.56505],
			[-0.62500, 0.06250, 0.25000, 180.00000],
			[-0.87500, 0.06250, 0.13975, -153.43495],
			[-1.00000, 0.00000, 0.13975, -63.43495],
			[-0.93750, -0.12500, 0.19764, -18.43495],
			[-0.75000, -0.18750, 0.19764, 18.43495],
			[-0.56250, -0.12500, 0.22535, 56.30993],
			[-0.43750, 0.06250, 0.87723, 4.08562],
			[0.43750, 0.12500, 0.22535, 33.69007],
			[-0.75000, -0.18750, 0.22535, -146.30993],
			[-0.75000, -0.18750, 0.22535, -33.69007],
		]);
	}
	others
	{
		return([]);
	}
}

task R05_DL(x, y, vx, draw_id, size)
{
	let vy = 0.5;
	let angle = atan2(vy, vx);
	let speed = (vx^2+vy^2)^0.5;
	R05_SetDrawingLaser(x, y, speed, angle, BGW_BEAM_BLUE, 0, 8, draw_id, size);
}

task R05_SetDrawingLaser(x, y, speed, angle, graphic, delay, l_wid, draw_id, size)
{
	let objBase = CreateShotA1(x, y, speed, angle, graphic, 0);
	SetShotDisabled(objBase);
	ObjShot_SetAutoDelete(objBase, false);
	Obj_SetVisible(objBase, false);
	
	let objLasers = [];
	let pos = GetDrawingPosition(draw_id);
	ascent(i in 0 .. length(pos))
	{
		objLasers = objLasers ~ 
			DrawLaser(objBase, l_wid, 60*999, graphic, delay, pos[i], size);
	}
	
	while(!Obj_IsDeleted(objBase))
	{
		if (ObjMove_GetY(objBase) > MinY && !CheckDispIN(objBase, size*1.5)) { break; }
		yield;
	}
	Obj_Delete(objBase);
	ascent(i in 0 .. length(objLasers)) { Obj_Delete(objLasers[i]); }

}

function DrawLaser(parent, l_wid, timer, graphic, delay, pos, size)
{
	let laser_a = pos[3];
	let ol = l_wid/4;
	let ox = ol/2 * cos(laser_a);
	let oy = ol/2 * sin(laser_a);
	let len = pos[2]*size;
	let sx = ObjMove_GetX(parent) + pos[0]*size;
	let sy = ObjMove_GetY(parent) + pos[1]*size;
	
	let obj = My_CreateSimpleLaserA1(sx-ox, sy-oy, laser_a, len+ol, l_wid, timer, graphic, delay);
	ObjMove_AddPatternA1(obj, 0, ObjMove_GetSpeed(parent), ObjMove_GetAngle(parent));
	ObjShot_SetAutoDelete(obj, false);
	
	let obj2 = My_CreateSimpleLaserA1(sx-ox*2, sy-oy*2, laser_a, len+ol*2, l_wid*2, timer, graphic, delay);
	ObjMove_AddPatternA1(obj2, 0, ObjMove_GetSpeed(parent), ObjMove_GetAngle(parent));
	ObjRender_SetColor(obj2, 0, 0, 255);
	ObjShot_SetIntersectionEnable(obj2, false);
	ObjShot_SetAutoDelete(obj2, false);
	
	return([obj, obj2]);
}

// items = [item, offset_x, offset_y, size_rate]
task SetDrawingWall(items, muki)
{
	let size_rate = [0.8, 0.9, 1, 1][Difficult];

	let vy = 0.5;
	let vx = 1;
	let size = 64;
	let baseX = GetClipWidth - size/2;
	let baseY = MinY - size + 1;
	
	let next_item = 0;
	let next_width = ator(items[next_item][3]) * size * 2;
	
	while(baseY < MaxY)
	{
		if (baseX > -size)
		{
			let it = items[next_item][0];
			let sx = MinX + GetClipWidth/2+(baseX-GetClipWidth/2)*muki + ator(items[next_item][1])*muki * size;
			let sy = baseY + ator(items[next_item][2]) * size;
			
			if (!flgStopSetZako)
			{
				R05_DL(sx, sy, vx*muki, it, size*size_rate);
			}
			
			baseX -= next_width;
			
			next_item = (next_item+1)%length(items);
			next_width = ator(items[next_item][3]) * size * 2;
		}
		baseX += vx;
		baseY += vy;
		wait(1);
	}
}
