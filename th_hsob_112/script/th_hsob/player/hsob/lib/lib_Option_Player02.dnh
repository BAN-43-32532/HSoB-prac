//------------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------------
//　オプション作成　魔理沙用
//------------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------------

//　オプション作成
function CreateOptionPl02( v_distNormal, v_distSlow, v_angleNormal, v_angleSlow ){
	let obj = [
		ObjPrim_Create(OBJ_SPRITE_2D),
		ObjPrim_Create(OBJ_SPRITE_2D),
	];
	
	let opt_col = [128,64,255,255];
	if (IsRainbow())
	{
		alternative(GetPlayerWeapon())
		case(WEAPON_RED)	{ opt_col = [255,64,64,255]; }
		case(WEAPON_PURPLE)	{ opt_col = [255,64,255,255]; }
		case(WEAPON_BLUE)	{ opt_col = [64,64,255,255]; }
		case(WEAPON_SKY)	{ opt_col = [64,255,255,255]; }
		case(WEAPON_GREEN)	{ opt_col = [64,255,64,255]; }
		case(WEAPON_YELLOW)	{ opt_col = [255,255,64,255]; }
		case(WEAPON_ORANGE)	{ opt_col = [255,144,64,255]; }
	}
	
	OptionDrawHakkero( obj[0], BLEND_SUBTRACT, 1, "WHITE" );
	OptionDrawCrystal( obj[1], BLEND_ADD_ARGB, 1.1, opt_col );
	ascent( let i in 0..length(obj) ){
		OptionUpdate( obj[i], v_distNormal, v_distSlow, v_angleNormal, v_angleSlow );
		SetVisible( obj[i] );
	}
	
	SetAlpha( obj[1], [ 192, 32 ], 16 );
	
	return obj[0];
}

//　皇用オプション作成
function CreateYellowOptionPl02( v_distNormal, v_distSlow, v_angleNormal, v_angleSlow ){
	let obj = [
		ObjPrim_Create(OBJ_SPRITE_2D),
		ObjPrim_Create(OBJ_SPRITE_2D),
	];
	
	OptionDrawHakkero( obj[0], BLEND_SUBTRACT, 1, "WHITE" );
	OptionDrawCrystal( obj[1], BLEND_ADD_ARGB, 1.1, [255,255,64,128] );
	ascent( let i in 0..length(obj) ){
		OptionUpdate( obj[i], v_distNormal, v_distSlow, v_angleNormal, v_angleSlow );
		SetVisible( obj[i] );
	}
	
	SetAlpha( obj[1], [ 192, 32 ], 16 );
	
	return obj[0];
}

//　低速時に出る金髪の子追加オプション　未使用
function CreateOptionPl02Ex( v_distA, v_angleA, v_distBArray, v_angleB, v_spin ){
	let obj = [
		ObjPrim_Create(OBJ_SPRITE_2D),
		ObjPrim_Create(OBJ_SPRITE_2D),
	];
	
	let opt_col = [128,64,255,255];
	if (IsRainbow())
	{
		alternative(GetPlayerWeapon())
		case(WEAPON_RED)	{ opt_col = [255,64,64,192]; }
		case(WEAPON_PURPLE)	{ opt_col = [255,64,255,192]; }
		case(WEAPON_BLUE)	{ opt_col = [64,64,255,192]; }
		case(WEAPON_SKY)	{ opt_col = [64,255,255,192]; }
		case(WEAPON_GREEN)	{ opt_col = [64,255,64,192]; }
		case(WEAPON_YELLOW)	{ opt_col = [255,255,64,192]; }
		case(WEAPON_ORANGE)	{ opt_col = [255,144,64,192]; }
	}

	OptionDrawHakkero( obj[0], BLEND_SUBTRACT, 1, "WHITE" );
	OptionDrawCrystal( obj[1], BLEND_ADD_ARGB, 1.1, opt_col );
	ascent( let i in 0..length(obj) ){
		OptionUpdateSpiner( obj[i], v_distA, v_angleA, v_distBArray, v_angleB, v_spin );
		SetVisible( obj[i] );
	}
	
	SetAlpha( obj[1], [ 192, 32 ], 16 );
	
	return obj[0];
}

//　素用オプション作成
function CreateWhiteOptionPl02( v_distNormal, v_distSlow, v_angleNormal, v_angleSlow ){
	let obj = [
		ObjPrim_Create(OBJ_SPRITE_2D),
		ObjPrim_Create(OBJ_SPRITE_2D),
	];
	
	OptionDrawHakkero( obj[0], BLEND_SUBTRACT, 1, "WHITE" );
	OptionDrawCrystal( obj[1], BLEND_ADD_ARGB, 1.1, [255,255,255,128] );
	ascent( let i in 0..length(obj) ){
		OptionUpdate( obj[i], v_distNormal, v_distSlow, v_angleNormal, v_angleSlow );
		SetVisible( obj[i] );
	}
	
	SetAlpha( obj[1], [ 192, 32 ], 16 );
	
	return obj[0];
}