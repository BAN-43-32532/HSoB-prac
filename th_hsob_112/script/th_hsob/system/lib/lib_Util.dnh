//----------------------------------------------------
//ユーティリティ
//----------------------------------------------------
//プレイヤーが読み込まれるまで待機
sub WaitForPlayerObject()
{
	while(Obj_IsDeleted(objPlayer) || GetAreaCommonData(CAREA_SYSTEM, "PlayerDisabled", false))
	{
		objPlayer = GetPlayerObjectID();
		yield;
	}
	InitPlayerData();
}

//数字用
function SetNumber(obj, keta, num)
{
	if (num < 0)
	{
		ascent(i in 0 .. 6)
		{
			ObjPrim_SetVertexUVT(obj, keta*6+i, 0, 0);
		}
	}
	else
	{
		let ix = num*32;
		ObjPrim_SetVertexUVT(obj, keta*6  , ix, 0);
		ObjPrim_SetVertexUVT(obj, keta*6+1, ix+32, 0);
		ObjPrim_SetVertexUVT(obj, keta*6+2, ix, 64);
		ObjPrim_SetVertexUVT(obj, keta*6+3, ix+32, 0);
		ObjPrim_SetVertexUVT(obj, keta*6+4, ix, 64);
		ObjPrim_SetVertexUVT(obj, keta*6+5, ix+32, 64);
	}
}

function SetNumber_Base(obj, keta, x, y, w, h)
{
	ObjPrim_SetVertexPosition(obj, keta*6  , x, y, 0);
	ObjPrim_SetVertexPosition(obj, keta*6+1, x+w, y, 0);
	ObjPrim_SetVertexPosition(obj, keta*6+2, x, y+h, 0);
	ObjPrim_SetVertexPosition(obj, keta*6+3, x+w, y, 0);
	ObjPrim_SetVertexPosition(obj, keta*6+4, x, y+h, 0);
	ObjPrim_SetVertexPosition(obj, keta*6+5, x+w, y+h, 0);
}

//欠片用
function SetStar_Base(obj, keta, x, y, w, h)
{
	ObjPrim_SetVertexPosition(obj, keta*6  , x, y, 0);
	ObjPrim_SetVertexPosition(obj, keta*6+1, x+w, y, 0);
	ObjPrim_SetVertexPosition(obj, keta*6+2, x, y+h, 0);
	ObjPrim_SetVertexPosition(obj, keta*6+3, x+w, y, 0);
	ObjPrim_SetVertexPosition(obj, keta*6+4, x, y+h, 0);
	ObjPrim_SetVertexPosition(obj, keta*6+5, x+w, y+h, 0);
}
function SetStar(obj, keta, num, x, y)
{
	if (num < 0)
	{
		ascent(i in 0 .. 6)
		{
			ObjPrim_SetVertexUVT(obj, keta*6+i, 0, 0);
		}
	}
	else
	{
		ObjPrim_SetVertexUVT(obj, keta*6  , x+num*16, y);
		ObjPrim_SetVertexUVT(obj, keta*6+1, x+(num+1)*16, y);
		ObjPrim_SetVertexUVT(obj, keta*6+2, x+num*16, y+16);
		ObjPrim_SetVertexUVT(obj, keta*6+3, x+(num+1)*16, y);
		ObjPrim_SetVertexUVT(obj, keta*6+4, x+num*16, y+16);
		ObjPrim_SetVertexUVT(obj, keta*6+5, x+(num+1)*16, y+16);
	}
}

