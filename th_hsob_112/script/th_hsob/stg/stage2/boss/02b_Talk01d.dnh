#東方弾幕風[Single]
#ScriptVersion[3]
#Title["2面　会話前半"]
#Text["2面　会話前半"]
#Background[""]
#System["./../../../system/System.dnh"]

//---------------------------------------------------------------------

// 関数取り込み
#include"./../../../lib/lib_boss.dnh"
#include"./../../../lib/lib_talk.dnh"

// 各ボスのオブジェクトID
let MOVE_END = false;

@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult( 0);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(-1);	}
	BossEvent();
}

@Initialize {
	Boss_Init();	//初期設定
	
	objEnemy  = CreateBossTalk(BOSS_ID_CHII);

	ChapterReset();	//チャプターリセット

	Task_Main();
}

@MainLoop {
	yield;

}

// メインタスク
task Task_Main()
{
	// 魔法陣リセット
	BossEffect_ResetMagicCircle();

	// 会話準備
	StartTalk();

	wait(120);

	//会話処理
	FuncTalk();
	
	//次のシーンへ
	FinishTalk(true);
	while(!MOVE_END) { yield; }
	Boss_Finalize(objEnemy, false, false);
}

// 会話処理
function FuncTalk()
{
	// オブジェクト作成
	let cutinBoss1   = CreateTalkObject(BOSS_ID_CHII, true);
	let cutinPlayer1 = CreateTalkObject(BOSS_ID_KAGUYA, false);
	
	let talkID = -1;
	loop
	{
		let talkType = FuncTalkSingle(talkID);
		if (talkType == 0) { break; }
		else if (talkType == 1) { talkID = max(0, talkID+WaitNext()); }
		else { talkID++; }
	}

	// 会話処理単発（巻き戻しも出来るように）
	function FuncTalkSingle(talkID)
	{
		let talk_type = 1;
		alternative(talkID)
		case(-1)
		{
			// 初期設定
			SetImageVisible(cutinBoss1, false);
			SetImageFoward(cutinPlayer1, true);
			ChangeTalkTexture(cutinPlayer1, I_WORRY5);
			
			wait(15);	// 表示しきるまでウェイト
			talk_type = 2;	// キー入力待ちしない
		}
		case(0)
		{
			ChangeTalkTexture(cutinPlayer1, I_WORRY5);
			SetTalkEx(cutinPlayer1, "これ思ったよりまずい状況かも。");
		}
		case(1)
		{
			ChangeTalkTexture(cutinPlayer1, I_UPSET3);
			SetTalkEx(cutinPlayer1, "早くしなきゃ、この地は[r]じきに月の魔力に飲まれてしまうわ。");
		}
		case(2)
		{
			ChangeTalkTexture(cutinPlayer1, I_QUESTION);
			SetTalkEx2(cutinBoss1, "チッチッチッ、地が飲まれても[r]ちいは決して飲まれないでち！", -16, -280);
		}
		case(3)
		{
			ChangeTalkTexture(cutinPlayer1, I_NORMAL);
			ChangeTalkTexture(cutinBoss1, I_NORMAL);

			EnterBoss();
			BossScene_SetNameVisible(objScene, true);	//ボスネーム表示状態
			SetImageVisible(cutinBoss1, true);	// ボス画像出現フラグ
			SetBossNameEx(cutinBoss1, -32, 0, -1, 0, objEnemy);

			SetTalkEx(cutinBoss1, "例え飲まれても、伝説の[r]一寸法師のように中からちくちくと…");
		}
		case(4)
		{
			ChangeTalkTexture(cutinPlayer1, I_UPSET5);
			SetTalkEx(cutinPlayer1, "後から出て来る敵の方が何も分かって[r]無さそうって、脚本作り失敗してると思うの");
		}
		case(5)
		{
			ChangeTalkTexture(cutinPlayer1, I_UPSET_SMILE);
			SetTalkEx(cutinPlayer1, "それとももう狂い始めているのかしら");
		}
		case(6)
		{
			ChangeTalkTexture(cutinBoss1, I_WORRY);
			SetTalkEx(cutinBoss1, "ちーと失礼な姫君でちな。");
		}
		case(7)
		{
			ChangeTalkTexture(cutinBoss1, I_WORRY);
			SetTalkEx(cutinBoss1, "上人さまの加護無しで動いてる[r]お前の方が余程頭おかしいでち。");
		}
		case(8)
		{
			ChangeTalkTexture(cutinBoss1, I_NORMAL);
			SetTalkEx(cutinBoss1, "高貴な姫君はちゃんと弱々しく、ちいに[r]助けられるのを待ってて欲しいもんでち！");
		}
		case(9)
		{
			ChangeTalkTexture(cutinBoss1, I_DOYA);
			SetTalkEx(cutinBoss1, "伝説の一寸法師のように！");
		}
		case(10)
		{
			ChangeTalkTexture(cutinPlayer1, I_NORMAL2);
			SetTalkEx(cutinPlayer1, "永遠の停滞は[r]救済や理想郷にはならないのよ。");
		}
		case(11)
		{
			ChangeTalkTexture(cutinPlayer1, I_SMILE4);
			SetTalkEx(cutinPlayer1, "一見悪くならないように見えるだけ。[r]変化を拒む臆病者の発想よ");
		}
		case(12)
		{
			ChangeTalkTexture(cutinBoss1, I_NORMAL);
			SetTalkEx(cutinBoss1, "難しい事を言われても[r]ちーとも分からんでち！");
		}
		case(13)
		{
			ChangeTalkTexture(cutinBoss1, I_NORMAL);
			SetTalkEx(cutinBoss1, "引きこもりの頭でっかちいの姫君には、[r]まず弾幕で運動させる事が必要でちな！");
			SetFukidashiType(cutinBoss1, FUKIDASHI_ANGER);

			PlayMusicWithName( 5, 30, 30 );
		}
		others
		{
			return(0);
		}
		return(talk_type);
	}
}

// 登場モーション
task EnterBoss()
{
	if (Obj_GetValueD(objEnemy, "BOSS_MOVED", false)) { return; }
	Obj_SetValue(objEnemy, "BOSS_MOVED", true);

	// 登場モーション
	SetAction(objEnemy, ACT_MOVE, 600);
	ObjMove_SetDestAtWeightSpeedUp(objEnemy, CenX, 140, 10, 1, 0.05, 5);
	wait(90);
	MOVE_END = true;
}
