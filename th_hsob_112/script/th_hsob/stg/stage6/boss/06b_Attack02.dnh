#東方弾幕風[Single]
#ScriptVersion[3]
#Title["ﾎﾛｳﾁｬﾝ通常2"]
#Text["ﾎﾛｳﾁｬﾝ通常2"]
#Background[""]
#System["./../../../system/System.dnh"]

//---------------------------------------------------------------------

// 関数取り込み
#include"./../../../lib/lib_boss.dnh"
#include"./lib_Horou.dnh"

@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult(5777);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(70);		}
	BossEvent();
}

@Initialize {
	// アイテム数
	bossDropItem = 50;
	//ダメージ透過率
	dIni_Shot = 200;
	// 停止無効
	bossResistTime = 1;

	Boss_Init();	//初期設定
	objEnemy = CreateBoss(BOSS_ID_HOROU);	//ボスセット

	// チャプター開始
	ChapterStartBoss(GetBossID(objEnemy), 2, CHAPTER_BOSS);
	
	InitHorou();

	// 使い魔と体力連動
	CheckLinkLife_Boss(objEnemy);

	Task_Main();
	
	SetBackGroundBase( objEnemy, 1 );
}

@MainLoop {
	yield;
}

// メインタスク
task Task_Main
{
	StandBy_TimeStop(objEnemy, CenX, 160+64, 360);
	waitObj(objEnemy, 60);
	A02_OpeningMotion();

	// オプション配置
	SetEffect06_Opt_Ex(objEnemy, 0, 0);
	objHorouEffect = SetEffect06(objEnemy);

//	ObjMove_SetPosition(objEnemy, CenX, 160+64);
//	standBy(objEnemy, ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), 15);
	MoveTo(objEnemy, CenX, 140, 90);
	SetAction(objEnemy, ACT_MOVE_L, 90);
	
	
	let wt = [180, 180, 150, 120][Difficult];
	let muki = 1;

	TShot_sub();
	waitObj(objEnemy, wt);
	
	let t = 0;
	while(eAlive)
	{
		if (t%2 == 1) { EnemyRandomMove(objEnemy, 160, 24); }
		TShot_sub();
		waitObj(objEnemy, wt-120);
		if (!eAlive) { return; }
		TLaser01(muki);
		waitObj(objEnemy, 120);
		muki = -muki;
		t++;
	}
	
	task TShot_sub()
	{
		let speed = [2, 2, 2.33, 3][Difficult];
		let angle = GetAngleToPlayer(objEnemy);
		let way = [15, 15, 15, 15][Difficult];
		let wt = [10, 10, 8, 6][Difficult];
		let graphic = BGW_WING_RED;
		
		let muki = 1;
		ascent(i in 0 .. 9)
		{
			if (!eAlive) { return; }
			let sr = 160-i*10;
			let way_angle = 135 - i*5;
			let tmp_way = way-i;
			let ss = speed;
			loop(2)
			{
				let sa = angle + 90*muki;
				let sx = ObjMove_GetX(objEnemy) + 32*cos(sa);
				let sy = ObjMove_GetY(objEnemy) + 32*sin(sa);
				WingShotWay(sx, sy, ss, sa, graphic, 30, 60+i*5, tmp_way, way_angle/tmp_way*muki, sr);
				muki = -muki;
			}
			CallSound(sndShot2);
			waitObj(objEnemy, wt);
		}
	}
}

task TLaser01(muki)
{
	let shot_speed = [1.5, 1.5, 2, 3][Difficult];
	let shot_count = [0, 5, 5, 5][Difficult];
	
	let array_pos;
	let way;
	let r;
	if (muki > 0) {
		// 右側
		array_pos = [2, 4];
		way = 4;
		r = 0;
	} else {
		// 左側
		array_pos = [1, 2];
		way = 6;
		r = 48;
	}
	ascent(i in 0 .. way)
	{
		if (!eAlive) { return; }
		let ax = array_pos[0];
		let ay = array_pos[1] + i;
		let sa = ObjRender_GetAngleZ(objHorouEffect[ax][ay]);
		let sx = ObjRender_GetX(objHorouEffect[ax][ay]) + r*cos(sa);
		let sy = ObjRender_GetY(objHorouEffect[ax][ay]) + r*sin(sa);
		let speed = 16;
		HorouLaserA02(sx, sy, speed, sa, 20, 24, BGW_LIGHT_L_RED, 60, shot_speed, shot_count, BGW_CHRYSTAL_S_RED);
		waitObj(objEnemy, 5);
	}
}

task HorouLaserA02(x, y, speed, angle, l_len, l_wid, graphic, delay, speed2, count2, graphic2)
{
	CallSound(sndBulletBreak);
	
	let vs = 6;
	let va = angle;
	let obj = CreateHorouLaser(x, y, vs, va, l_len, l_wid, graphic, delay);
	ObjMove_AddPatternA2(obj, 0, vs, NO_CHANGE, -vs/30, 0, 0);
	ObjMove_AddPatternA4(obj, 30, 0, 0, speed/30, 0, speed, objPlayer, NO_CHANGE);
	wait(30);
	if (!Obj_IsDeleted(obj)) { CallSound(sndBulletBreak); }

	wait(1);
	ascent(t in 0 .. count2)
	{
		if (Obj_IsDeleted(obj)) { break; }
		let wa = 5+(count2-t+1)*5;
		let ss = speed2 * (1+t*0.1);
		DelayWay(ObjMove_GetX(obj), ObjMove_GetY(obj),
			0, ObjMove_GetAngle(obj), ss/240, ss, graphic2, 30, 2, wa, 0, delay);
		wait(2);
	}

	task DelayWay(x, y, speed, angle, add_speed, max_speed, graphic, delay, way, way_angle, r, timer)
	{
		wait(timer);
		if (!eAlive) { return; }
		
		let w_cen = 0;
		if (way > 1) { w_cen = (way-1)/2; }
		ascent(i in 0 .. way)
		{
			let sa = angle + (i-w_cen)*way_angle;
			let sx = x + cos(sa)*r;
			let sy = y + sin(sa)*r;
			let obj = My_CreateShotA2(sx, sy, speed, sa, add_speed, max_speed, graphic, delay);
			Obj_SetRenderPriorityI(obj, GetShotRenderPriorityI+1);
		}
	}
}


task WingShotWay(x, y, speed, angle, graphic, delay, timer, way, way_angle, r)
{
	ascent(i in 0 .. way)
	{
		let add_a = (i-(way-1)/2)*way_angle;
		let to_r = (0.25 + 0.75*(i+1)/way) * r;
		let to_offset = add_a*1;
		WingShot(x, y, speed, angle, graphic, delay,
			timer, add_a, to_r, to_offset);
	}
}

task WingShot(x, y, speed, angle, graphic, delay, timer, add_a, to_r, to_offset)
{
	let obj = My_CreateShotA1(x, y, 0, angle, graphic, delay);
	WingAddShot(obj);
	ascent(t in 0 .. timer)
	{
		if (Obj_IsDeleted(obj)) { return; }
		let tmpd = GetCurve_d((t+1)/timer);
		let tmpa = GetCurve_ad((t+1)/timer);
		let br = tmpd * to_r;
		let ba = angle + add_a*tmpa;
		let sx = x + br*cos(ba);
		let sy = y + br*sin(ba);
		let sa = ba + to_offset*tmpd;
		ObjMove_SetPosition(obj, sx, sy);
		ObjMove_SetAngle(obj, sa);
		yield;
	}
	if (Obj_IsDeleted(obj)) { return; }
	ObjMove_AddPatternA2(obj, 0, NO_CHANGE, NO_CHANGE, speed/120, 0, speed);
	CallSound(sndShot2);
}

task WingAddShot(objBase)
{
	let obj = My_CreateShotA1(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), 0, 0, ADD_BGW_FUGU_WHITE, 0);
	let col = GetEffectColor(BULLET_EFFECT[ObjShot_GetImageID(objBase)%8]);
	ObjRender_SetColor(obj, col[0]*0.66+64, col[1]*0.66+64, col[2]*0.66+64);
	SetShotDisabled(obj);
	let t = 0;
	while(!Obj_IsDeleted(objBase))
	{
		if (Obj_IsDeleted(obj)) { return; }
		if (t < 60)
		{
			let tmp = GetCurve((t+1)/60);
			ObjRender_SetAlpha(obj, tmp*255);
		}
		ObjMove_SetPosition(obj, ObjMove_GetX(objBase), ObjMove_GetY(objBase));
		ObjMove_SetAngle(obj, ObjMove_GetAngle(objBase));
		t++;
		yield;
	}
	Obj_Delete(obj);
}

// 蒸着！
function A02_OpeningMotion()
{
	SwitchHorouBook(60);
	CallSound(sndPower2);
	waitObj(objEnemy, 90);
	EffectChargeSetA(objHorouTablet, EFF_WHITE, 90);
	CallSound(sndPower1);
	waitObj(objEnemy, 60);
	SetDummyOpt(ObjMove_GetX(objHorouTablet), ObjMove_GetY(objHorouTablet), 120);
	CallSound(sndPower3);
	waitObj(objEnemy, 30);
	Obj_Delete(objHorouTablet);
	SetAction(objEnemy, ACT_SHOT1, 120);
	waitObj(objEnemy, 90);
	CallSound(sndPower5);
//	Boss_Finalize(objEnemy, false, false);
	
	task SetDummyOpt(x, y, timer)
	{
		let objDummy = MakeEnemyFamilier(x, y, 99999, ENEMY_S);
		let objImg = ObjPrim_Create(OBJ_PRIMITIVE_2D);
		Obj_SetValue(objDummy, "IMAGE_ID", objImg);	//IDを記録
		ObjRender_SetPosition(objImg, ObjMove_GetX(objDummy), ObjMove_GetY(objDummy), 0 );
		
		// オプション配置
		SetEffect06_Opt(objDummy, 2, 0);
		objHorouEffect = SetEffect06(objDummy);
		
		let t = 0;
		while(!Obj_IsDeleted(objDummy) && t < 150)
		{
			let apos = aPosition(objEnemy);
			if (t < 60) { apos = 0; }
			if (t < timer-30) { apos *= (t-30)/30; }
			if (t == 60) { MoveTo(objDummy, ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), 60); }
			ObjRender_SetPosition(objImg, ObjMove_GetX(objDummy), ObjMove_GetY(objDummy) + sin(aTime(objEnemy)*3)*apos, 0 );
			t++;
			yield;
		}
		Obj_Delete(objDummy);
		Obj_Delete(objImg);
	}
}

