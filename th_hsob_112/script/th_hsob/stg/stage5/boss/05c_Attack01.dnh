#東方弾幕風[Single]
#ScriptVersion[3]
#Title["セト通常1"]
#Text["セト通常1"]
#Background[""]
#System["./../../../system/System.dnh"]

//---------------------------------------------------------------------

// 関数取り込み
#include"./../../../lib/lib_boss.dnh"
#include"./lib_Set.dnh"

@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult(2800);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(55);		}
	BossEvent();
}

let BX;
let BY;

@Initialize {
	// アイテム数
	bossDropItem = 50;

	Boss_Init();	//初期設定
	objEnemy = CreateBoss(BOSS_ID_SET);	//ボスセット

	// チャプター開始
	ChapterStartBoss(GetBossID(objEnemy), 1, CHAPTER_BOSS);
	Task_Main();
}

@MainLoop {
	yield;
}

// メインタスク
task Task_Main
{
	standBy(objEnemy, CenX, 160, 60);
	waitObj(objEnemy, 60);
	let ang = rand(0, 360);
	let way = [6, 7, 9, 9][Difficult];
	let D = 1;
	TShot2();
	BposMoveBreaking();

	while(eAlive)
	{
		ascent(i in 0 .. way){
			TShot(90+ang+360*i/way, D);
		}
		loop(2){
			if(!eAlive){return;}
			SetAction(objEnemy, ACT_SHOT2, 180);
			waitObj(objEnemy, 150);
			if(!eAlive){return;}
			EnemyRandomMove(objEnemy, 160, 32);
			waitObj(objEnemy, 30);
		}
		D = -D;
	}
	
	task BposMoveBreaking(){
		BX = ObjMove_GetX(objEnemy);
		BY = ObjMove_GetY(objEnemy);
		while(eAlive){
			BX += (ObjMove_GetX(objEnemy)-BX)*0.02;
			BY += (ObjMove_GetY(objEnemy)-BY)*0.02;
			waitObj(objEnemy, 1);
		}
	}

	task TShot(ang, Dirc){
		let r = 60;
		let t = 0;
		let c = 0;
		let c2 = 0;
		let time = [390, 390, 372, 372][Difficult];
		let itv = [90, 90, 72, 72][Difficult];
		let angAdd = -[0.40, 0.35, 0.27, 0.27][Difficult]*Dirc;
		let blt_ang = 90*Dirc;
		let bltAngAdd = [1.2, 1.5, 2.0, 2.7][Difficult]*Dirc;
		let spd = [3.2, 4.0, 5.4, 7.2][Difficult];
		let bltItv = [25, 20, 15, 10][Difficult];
		let wtMx = [15.0, 12.5, 12.0, 10.5][Difficult];
		let wtMn = [1.25, 1.00, 0.75, 0.5][Difficult];
		let r2 = [18, 18, 15, 15][Difficult];
		let wtR = (wtMx - wtMn)/2;
		let wtC = (wtMx + wtMn)/2;
		let grap = [BGW_BALL_SS_ORANGE, BGB_BALL_S_ORANGE];
		while(eAlive){
			if(t >= time){break;}
			let wt = wtC+wtR*cos(360*t/itv);
			while(c >= wt){
				CallSound(sndShot3);
				c -= wt;
				let rate = 1-c;
				ang += angAdd*rate;
				let rP = RandPos(r2);
				let a = ang+blt_ang;
				let objS = My_CreateShotA2(BX + r*cos(ang) + rP[0], BY + r*sin(ang) + rP[1],
					 spd, a, -spd/(bltItv*2), spd/2, grap[c2%2], 10);
				ascent(i in 0 .. 4){
					ObjMove_AddPatternA2(objS, i*bltItv/4, NO_CHANGE, NO_CHANGE, -spd/(bltItv*2), bltAngAdd*(1-0.25*i), spd/2);
				}
				c2++;
				ang -= angAdd*rate;
			}
			c++;
			t++;
			ang += angAdd;
			waitObj(objEnemy, 1);
		}
		function RandPos(r){
			r = rand(0,r);
			let ang = rand(0, 360);
			return [r*cos(ang), r*sin(ang)];
		}
	}

	task TShot2(){
		let way = [7, 9, 9, 10][Difficult];
		let wt = [90, 75, 50, 36][Difficult];
		let spd = [1.25, 1.6, 2.2, 2.7][Difficult];
		let r = 20;
		let c = 0;
		let t = 0;
		let ang = 0;
		while(eAlive){
			while(c >= wt){
//				CallSound(sndShot6);
				CallSound(sndShot5);
				c -= wt;
				let rate = 1-c;
				let a2 = GetAngleToPlayer(objEnemy);
				ascent(i in 0 .. way){
					let a = a2 + ang+360*i/way;
					RhombusShot(objEnemy, 5, 6, 3.6, ObjMove_GetX(objEnemy)+r*cos(a), ObjMove_GetY(objEnemy)+r*sin(a),
						 spd, a, BGW_CHRYSTAL_S_ORANGE, 10);
				}
				ang += 180/way;
			}
			c++;
			t++;
			waitObj(objEnemy, 1);
		}
		

	}
}
