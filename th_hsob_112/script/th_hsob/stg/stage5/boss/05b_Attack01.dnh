#東方弾幕風[Single]
#ScriptVersion[3]
#Title["ネベト通常1"]
#Text["ネベト通常1"]
#Background[""]
#System["./../../../system/System.dnh"]

//---------------------------------------------------------------------

// 関数取り込み
#include"./../../../lib/lib_boss.dnh"

@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult(2400);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(25);		}
	BossEvent();
}

@Initialize {
	// アイテム数
	bossDropItem = 50;

	Boss_Init();	//初期設定
	objEnemy = CreateBoss(BOSS_ID_NEBET);	//ボスセット

	// チャプター開始
	ChapterStartBoss(GetBossID(objEnemy), 1, CHAPTER_BOSS);

	Task_Main();
}

@MainLoop {
	yield;
}



// メインタスク
task Task_Main
{
	standBy(objEnemy, CenX, 160, 15);
	waitObj(objEnemy, 60);
	let D = 1;
	while(eAlive)
	{
		// ACT_SHOT1：溜め
		// ACT_SHOT2：歌
		SetAction(objEnemy, ACT_SHOT2, 120);
		TShot(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), 1.5, D, BGW_LIGHT_S_PURPLE, 10);
		waitObj(objEnemy, 180);
		D = -D;
		EnemyRandomMove(objEnemy, 160, 32);
		SetAction(objEnemy, ACT_MOVE, 120);
		waitObj(objEnemy, 120);
	}
}

task TShot(x, y, angAdd, Dirc, grap, delay){
	let r = 0;
	let rPlus = [0.150,0.350, 0.400, 0.450][Difficult];
	let r2 = 80;
	let baseAng = 0;
	let baseAngAdd = angAdd*Dirc;

	let bx = x;
	let by = y;
	let bs = 0;
	let ba = 0;
	let ang = rand(0, 360);
	let old_x = 0;
	let old_y = 0;

	let bltWay = 4;
	let bltAng = rand(0, 360);
	let bltAngAdd = [38.4, 23.6, 25.6, 25.6][Difficult]*Dirc;
	let bltR = [270, 270, 280, 280][Difficult];
	let bltItv = [30, 20, 15, 10][Difficult];
	let bltWt = [150, 120, 100, 80][Difficult];

	let way = 8;
	let time1 = 60;
	let time2 = 300;

	CallSound(sndShot4);
	ascent(iW in 0 .. way){
		ShotA(ang+360*iW/way, grap);
	}
	let rSin = r2-rPlus*time1;
	ascent(i in 1 .. time1+1){
		r = rSin*sin(90*i/60)+ rPlus*i;
		x = r*cos(baseAng);
		y = r*sin(baseAng);
		let dx = x-old_x;
		let dy = y-old_y;
		bs = (dy^2+dx^2)^0.5;
		ba = atan2(dy, dx);
		old_x = x;
		old_y = y;
		baseAng += (4.0-3.0*i/time1)*baseAngAdd;

		wait(1);
	}
	ascent(i in 1 .. time2+1){
		r += rPlus;
		x = r*cos(baseAng);
		y = r*sin(baseAng);
		let dx = x-old_x;
		let dy = y-old_y;
		bs = (dy^2+dx^2)^0.5;
		ba = atan2(dy, dx);
		old_x = x;
		old_y = y;
		baseAng += baseAngAdd*(r2/r);
		
		bltAng += bltAngAdd/bltItv;
		wait(1);
	}
	
	task ShotA(ang, bltGrap){
		let objS = [
			My_CreateShotA1(bx, by, 0, ang, ADD_BGW_BUTTERFLY_PURPLE, 0),
			My_CreateShotA1(bx, by, 0, ang, BGW_LIGHT_S_YELLOW, delay)
		];
		ascent(i in 0 .. length(objS)){
			ObjShot_SetSpellResist(objS[i], true);
			ObjShot_SetAutoDelete(objS[i], false);
		}
		ObjRender_SetScaleY(objS[0], 1.5);
		let count = 0;
		loop(time1 + 1){
			ascent(i in 0 .. length(objS)){
				ObjMove_SetSpeed(objS[i], bs);
				ObjMove_SetAngle(objS[i], ang+ba);
			}
			ObjRender_SetScaleX(objS[0], 1.5*sin(count*3));
			count++;
			wait(1);
		}
		let D = 1;
		ascent(t in 0 .. time2){
			if(Obj_IsDeleted(objS[0]) || Obj_IsDeleted(objS[1])){break;}
			if(t%bltItv == 0){
				CallSound(sndShot5);
				let a = ang + baseAng;
				ascent(iW in 0 .. bltWay){
					let bltA = bltAng + 360*iW/bltWay;
					let dx = (bltR*cos(bltA) + 10*cos(a+90*D))-(ObjMove_GetX(objS[0])-bx);
					let dy = (bltR*sin(bltA) + 10*sin(a+90*D))-(ObjMove_GetY(objS[0])-by);
					let baa = atan2(dy, dx);
					let bll = (dy^2+dx^2)^0.5;
					My_CreateShotA1(ObjMove_GetX(objS[0]), ObjMove_GetY(objS[0]), bll/bltWt, baa, bltGrap, 10);
				}
				D = -D;
			}
			ascent(i in 0 .. length(objS)){
				ObjMove_SetSpeed(objS[i], bs);
				ObjMove_SetAngle(objS[i], ang+ba);
			}
			ObjRender_SetScaleX(objS[0], 1.5*sin(count*3));
			count++;
			wait(1);
		}
		ascent(i in 0 .. length(objS)){
			ObjShot_SetAutoDelete(objS[i], true);
			ObjShot_SetIntersectionEnable(objS[i], false);
		}
		descent(t in 0 .. 30){
			ascent(i in 0 .. length(objS)){
				ObjRender_SetAlpha(objS[i], 255*t/30);
			}
			wait(1);
		}
		descent(i in 0 .. length(objS)){
			Obj_Delete(objS[i]);
		}
	}
}
