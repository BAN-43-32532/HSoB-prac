#東方弾幕風[Single]
#ScriptVersion[3]
#Title["乱々通常1（道中）"]
#Text["乱々通常1（道中）"]
#Background[""]
#System["./../../../system/System.dnh"]

//---------------------------------------------------------------------

// 関数取り込み
#include"./../../../lib/lib_boss.dnh"
#include"./lib_Ranran.dnh"

@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult(1800);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(21);		}
	BossEvent();
}

@Initialize {
	//ダメージ透過率（スペカがあるので柔らかめ）
	if (Difficult >= D_HARD) { dIni_Shot = 125; }
	// アイテム数
	bossDropItem = 100;

	Boss_Init();	//初期設定
	objEnemy = CreateBoss(BOSS_ID_RANRAN);	//ボスセット

	// チャプター開始
	ChapterStartBoss(GetBossID(objEnemy), -1, CHAPTER_BOSS);

	Task_Main();
}

@MainLoop {
	yield;
}



// メインタスク
task Task_Main
{
	SetEnemyVisible(objEnemy, true);
	ObjMove_SetPosition(objEnemy, CenX+256, 200);
	MoveTo(objEnemy, CenX+128, 120, 75);
	SetAction(objEnemy, ACT_MOVE, 75);
	waitObj(objEnemy, 75);
	if (!eAlive) { return; }

	let muki = -1;
	SetFamilier01(CenX-160*muki, 180, 0, 0, muki);
	RanranActSet(objEnemy, 60, 150);
	CallSound(sndBoon);
	waitObj(objEnemy, 60);
	if (!eAlive) { return; }
	MoveTo(objEnemy, CenX+96*muki, 160, 135);
	waitObj(objEnemy, 150);

	while(eAlive)
	{
		MoveTo(objEnemy, CenX+128*muki, 120, 45);
		SetAction(objEnemy, ACT_MOVE, 45);
		waitObj(objEnemy, 190);
		muki = -muki;

		if (!eAlive) { return; }
		SetFamilier01(CenX-160*muki, 180, 0, 0, muki);
		RanranActSet(objEnemy, 60, 150);
		CallSound(sndBoon);
		waitObj(objEnemy, 60);
		if (!eAlive) { return; }
		MoveTo(objEnemy, CenX+96*muki, 160, 135);
		waitObj(objEnemy, 150);
	}
}

// 筆ショット
task SetFamilier01(iniX, iniY, iniSpeed, iniAngle, iniValue)
{
	let iniMuki = iniValue;
	
	let eSize = ENEMY_SS;
	let eColor = EFF_RED;
	let baseAngle = iniAngle;
	
	let objFamilier = MakeEnemyFamilier(iniX, iniY, 999999, eSize);
	SetEnemyVisible(objFamilier, false);
	DrawRanranOption(objFamilier);
	TAct();
	WaitForKilledFamilier(objFamilier, 0, 0);
	ZakoFinalize(objFamilier, eColor);
	
	task TAct()
	{
		TMove;
		TShot;
	}
	
	task TMove()
	{
		waitObj(objFamilier, 60);
		ascent(t in 0 .. 120)
		{
			if (Obj_IsDeleted(objFamilier)) { return; }
			let tmp = (1-cos((t+1)/120*180))/2;
			let ea = 90+60*iniMuki + tmp*360*iniMuki;
			let ex = iniX+iniMuki*330*tmp + tmp*32*cos(ea);
			let ey = iniY+64*tmp-sin(tmp*450)*48*tmp + tmp*32*sin(ea);
			ObjMove_SetPosition(objFamilier, ex, ey);
			waitObj(objFamilier, 1);
		}
		if (Obj_IsDeleted(objFamilier)) { return; }
		EraseEnemy(objFamilier);
	}
	
	task TShot()
	{
		waitObj(objFamilier, 60);
		
		let shot_speed = [1, 1, 1, 1][Difficult];
		let shot_speed_max = [1.5, 1.5, 2, 2.5][Difficult];
		let base_angle = rand(0,360);
		let graphic = BGW_SCALE_RED;
		let way = [2, 3, 5, 6][Difficult];
		let count = [1, 1, 1, 1][Difficult];
		let add_a = [120, 30, 120, 45][Difficult];
		let timer = 120;
		
		let wt = 2;
		
		let st = 0;
		ascent(t in 0 .. timer)
		{
			if (Obj_IsDeleted(objFamilier)) { break; }
			if (t%wt == 0)
			{
				let ss = rand(1, 1.25);
				let sa = -90 - iniMuki*30+rand(-5,5);
				My_CreateShotA2Ex(ObjMove_GetX(objFamilier), ObjMove_GetY(objFamilier), ss*5, sa, -ss/5, ss, BGW_WATER_RED, 15, DELAY_ADD);
				
				let tmp = t/120;
				let to_sa = base_angle + (tmp*90 + st*add_a)*iniMuki;
				let to_ss = shot_speed + (shot_speed_max-shot_speed)*t/timer;
				RedRedShot(ObjMove_GetX(objFamilier), ObjMove_GetY(objFamilier), to_ss, to_sa, graphic, 15, way, count);
				
				CallSound(sndShot2);
				st++;
			}
			waitObj(objFamilier, 1);
		}

		task RedRedShot(x, y, speed, angle, graphic, delay, way, count)
		{
			let obj = My_CreateShotA1(x, y, 0, 90, ADD_BGW_BALL_S_RED, 15);
			wait(60);
			if (!Obj_IsDeleted(obj))
			{
				ascent(i in 0 .. way)
				{
					let sa = i*360/way + angle;
					ascent(j in 0 .. count)
					{
						let ss = speed * (1+j/2);
						let to_obj = My_CreateShotA1(x, y, 0.2, sa, graphic, delay);
						ObjMove_AddPatternA2(to_obj, 60, NO_CHANGE, NO_CHANGE, ss/60, 0, ss);
					}
				}
				DeleteBulletEffect(obj);
			}
		}
	}
}
