#東方弾幕風[Single]
#ScriptVersion[3]
#Title["ひかり子道中通常1"]
#Text["ひかり子道中通常1"]
#Background[""]
#System["./../../../system/System.dnh"]

//---------------------------------------------------------------------

// 関数取り込み
#include"./../../../lib/lib_boss.dnh"
#include"./lib_Hikariko.dnh"

@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult(1800);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(20);		}
	BossEvent();
}

@Initialize {
	// アイテム数
	bossDropItem = 50;

	Boss_Init();	//初期設定
	objEnemy = CreateBoss(BOSS_ID_HIKARIKO);	//ボスセット

	// チャプター開始
	ChapterStartBoss(GetBossID(objEnemy), -1, CHAPTER_BOSS);

	// 使い魔と体力連動
	CheckLinkLife_Boss(objEnemy);

	Task_Main();
}

@MainLoop {
	yield;
}

// メインタスク
task Task_Main
{
	ObjMove_SetPosition(objEnemy, CenX, 160);
	SetEnemyVisible(objEnemy, true);
	SetAction(objEnemy, ACT_SHOT2, 180);
	BossCharge(objEnemy);
	waitObj(objEnemy, 60);
	
	let way = 5;
	let way_max = 7;
	let wt = 270;
	
	let t = 0;
	let muki = rand_dir();
	while(eAlive)
	{
		if (t > 0) { SetAction(objEnemy, ACT_SHOT2, way*20+60); }
		ascent(i in 1 .. way+1)
		{
			if (!eAlive) { return; }
			let sa = -90 + 15*i*muki;
			SetFamilier01(ObjMove_GetX(objEnemy)+32*cos(sa), ObjMove_GetY(objEnemy)+32*sin(sa), 4, sa, muki);
			CallSound(sndShot2);
			muki = -muki;
			waitObj(objEnemy, 20);
		}
		if (!eAlive) { return; }
		EnemyRandomMove(objEnemy, 160, 32);
		waitObj(objEnemy, wt-20*way);
		way = min(way_max, way+1);
		t++;
	}
}


// 鳥ショット
task SetFamilier01(iniX, iniY, iniSpeed, iniAngle, iniValue)
{
	let iniMuki = iniValue;
	
	let eSize = ENEMY_M;
	let eColor = EFF_RED;
	let baseAngle = iniAngle;
	
	let objFamilier = MakeEnemyFamilier(iniX, iniY, 20, eSize);
	CheckLinkLife_Familier(objEnemy, objFamilier, 0.8);	// ボスと体力連動
	DrawBirdOption(objFamilier, EFF_BLUE, iniAngle, 1);
	TAct();
	WaitForKilledFamilier(objFamilier, 8, 0);
	ZakoFinalize(objFamilier, eColor);
	
	task TAct()
	{
		TMove;
		TShot;
	}
	
	task TMove()
	{
		Enemy_SetPatternA2(objFamilier, 0, iniSpeed/2, iniAngle, -iniSpeed/90, 0, iniSpeed/6);
		Enemy_SetPatternA2(objFamilier, 60, NO_CHANGE, NO_CHANGE, iniSpeed/120, 0, iniSpeed);
		MoveHormingEnemy(objFamilier, 1, 600);
		TCheckDispINOut(objFamilier, 32);
	}
	
	task TShot()
	{
		waitObj(objFamilier, 60);
		
		let wt = [3, 3, 3, 2][Difficult];
		let shot_span = [4, 3, 2, 2][Difficult];
		let timer = [90, 240, 240, 240][Difficult];
		
		let speed = [1.25, 1.33, 1.5, 2][Difficult];
		let graphic = ADD_BGW_BALL_S_BLUE;
		
		let st = 0;
		let t = 0;
		while(CanShotBullet(objFamilier) && t < timer)
		{
			let tmp = GetCurve_d(min(1, t/120));
			let ba = Enemy_GetAngle(objFamilier) + 180;
			let sa = GetAngleToPlayer(objEnemy);
			let shotFlg = (st%shot_span==0);
			let graphic = [ADD_BGW_BALL_S_BLUE, ADD_BGW_BALL_BS_BLUE][shotFlg];
			let ss = speed * (1 - (1-tmp)*0.5) * (1 - 0.1*(trunc(st/shot_span)%3));
			
			SagiShot(ObjMove_GetX(objFamilier), ObjMove_GetY(objFamilier), ss, ba+rand(-5,5), graphic, 30, shotFlg);
			waitObj(objFamilier, wt);
			st++;
			t += wt;
		}
	}
	
	task SagiShot(x, y, speed, angle, graphic, delay, shotFlg)
	{
		let obj = My_CreateShotA2(x, y, 2, angle, -2/120, 0, graphic, 30);
		wait(120);
		if (!Obj_IsDeleted(obj))
		{
			if (shotFlg)
			{
				let sa = GetAngleToPlayer(objEnemy) + rand(-24,24);
				My_CreateShotA2Ex(ObjMove_GetX(obj), ObjMove_GetY(obj), 0, sa, speed/120, speed, graphic, 30, DELAY_ADD);
				CallSound(sndBulletBreak);
			}
			DeleteBulletEffect(obj);
		}
	}
}
