#東方弾幕風[Single]
#ScriptVersion[3]
#Title["スペカ6"]
#Text["スペカ6"]
#Background[""]
#System["./../../../system/System.dnh"]

//---------------------------------------------------------------------

// 関数取り込み
#include"./../../../lib/lib_boss.dnh"
#include"./lib_Mumei.dnh"
#include"./HanieShot.dnh"

@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult(550);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(90);		}
	BossEvent();
}

@Initialize {
	let SPELL_ID = 96;
	let SPELL_NAME = 5;
	
	// アイテム数
	if (IsRainbow())	{ bossDropItem = 400; }
	else			{ bossDropItem = 150; }

	//ダメージ透過率
	dIni_Shot = 10;
	//防御率再計算
	SetMumeiDefence();

	//初期設定
	Boss_Init();

	InitMumei();

	objEnemy = CreateBoss(BOSS_ID_MUMEI);	//ボスセット

	//スペカデータ・セット
	SetSpellCardData(GetSpellCardID(SPELL_ID), SPELL_NAME, 
			GetCurrentScriptDirectory()~"07b_Background.dnh",
			GetBossTexture(objEnemy, I_CUTIN), 0.65, CUTMOTION_NORMAL);

	// チャプター開始
	ChapterStartBoss(GetBossID(objEnemy), SPELL_NAME, CHAPTER_SPELL);

	// 使い魔と体力連動
	CheckLinkLife_Boss(objEnemy);
	
	// バーリアーｗｗｗｗｗ
	TBombBarrierEx(objEnemy);

	Task_Main();
}

@MainLoop {
	yield;
}

// メインタスク
task Task_Main
{
	standBy(objEnemy, CenX, CenY-32, 240);
	SetMumeiEffect(objEnemy, true);
	waitObj(objEnemy, 60);

	CallSpellCard(true);	//スペカ起動
	
	let muki = 1;
	let wt_add = [0, 30, 0][DifficultEx()];
	
	BossChargeFire(objEnemy);
	SetAction(objEnemy, ACT_SHOT1, 240);
	waitObj(objEnemy, 30);
	if (!eAlive) { return; }
	HMissile(1, 8, 30, 3, muki);
	waitObj(objEnemy, 300);
	
	while(eAlive)
	{
		BossChargeFire(objEnemy);
		SetAction(objEnemy, ACT_SHOT1, 600);
		waitObj(objEnemy, 60);
		if (!eAlive) { return; }
		let sa = GetAngleToPlayer(objEnemy);
		HBit(3, sa, muki*0, 12);
		CallSound(sndPower3);
		waitObj(objEnemy, 180+wt_add);
		if (!eAlive) { return; }
		sa = GetAngleToPlayer(objEnemy);
		HBit(5, sa, 75*muki, 12);
		CallSound(sndPower3);
		waitObj(objEnemy, 60);
		if (!eAlive) { return; }
		HBit(5, sa, -75*muki, 12);
		CallSound(sndPower3);
		waitObj(objEnemy, 120+wt_add);
		sa = GetAngleToPlayer(objEnemy);
		ascent(i in 0 .. 4)
		{
			if (!eAlive) { return; }
			let fs = 8-i*2;
			HBit(fs, sa+180*i/6, muki*[60,-60][i%2], 6);
			CallSound(sndPower3);
			waitObj(objEnemy, 10);
		}

		if (!eAlive) { return; }
		BossChargeFire(objEnemy);
		SetAction(objEnemy, ACT_SHOT1, 60);
		waitObj(objEnemy, 60);
		ascent(i in 0 .. 3)
		{
			if (!eAlive) { return; }
			HOption(i+1, 50, 10, [muki,-muki][i%2]);
			SetAction(objEnemy, ACT_SHOT2, 180);
			CallSound(sndPower3);
			waitObj(objEnemy, 240+wt_add);
		}
		waitObj(objEnemy, 180);
		
		if (!eAlive) { return; }
		BossChargeFire(objEnemy);
		SetAction(objEnemy, ACT_SHOT1, 600);
		waitObj(objEnemy, 60);
		if (!eAlive) { return; }
		HMissile2(1, 6, 90, 5, -muki);
		waitObj(objEnemy, 720+wt_add);
		
		muki = -muki;
	}
	
	task HMissile(speed_min, speed_max, count, wt, muki)
	{
		let base_angle = GetAngleToPlayer(objEnemy);
		ascent(i in 0 .. count)
		{
			if (!eAlive) { return; }
			let sa = base_angle + i*360/1.618/12*muki;
			let ss = speed_min + (speed_max-speed_min)*i/(count-1);
			let to_ss = 8;
			HanieMissile(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), ss, to_ss, sa-90);
			HanieMissile(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), ss, to_ss, sa+90);
			waitObj(objEnemy, 3);
		}
	}
	task HMissile2(speed_min, speed_max, count, wt, muki)
	{
		let base_angle = GetAngleToPlayer(objEnemy);
		ascent(i in 0 .. count)
		{
			if (!eAlive) { return; }
			let sa = base_angle + i*360/1.618/12*muki;
			let ss = speed_min + (speed_max-speed_min)*min(1, i/(count-1)*4);
			let to_ss = 8;
			HanieMissile(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), ss, to_ss, sa-90);
			HanieMissile(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), ss, to_ss, sa+90);
			waitObj(objEnemy, wt);
		}
	}
	task HOption(way, way_angle, count, muki)
	{
		let base_angle = GetAngleToPlayer(objEnemy) + 180;
		ascent(i in 0 .. count)
		{
			if (!eAlive) { return; }
			ascent(j in 0 .. way)
			{
				let sa = base_angle + i*360/count*muki + (j-(way-1)/2)*way_angle*muki;
				let ss = 0.75 + (j-(way-1)/2) * 0.1;

				HanieOption(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), ss, sa);
			}
			waitObj(objEnemy, 10);
		}
	}
	task HBit(f_speed, angle, offset_angle, way)
	{
		ascent(i in 0 .. way)
		{
			let sa = angle + i*360/way;
			let ss = 6;
			let fs = f_speed;
			let oa = offset_angle;
			HanieBit(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), ss, sa, fs, oa);
		}
	}
}

task HanieMissile(x, y, speed, speed2, angle)
{
	let objS = HanieEnemy(x, y, HANIE_TYPE_1, 1, 45, 20, 0.8);
	TMove();
	TAct();
	
	task TAct()
	{
		let eX = ObjMove_GetX(objS);
		let eY = ObjMove_GetY(objS);
		let t = 0;
		while(!Obj_IsDeleted(objS))
		{
			if (!CheckDispIN(objS, 0)) { break; }
			eX = ObjMove_GetX(objS);
			eY = ObjMove_GetY(objS);
			t++;
			waitObj(objS, 1);
		}
		if ((Obj_IsDeleted(objS) || CheckDispIN(objS, 16)) && eAlive)
		{
			let enmSize = ENEMY_S;
			let eA = atan2(GetPlayerY-eY, GetPlayerX-eX);

			if (!Obj_IsDeleted(objS)) { JIBAKU(eX, eY, ObjMove_GetAngle(objS), true); }
			
			EffectZako_Explode(eX, eY, eA+randEffect(-15,15), EFF_YELLOW, ENEMY_EXPLO_EFFECT[enmSize][0], ENEMY_EXPLO_EFFECT[enmSize][1]);
			CallSound(sndVanish);
		}
		Obj_Delete(objS);
	}
	
	task TMove()
	{
		ObjMove_AddPatternA2(objS, 0, speed, angle, -speed/45, 0, 0);
		ObjMove_AddPatternA2(objS, 60, NO_CHANGE, NO_CHANGE, speed2/90, 0, speed2*2);
		wait(45);
		MoveHorming(objS, 30, 15);
	}
}

task HanieBit(x, y, speed, angle, f_speed, offset_angle)
{
	let objS = HanieEnemy(x, y, HANIE_TYPE_2, 1, 30, 20, 0.8);
	TAct();
	TMove();
	TShot();
	
	task TAct()
	{
		let eX = ObjMove_GetX(objS);
		let eY = ObjMove_GetY(objS);
		let t = 0;
		while(!Obj_IsDeleted(objS))
		{
			if (!CheckDispIN(objS, 0)) { break; }
			eX = ObjMove_GetX(objS);
			eY = ObjMove_GetY(objS);
			t++;
			waitObj(objS, 1);
		}
		if ((Obj_IsDeleted(objS) || CheckDispIN(objS, 16)) && eAlive)
		{
			let enmSize = ENEMY_S;
			let eA = atan2(GetPlayerY-eY, GetPlayerX-eX);

			if (!Obj_IsDeleted(objS)) { JIBAKU(eX, eY, ObjMove_GetAngle(objS), false); }
			
			EffectZako_Explode(eX, eY, eA+randEffect(-15,15), EFF_YELLOW, ENEMY_EXPLO_EFFECT[enmSize][0], ENEMY_EXPLO_EFFECT[enmSize][1]);
			CallSound(sndVanish);
		}
		Obj_Delete(objS);
	}
	
	task TMove()
	{
		ObjMove_AddPatternA2(objS, 0, f_speed, angle, -f_speed/30, 0, 0);
		ObjMove_AddPatternA2(objS, 30, NO_CHANGE, NO_CHANGE, 0, offset_angle/15, 0);
		ObjMove_AddPatternA2(objS, 45, NO_CHANGE, NO_CHANGE, speed/120, 0, speed);
	}
	
	task TShot()
	{
		let shot_speed = [2.5, 1.5, 2.5][DifficultEx()];
		let way = 3;
		let way_angle = [2, 1.5, 2][DifficultEx()];
		let graphic = BGB_MISSILE_RED;
		let wt = 2;
		let ct_max = [60, 15, 60][DifficultEx()];
		
		waitObj(objS, 60);
		
		let st = 0;
		while(!Obj_IsDeleted(objS) && st < ct_max)
		{
			let sx = ObjMove_GetX(objS);
			let sy = ObjMove_GetY(objS);
			let ss = shot_speed * (1 + st/16);
			let sa = angle+offset_angle+180;
			CreateShotWayA2(sx, sy, 0, sa, ss/120, ss, graphic, 15, way, way_angle, 8);
			st++;
			waitObj(objS, wt);
		}
	}
}

task HanieOption(x, y, speed, angle)
{
	let objS = HanieEnemy(x, y, HANIE_TYPE_3, 1, 30, 50, 0.8);
	TAct();
	TMove();
	TShot();
	
	task TAct()
	{
		let eX = ObjMove_GetX(objS);
		let eY = ObjMove_GetY(objS);
		let t = 0;
		while(!Obj_IsDeleted(objS))
		{
			if (!CheckDispIN(objS, 0)) { break; }
			eX = ObjMove_GetX(objS);
			eY = ObjMove_GetY(objS);
			t++;
			waitObj(objS, 1);
		}
		if ((Obj_IsDeleted(objS) || CheckDispIN(objS, 16)) && eAlive)
		{
			let enmSize = ENEMY_S;
			let eA = atan2(GetPlayerY-eY, GetPlayerX-eX);

			if (!Obj_IsDeleted(objS)) { JIBAKU(eX, eY, ObjMove_GetAngle(objS), false); }
			
			EffectZako_Explode(eX, eY, eA+randEffect(-15,15), EFF_YELLOW, ENEMY_EXPLO_EFFECT[enmSize][0], ENEMY_EXPLO_EFFECT[enmSize][1]);
			CallSound(sndVanish);
		}
		Obj_Delete(objS);
	}
	
	task TMove()
	{
		ObjMove_AddPatternA2(objS, 0, 4, angle, -4/30, 0, 0);
		ObjMove_AddPatternA2(objS, 30, NO_CHANGE, NO_CHANGE, speed/30, 0, speed);
	}
	
	task TShot()
	{
		let shot_speed = 1;
		let way = 1;
		let way_angle = 2;
		let graphic = BGW_KUNAI_YELLOW;
		let wt = [120, 9999, 120][DifficultEx()]-3*6;
		
		waitObj(objS, 90);
		
		let st = 0;
		while(!Obj_IsDeleted(objS))
		{
			let sa = GetAngleToPlayer(objS);
			ascent(i in 0 .. 6)
			{
				if (Obj_IsDeleted(objS)) { break; }
				let sx = ObjMove_GetX(objS);
				let sy = ObjMove_GetY(objS);
				let ss = shot_speed * (1+i/18);
				CreateShotWayA2(sx, sy, 0, sa, ss/15, ss, graphic, 15, way, way_angle, 8);
				CallSound(sndShot3);
				waitObj(objS, 3);
			}
			st++;
			waitObj(objS, wt);
		}
	}
}

let SHOT_SEED = 0;
task JIBAKU(x, y, angle, shot_flg)
{
	
	if (shot_flg)
	{
		let objS = NuclearShot(x, y, [160,48,0], 32, 15);
		let objImg = Obj_GetValueD(objS, "IMAGE_ID_ALL", []);
		ascent(i in 0 .. length(objImg)) { Obj_SetRenderPriorityI(objImg[i], GetShotRenderPriorityI+2); }
		ObjShot_SetDeleteFrame(objS, 20);
		EffectExplodeCloudSet(x, y, 8, [96,24,0], 45, 1);
		CallSound(sndShot1);
		// 追加ショット
		let shot_speed = [3, 2.25, 3][DifficultEx()];
		let shot_way = [7, 2, 7][DifficultEx()];
		let real_way = [7, 7, 7][DifficultEx()];
		CreateShotWayA2(x, y, 0, angle+360/real_way*SHOT_SEED, shot_speed/600, shot_speed, BGW_FIRE_RED, 30, shot_way, 360/real_way, 0);
		SHOT_SEED+=3;
	}
	else
	{
		let objS = NuclearShot(x, y, [255,48,0], 32, 15);
		let objImg = Obj_GetValueD(objS, "IMAGE_ID_ALL", []);
		ascent(i in 0 .. length(objImg)) { Obj_SetRenderPriorityI(objImg[i], GetShotRenderPriorityI+2); }
		ObjShot_SetDeleteFrame(objS, 20);
		EffectExplodeCloudSet(x, y, 8, [192,48,16], 45, 1);
		CallSound(sndShot1);
	}
}

