#include "./lib_Common.dnh"
#include "./lib_Effect.dnh"
#include "./loadlib/file_LoadStgImg.dnh"


//----------------------------------------------------
//　spell背景用関数
//----------------------------------------------------

//let bg_layer		= 21;	//　spell背景



//　ﾃｸｽﾁｬ生成
function CreateTexture2D_01( path ){
	let obj		= ObjPrim_Create(OBJ_SPRITE_2D);
	
	ObjPrim_SetTexture( obj, path );
	ObjRender_SetBlendType( obj, BLEND_ALPHA );
	Obj_SetRenderPriorityI( obj, prioritySpellBG );
	ObjSprite3D_SetSourceDestRect( obj, 0, 0, 512, 512 );
	
	return obj;
}

//　極座標で配置
//　頂点数を奇数にするときもくなるよ
task CreateTexture2D_PolarCoordinates( SET_ID, SET_PATH, SET_POSITION, SET_POLYGON, SET_DISTANCE, SET_ANGLE_Z, BLEND_TYPE ){
	let ID			= ObjPrim_Create(OBJ_SPRITE_2D);
	let move1		= 0;
	let moveA		= 0;
	let ang			= 0;
	let pc			= 0;
	let i			= 0;
	
	//　スクロール
	let scr			= 0;
	
	//　Ｎ角形 + 中心点 + 円になる時の余分な点
	let ten			=  SET_POLYGON + 1 + 1 ;
	//　回転の早さ
	let ang_plus	= SET_ANGLE_Z[1];
	
	ObjPrim_SetTexture( ID, SET_PATH );
	Obj_SetRenderPriorityI( ID, prioritySpellBG );
	ObjRender_SetBlendType( ID, BLEND_TYPE );
	ObjRender_SetAngleXYZ( ID, 0, 0, SET_ANGLE_Z[0] );
	ObjPrim_SetPrimitiveType( ID, PRIMITIVE_TRIANGLEFAN );
	ObjPrim_SetVertexCount( ID, ten );
	
	while( !Obj_IsDeleted(SET_ID) ){
		ObjRender_SetPosition( ID, SET_POSITION[0], SET_POSITION[1], 0 );
		
		move1 = 1 * sin( moveA );
		
		//　中心となる点　ここから順番に頂点が結ばれていく
		ObjPrim_SetVertexPosition( ID, 0, 0, 0, 0 );
		ObjPrim_SetVertexUVT( ID, 0, 0, 0 + scr );
		ObjPrim_SetVertexColor( ID, 0, 255, 128, 64 );
		ObjPrim_SetVertexAlpha( ID, 0, move1*255 );
		
		let rgb = [
			160 + 32 * sin( scr/4 ),
			160 + 32 * sin( scr/4 ),
			255,
		];
		
		//　0番目を除いた、残りの頂点設定
		loop( SET_POLYGON+1 ){
			ObjPrim_SetVertexPosition( ID, 1+i, SET_DISTANCE * cos(pc+ang), SET_DISTANCE * sin(pc+ang), 0 );
			ObjPrim_SetVertexUVT( ID, 1+i, 0 + 256 * sin( i*(180/(SET_POLYGON)) ), 512 + scr );
			ObjPrim_SetVertexColor( ID, 1+i, rgb[0], rgb[1], rgb[2] );
			ObjPrim_SetVertexAlpha( ID, 1+i, move1*255 );
			
			pc		+= 360/SET_POLYGON;
			i++;
		}
		pc			= 0;
		i			= 0;
		
		ang += ang_plus;
		if( move1 < 1 ){ moveA += 2; }
		scr += 1;
		
		yield;
	}
	Obj_Delete( ID );
}
