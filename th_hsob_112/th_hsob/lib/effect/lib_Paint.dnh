//　おえかきフィールド
task SetPaint( arg_obj, pos, scale, rgba, layer, blend ){
	if( !CfgIsUseShader() ){ return; }
	let obj		= ObjPrim_Create(OBJ_SPRITE_2D);
	let _rect	= [ 512, 512 ];
	let ac		= randEffect( 32, 64 );
	let def		= randEffect( 0, 360 );
	let frame	= 0;
	let move1	= 0;
	let moveA	= 0;
	
	ObjRender_SetPosition( obj, pos[0], pos[1], 0 );
	ObjPrim_SetTexture( obj, imgEffectSpark3 );
	ObjRender_SetBlendType( obj, blend );
	Obj_SetRenderPriorityI( obj, layer );
	ObjSprite2D_SetSourceRect( obj, 0, 0, _rect[0], _rect[1] );
	ObjSprite2D_SetDestCenter( obj );
	ObjRender_SetScaleXYZ( obj, scale[0], scale[1], 0 );
	
	let sLayer	= [ 0, prioritySpellBG ];
	
	let rt	= CreateRenderTexture( "rtPaint", sLayer[0], sLayer[1], true );
	let shd	= CreateShaderObject( obj, 12 );
	//　レンダリングテクスチャサイズ
	ObjShader_SetVector( shd, "m_rtSize", 1024, 512, 0, 0 );
	//　テクスチャ自体の実サイズ
	ObjShader_SetVector( shd, "m_texSize", _rect[0], _rect[1], 0, 0 );
	//　矩形選択領域サイズ
	ObjShader_SetVector( shd, "m_rectSize", _rect[0], _rect[1], 0, 0 );
	//　テクスチャの矩形選択領域が端からどれだけ先にあるか
	ObjShader_SetVector( shd, "m_addRect", 0, 0, 0, 0 );
	
	while( !Obj_IsDeleted(arg_obj) ){
		move1 = 1 * sin( moveA );
		
		RenderToTextureA1( rt, sLayer[0], sLayer[1], true );
		
		ObjShader_SetFloat( shd, "m_frame", frame );
		ObjShader_SetVector( shd, "m_color", rgba[0]*(1/255), rgba[1]*(1/255), rgba[2]*(1/255), move1*rgba[3]*(1/255) );
		ObjShader_SetVector( shd, "m_pos", ObjRender_GetX(obj), ObjRender_GetY(obj), 0, 0 );
		ObjShader_SetVector( shd, "m_playerPos", GetPlayerX(), GetPlayerY(), 0, 0 );
		ObjShader_SetVector( shd, "m_scale", scale[0], scale[1], 0, 0 );
		ObjShader_SetTexture( shd, "g_Texture", rt );
		
		frame++;
		if( move1 < 1 ){ moveA += 0.1; }
		
		yield;
	}
	while( move1 > 0 ){
		move1 = 1 * sin( moveA );
		
		ObjShader_SetFloat( shd, "m_frame", frame );
		ObjShader_SetVector( shd, "m_color", rgba[0]*(1/255), rgba[1]*(1/255), rgba[2]*(1/255), move1*rgba[3]*(1/255) );
		ObjShader_SetVector( shd, "m_playerPos", GetPlayerX(), GetPlayerY(), 0, 0 );
		
		frame++;
		moveA += 0.5;
		
		yield;
	}
	Obj_Delete( shd );
	Obj_Delete( obj );
}