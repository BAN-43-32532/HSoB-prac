let objEnemyRosary = -1;

// 数珠は別アニメだよ！
// @Initializeで実行する感じ
task SetSiranRosary()
{
	_SetSiranRosary(objEnemy);
}
task _SetSiranRosary(objBoss)
{
	let objFamilier = MakeEnemy(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 1, ENEMY_FREE);
	objEnemyRosary = objFamilier;	// グローバル変数に登録
	Boss_SetIDtoObj(objFamilier, BOSS_ID_SIRAN);
	Obj_SetValue(objFamilier, "SIRAN_ROSARY", 1);	// 数珠アニメ通知用
	Obj_SetValue(objFamilier, "ANIME_OFFSET", 40);
	Obj_SetValue(objFamilier, "ANIME_SPEED", 10);
	Obj_SetValue(objFamilier, "ANIME_MAX", 2);
	Boss_SetAnimeTimer(objFamilier);
	BossAnime_Initialize(objFamilier);
	TAnime();
	WaitForKilledFamilier(objFamilier, 0, 0);
	Obj_Delete(objFamilier);
	
	task TAnime()
	{
		let t = 0;
		while(!Obj_IsDeleted(objFamilier) && !Obj_IsDeleted(objBoss))
		{
			Obj_SetValue(objFamilier, "ANIME_OFFSET", trunc((sin(t)+1)/2*Obj_GetValueD(objFamilier, "ANIME_MAX", 2))*20+40);
			ObjMove_SetPosition(objFamilier, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss));
			t += Obj_GetValueD(objFamilier, "ANIME_SPEED", 1);
			yield;
		}
		Obj_Delete(objFamilier);
	}
}

// SetAction
task SetActionSiran(obj, act, timer)
{
	SetAction(obj, act, timer);
	SetAction(objEnemyRosary, act, timer);
	if (act == ACT_SHOT1 || act == ACT_SHOT2)
	{
		Obj_SetValue(objEnemyRosary, "ANIME_SPEED", 30);
		Obj_SetValue(objEnemyRosary, "ANIME_MAX", 3);
		waitObj(obj, timer);
		Obj_SetValue(objEnemyRosary, "ANIME_SPEED", 10);
		Obj_SetValue(objEnemyRosary, "ANIME_MAX", 2);
	}
}


// -------------------- 数珠描画 -------------------- //
task DrawRosaryFamilier( obj, Type )
{
	let rectX = (Type%4) * 32;
	let rectY = trunc(Type/4) * 32;
	let txtID = Obj_GetValueD(objEnemy, "ROSARY_STRING", 0);	// 文字IDは敵本体に格納
	Obj_SetValue(objEnemy, "ROSARY_STRING", txtID+1);
	
	//エフェクトオブジェクトを作成
	let objImg3 = ObjPrim_Create(OBJ_PRIMITIVE_2D);
	Obj_SetRenderPriorityI(objImg3, priorityZako-1);
	ObjRender_SetBlendType(objImg3, BLEND_ADD_ARGB);
	ObjPrim_SetTexture(objImg3, imgZakoRosary);
	SetVeterex2D(objImg3, rectX, rectY+128, 32, 32, 2);

	let objImg = ObjPrim_Create(OBJ_PRIMITIVE_2D);
	Obj_SetRenderPriorityI(objImg, priorityZako);
	ObjPrim_SetTexture(objImg, imgZakoRosary);
	SetVeterex2D(objImg, rectX, rectY, 32, 32, 1);

	let objImg4 = ObjPrim_Create(OBJ_PRIMITIVE_2D);
	Obj_SetRenderPriorityI(objImg4, priorityZako);
	ObjPrim_SetTexture(objImg4, imgZakoRosary);
	SetVeterex2D(objImg4, (txtID%4)*32, (trunc(txtID/4)%2)*32+192, 32, 32, 0.9);
	ObjRender_SetBlendType(objImg4, BLEND_ADD_ARGB);

	let objImg2 = ObjPrim_Create(OBJ_PRIMITIVE_2D);
	Obj_SetRenderPriorityI(objImg2, priorityZako);
	ObjPrim_SetTexture(objImg2, imgZakoRosary);
	SetVeterex2D(objImg2, rectX, rectY+64, 32, 32, 1);
	ObjRender_SetBlendType(objImg2, BLEND_ADD_ARGB);

	Obj_SetValue(obj, "COLOR", Type);	//色を記録
	Obj_SetValue(obj, "IMAGE_ID", objImg);	//IDを記録
	Obj_SetValue(obj, "IMAGE_ID_ALL", [objImg, objImg2, objImg3, objImg4]);

	let count = 0;
	while(!Obj_IsDeleted(obj))
	{
		if (!IsTimeStopObj(obj))
		{
			let ex = round(ObjMove_GetX(obj));
			let ey = round(ObjMove_GetY(obj));
			let ea = atan2(ObjMove_GetY(obj)-ObjMove_GetY(objEnemy), ObjMove_GetX(obj)-ObjMove_GetX(objEnemy));
			ObjRender_SetPosition(objImg, ex, ey, 0);
			ObjRender_SetPosition(objImg2, ex, ey, 0);
			ObjRender_SetPosition(objImg3, ex, ey, 0);
			ObjRender_SetPosition(objImg4, ex, ey, 0);
			ObjRender_SetAngleZ(objImg2, ea);
			ObjRender_SetAngleZ(objImg3, -77*count);
			count++;
		}
		yield;
	}
	Obj_Delete(objImg);
	Obj_Delete(objImg2);
	Obj_Delete(objImg3);
	Obj_Delete(objImg4);
}


// ラスワ開幕モーション(専用)
function LWMotion_Siran(objBoss, eff_color, cutin_id)
{
	let isBoss = (objBoss == objEnemy);
	let visibled = GetEnemyVisible(objBoss);
	let isLong = (GetPlayMode() == GAME_MAIN || GetPlayMode() == GAME_PRACTICE);
	let delay = [90, 180][isLong];
	
	_LWMotion(eff_color, cutin_id, objBoss);
	
	if (isBoss)
	{
		// タイマー停止
		ObjEnemyBossScene_SetSpellTimer(objScene, -1);
		
		wait(delay);
		
		// 効果音
		CallSound(sndCallSpellCard);
		// カットイン
		SetAreaCommonData(CAREA_SYSTEM, "PACKAGE_CUTIN", true );
		SetAreaCommonData(CAREA_SYSTEM, "PACKAGE_CUTIN_ID", cutin_id );
		// タイマー開始
		ObjEnemyBossScene_SetSpellTimer(objScene, ObjEnemyBossScene_GetInfo(objScene, INFO_ORGTIMERF));
		//スペカ起動
		CallSpellCard(true);
	}
	
	task _LWMotion(eff_color, cutin_id, objBoss)
	{
		HideBoss(objBoss, eff_color);

		if (isLong)
		{
			EffectConcentrationPointEx(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), objBoss, eff_color, 20, 5, 240, 120);
			CallSound(sndPower1);
			wait(60);
			CallSound(sndPower1);
			wait(60);
			CallSound(sndPower1);
			wait(60);
		}
		else
		{
			EffectConcentrationPointEx(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), objBoss, eff_color, 20, 2, 240, 90);
			CallSound(sndPower1);
			wait(90);
		}
		RaiseBoss(objBoss);
		
		EffectExplodeCloudSet(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 15, [eff_color[0]/2,eff_color[1]/2,eff_color[2]/2], 60, 10);
	}
	
	task HideBoss(objEnemy, eff_color)
	{
		SetEnemyVisible(objEnemy, false);
		BossEffect_DisableMagicCircle(objEnemy);
		Obj_SetVisible(GetBossImageID(objEnemy), false);	//画像非表示
		Obj_SetVisible(GetBossImageID(objEnemyRosary), false);	//画像非表示
	}
	task RaiseBoss(objEnemy)
	{
		BossEffect_EnableMagicCircle(objEnemy);
		Obj_SetVisible(GetBossImageID(objEnemy), true);	//画像表示
		Obj_SetVisible(GetBossImageID(objEnemyRosary), true);	//画像表示
		ascent(t in 0 .. 30)
		{
			let tmp_a = (t+1)/30*255;
			ObjRender_SetAlpha(GetBossImageID(objEnemy), tmp_a);
			ObjRender_SetAlpha(GetBossImageID(objEnemyRosary), tmp_a);
			yield;
		}
		if (visibled) { SetEnemyVisible(objEnemy, true); }
	}
}