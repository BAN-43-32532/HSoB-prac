//　Stage1
//--------------------------------------------------------------------------------
//--------------------------------------------------------------------------------

#include "./../../lib/wor_function.dnh"

let flagEnd = false;
let flgScriptValue = 0;

//　ステージの背景テクスチャ
let world01_path;

@Event
{
	alternative(GetEventType())
	case(ev_CloseScript)
	{
		//背景削除
		flagEnd = true;
		BlackOutEx( world_layer+2, 0, 120, false, [72,84,72] );
		CloseMine(300);
	}
}

@Initialize
{
	init();	//初期設定
	
	// 画像パスをセット
	world01_path = LoadingImageFile_StgWorld(1);

	// 背景スクリプト起動
	if (IsDrawBackground() >= 2) { SetWorld01a(); }
	else if (IsDrawBackground() >= 1) { BackGroundLite(); }
}

@MainLoop
{
	yield;
}


task BackGroundLite
{
	let obj = ObjPrim_Create(OBJ_SPRITE_2D);
	let alpha = 0;
	Obj_SetRenderPriorityI(obj,world_layer);
	ObjRender_SetColor(obj,255,255,255);
	ObjPrim_SetTexture(obj,world01_path[0]);
	ObjSprite2D_SetSourceRect(obj,0,0,384,448);
	ObjSprite2D_SetDestRect(obj,0,0,384,448);
	ObjRender_SetPosition(obj,MinX,MinY,0);
	while(alpha<255) {
		alpha+=5;
		ObjRender_SetAlpha(obj,alpha);
		yield;
	}
	while(!flagEnd)
	{
		yield;
	}
	Obj_Delete(obj);
}

task SetWorld01a()
{
	TBG01;
	TBG02;

	SetCameraFocusX(-100);
	SetCameraFocusY(150);
	SetCameraFocusZ(0);
	SetCameraRadius(500);

	SetCameraAzimuthAngle(90);
	SetCameraElevationAngle(20);

	SetCameraYaw(-35);

//	wait(240);
	
	let t = 0;
	let next_wt = 180;

	let sLayer	= [ world_layer, world_layer+1 ];
	let frame	= 0;
	let seed	= 0;
	let rt	= CreateRenderTexture( "Monochrome", sLayer[0], sLayer[1], true );
	let tex	= CreateShaderTexture( rt, BLEND_ALPHA, sLayer[1] );
	let shd	= CreateShaderObject( tex, 0 );
	ObjShader_SetTexture( shd, "g_Texture", fxMask[0] );

	loop
	{
		if (t <= 360)
		{
			let tmp = 1-(t+1)/360;
			let tmp_c = min(1, (t+1)/180);
			SetFogParam(200-1200*tmp, 1200-1200*tmp, 120*tmp_c+255*(1-tmp_c), 140*tmp_c+255*(1-tmp_c), 200*tmp_c+255*(1-tmp_c));
		}

		ObjShader_SetFloat( shd, "m_seed", seed );
		ObjShader_SetFloat( shd, "m_frame", t );
		ObjShader_SetFloat( shd, "m_count", frame );
		ObjShader_SetFloat( shd, "m_alpha", 1 );
		RenderToTextureA1( rt, sLayer[0], sLayer[1], true );
		frame += 0.01;
		if( frame > 1 ) {
			frame = 0;
			seed++;
		}
		t++;
		yield;
	}
	Obj_Delete( tex );
	Obj_Delete( shd );

	// ベース用
	task TBG01
	{
		let obj = CreateTexture01( world01_path[0] );
		ObjRender_SetPosition( obj, -512, 0, -1500 );
		ObjRender_SetScaleXYZ( obj, 8, 8, 0 );
		ObjSprite3D_SetBillboard( obj, true );
	}

	// 地形
	task TBG02
	{
		let ID = [ObjMesh_Create(), ObjMesh_Create()];
		ascent(i in 0 .. 2)
		{
			ObjMesh_Load(ID[i], world01_path[1]);
			Obj_SetRenderPriorityI(ID[i],world_layer+1);
		}

		let bazeZ = 0;
		let t = 0;
		loop
		{
			ascent(i in 0 .. 2)
			{
				let bz = (bazeZ+i*1150)%2300 - 1700;
				ObjRender_SetPosition(ID[i], 0, 0, bz);
			}
			bazeZ += 1;
			t++;
			yield;
		}
		ascent(i in 0 .. 2) { Obj_Delete(ID[i]); }
	}
}

