#東方弾幕風[Single]
#ScriptVersion[3]
#Title["ちぃラスワ"]
#Text["ちぃラスワ"]
#Background[""]
#System["./../../../system/System.dnh"]

//---------------------------------------------------------------------

// 関数取り込み
#include"./../../../lib/lib_boss.dnh"
#include"./lib_Chii.dnh"

let CHII_MOTION = 0;
let CHII_X = 0;
let CHII_Y = 0;

@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult(2300);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(90);		}
	case(EV_REQUEST_IS_LAST_SPELL)	{ SetScriptResult(true);	}
	BossEvent();
}

@Initialize {
	let SPELL_ID = 1002;
	let SPELL_NAME = 8;

	// アイテム数
	bossDropItem = 0;
	
	// 霊夢の時だけちょっと硬い！
	if (GetPlayerType() == PLAYER_REIMU_A) { dIni_Shot = 75; }
	else if (GetPlayerType() == PLAYER_SAKUYA_A) { dIni_Shot = 115; }
	else { dIni_Shot = 100; }

	//初期設定
	Boss_Init();

	objEnemy = CreateBoss(BOSS_ID_CHII);	//ボスセット

	//スペカデータ・セット
	SetSpellCardData(GetSpellCardID(SPELL_ID), SPELL_NAME, 
			GetCurrentScriptDirectory()~"02a_Background.dnh",
			GetBossTexture(objEnemy, I_CUTIN), 0.75, CUTMOTION_NONE);

	// チャプター開始
	ChapterStartBoss(GetBossID(objEnemy), SPELL_NAME, CHAPTER_SPELL);

	// 使い魔と体力連動
	CheckLinkLife_Boss(objEnemy);

	Task_Main();
}

@MainLoop {
	yield;
}

// メインタスク
task Task_Main
{
	SetEnemyVisible(objEnemy, true);
	ObjMove_SetPosition(objEnemy, CenX, CenY-64);
	LWMotion(objEnemy, [128, 128, 108], -5);
	
	let muki = 1;
	
	while(eAlive)
	{
		BossCharge(objEnemy);
		waitObj(objEnemy, 60);
		if (!eAlive) { return; }
		
		let to_a = GetAngleToPlayer(objEnemy);
		SetEnemyChii01(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), 192, to_a+90, 0.8, muki);
		SetEnemyChii01(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), 192, to_a-90, 0.8, muki);
		EraseChiiS02(objEnemy, 1, 15);
		BossEffect_DisableMagicCircle(objEnemy);
		CallSound(sndPower3);

		let mot = CHII_MOTION;
		while(mot == CHII_MOTION) { yield; }
		
		if (!eAlive) { return; }
		MoveTo(objEnemy, CHII_X, CHII_Y, 90);
//		TargetEffect(CHII_X, CHII_Y, 30, 90, 1);
		waitObj(objEnemy, 90);
		
		if (!eAlive) { return; }
		ArizeChiiS02(objEnemy, 1, 30);
		BossEffect_EnableMagicCircle(objEnemy);
		waitObj(objEnemy, 30);

		if (!eAlive) { return; }
		SetAction(objEnemy, ACT_SHOT1, 90);
		EffectExplodeCloudSet(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), 10, [16,32,96], 60, 10);
		Shot01();
		
		muki = -muki;
	}
}

task Shot01()
{
	let speed = 3;
	let way = 6;
	let count = [6, 8, 8, 9][Difficult];
	
	let sx = ObjMove_GetX(objEnemy);
	let sy = ObjMove_GetY(objEnemy);
	let angle = GetAngleToPlayer(objEnemy);
	
	if (Difficult >= D_NORM) { Shot1_sub(sx, sy, speed*0.33, angle, BGB_SCALE_ORANGE, round(count*0.7), way); }
	Shot1_sub(sx, sy, speed*0.66, angle+180/way, BGB_SCALE_YELLOW, round(count*0.85), way);
	Shot1_sub(sx, sy, speed, angle, BGW_SCALE_YELLOW, count, way);
	
	CallSound(sndShot4);
	
	task Shot1_sub(sx, sy, speed, angle, graphic, count, way)
	{
		ascent(i in 0 .. count)
		{
			if (!eAlive) { return; }
			let ss = speed;
			ascent(j in 0 .. way)
			{
				let vx = ss * (1 - i*0.02);
				let vy = ss * (i*0.02*1.732);
				let sa = angle + j*360/way;
				local
				{
					let pos = Rotate2D_XY(vx, vy, sa);
					My_CreateShotB2(sx, sy, pos[0]/10000, pos[1]/10000, pos[0]/240, pos[1]/240, pos[0], pos[1], graphic, 15);
				}
				if (vy > 0)
				{
					let pos = Rotate2D_XY(vx, -vy, sa);
					My_CreateShotB2(sx, sy, pos[0]/10000, pos[1]/10000, pos[0]/240, pos[1]/240, pos[0], pos[1], graphic, 15);
				}
			}
		//	waitObj(objEnemy, 2);
		}
	}
}

// いっぱいちぃちぃ
task SetEnemyChii01(iniX, iniY, iniSpeed, iniAngle, iniValue, iniMuki)
{
	let eScale = iniValue;
	
	let e_type = iniValue%2;
	let eSize = ENEMY_S;
	let eColor = EFF_BLUE;
	
	let objFamilier = MakeEnemy(iniX, iniY, 999999, eSize);
	CheckLinkLife_Familier(objEnemy, objFamilier, 1);	// ボスと体力連動
	Boss_SetIDtoObj(objFamilier, BOSS_ID_CHII);
	Boss_SetAnimeTimer(objFamilier);
	BossAnime_Initialize(objFamilier);
	Obj_SetValue(objFamilier, "ANIME_SC", eScale);
	FamilierEffect_LinkLifeCircle(objFamilier, objEnemy, 64);
	Obj_SetRenderPriorityI(GetBossImageID(objFamilier), priorityBoss-1);	// レイヤーを下に
	TAct();
	WaitForKilledFamilier(objFamilier, 24, 8);
	ZakoFinalize(objFamilier, eColor);
	
	task TAct()
	{
		ArizeChiiS02(objFamilier, eScale, 15);

		if (Obj_IsDeleted(objFamilier)) { return; }
		let to_x = ObjMove_GetX(objEnemy) + iniSpeed*cos(iniAngle);
		let to_y = ObjMove_GetY(objEnemy) + iniSpeed*sin(iniAngle);
		MoveToSlowdown2(objFamilier, to_x, to_y, 60);
		if (to_x != ObjMove_GetX(objFamilier) || to_y != ObjMove_GetY(objFamilier))
			{ SetAction(objFamilier, [ACT_MOVE_L,ACT_MOVE_R][to_x>ObjMove_GetX(objFamilier)], 60); }
		waitObj(objFamilier, 60);

		if (Obj_IsDeleted(objFamilier)) { return; }
		EraseChiiS02(objFamilier, eScale, 15);
		ascent(i in 0 .. 3)
		{
			SetEnemyChii02(to_x, to_y, iniSpeed, iniAngle+(i-1)*60, 0.6, iniMuki);
		}
		CallSound(sndPower3);
	}
}
task SetEnemyChii02(iniX, iniY, iniSpeed, iniAngle, iniValue, iniMuki)
{
	let eScale = iniValue;
	let baseAngle = iniAngle;
	
	let e_type = iniValue%2;
	let eSize = ENEMY_S;
	let eColor = EFF_BLUE;
	
	let objFamilier = MakeEnemy(iniX, iniY, 999999, eSize);
	CheckLinkLife_Familier(objEnemy, objFamilier, 1);	// ボスと体力連動
	Boss_SetIDtoObj(objFamilier, BOSS_ID_CHII);
	Boss_SetAnimeTimer(objFamilier);
	BossAnime_Initialize(objFamilier);
	FamilierEffect_LinkLifeCircle(objFamilier, objEnemy, 64);
	Obj_SetRenderPriorityI(GetBossImageID(objFamilier), priorityBoss-1);	// レイヤーを下に
	TAct();
	WaitForKilledFamilier(objFamilier, 24, 8);
	ZakoFinalize(objFamilier, eColor);
	
	task TAct()
	{
		ArizeChiiS02(objFamilier, eScale, 15);

		if (Obj_IsDeleted(objFamilier)) { return; }
		// 散開！
		let to_x = ObjMove_GetX(objEnemy) + iniSpeed*cos(iniAngle);
		let to_y = ObjMove_GetY(objEnemy) + iniSpeed*sin(iniAngle);
		MoveToSlowdown2(objFamilier, to_x, to_y, 60);
		if (to_x != ObjMove_GetX(objFamilier) || to_y != ObjMove_GetY(objFamilier))
			{ SetAction(objFamilier, [ACT_MOVE_L,ACT_MOVE_R][to_x>ObjMove_GetX(objFamilier)], 60); }
		wait(60+15);

		if (Obj_IsDeleted(objFamilier)) { return; }
		// ぐーるぐる
		let timer = 240;
		// 敵本体も動く
		MoveTo(objEnemy, GetPlayerX, GetPlayerY, timer);
		TShot(timer);
		ascent(t in 0 .. timer)
		{
			if (Obj_IsDeleted(objFamilier)) { return; }
			let tmp = GetCurve_ad((t+1)/timer);
			let to_r = iniSpeed * (1-tmp*1.75);
			baseAngle = iniAngle + tmp*180*iniMuki;
			let ex = ObjMove_GetX(objEnemy) + to_r*cos(baseAngle);
			let ey = ObjMove_GetY(objEnemy) + to_r*sin(baseAngle);
			ObjMove_SetPosition(objFamilier, ex, ey);
			SetAction(objFamilier, ACT_MOVE, 15);
			wait(1);
		}

		if (Obj_IsDeleted(objFamilier)) { return; }
		// 集合！
		to_x = GetPlayerX;
		to_y = GetPlayerY;
		CHII_X = to_x;
		CHII_Y = to_y;
		CHII_MOTION++;
		
		if (Obj_IsDeleted(objFamilier)) { return; }
		MoveToSlowdown(objFamilier, to_x, to_y, 120);
		SetAction(objFamilier, [ACT_MOVE_L,ACT_MOVE_R][to_x>ObjMove_GetX(objFamilier)], 120);
		CallSound(sndPower1);
		waitObj(objFamilier, 90);

		if (Obj_IsDeleted(objFamilier)) { return; }
		EraseChiiS02(objFamilier, eScale, 15);
	}
	
	task TShot(timer)
	{
		let speed = [1.5, 1.5, 1.75, 1.75][Difficult];
		let wt = 3;
		let way = [1, 1, 2, 2][Difficult];
		if (Difficult <= D_EASY) { timer = ceil(timer/2); }
		
		let graphics = [BGW_STICK_BLUE, ADD_BGW_BALL_S_BLUE];
		
		let st = trunc((iniAngle%360)/360*wt);
		ascent(t in 0 .. timer)
		{
			if (!CanShotBullet(objFamilier)) { break; }
			if (!IsTimeStopObj(objFamilier))
			{
				if ((t+st)%wt == 0)
				{
					ascent(i in 0 .. way)
					{
						let ba = baseAngle - iniMuki*90;
						let sa = baseAngle + (trunc(t/5/wt)%2)*180;
						let ss = speed * (1-i*0.2);
						TumaShot(ObjMove_GetX(objFamilier), ObjMove_GetY(objFamilier),
							1, ba, BGW_STICK_WHITE, 30, ss, sa, graphics[i], 60);
					}
					if (Difficult >= D_LUNA)
					{
						let ss = 2 + (t/timer)^2*8;
						My_CreateShotA2(ObjMove_GetX(objFamilier), ObjMove_GetY(objFamilier),
							0, GetAngleToPlayer(objFamilier), ss/15, ss, BGW_STICK_RED, 15);
					}
					CallSound(sndShot3);
				}
			}
			wait(1);
		}
	}
}

task ArizeChiiS02(objFamilier, scale, timer)
{
	let objImg = GetBossImageID(objFamilier);
	ascent(t in 0 .. timer)
	{
		let tmp = (t+1)/timer;
		let sc = 1 - (1-scale)*tmp;
		Obj_SetValue(objFamilier, "ANIME_SC", sc);
		ObjRender_SetAlpha(objImg, tmp*255);
		wait(1);
	}
	SetEnemyVisible(objFamilier, true);
}
task EraseChiiS02(objFamilier, scale, timer)
{
	SetEnemyVisible(objFamilier, false);

	let objImg = GetBossImageID(objFamilier);
	descent(t in 0 .. timer)
	{
		let tmp = (t+1)/timer;
		let sc = scale*tmp;
		Obj_SetValue(objFamilier, "ANIME_SC", sc);
		ObjRender_SetAlpha(objImg, tmp*255);
		wait(1);
	}
	Obj_SetValue(objFamilier, "ANIME_SC", 0);
	if (objFamilier != objEnemy) { EraseEnemy(objFamilier); }
}
