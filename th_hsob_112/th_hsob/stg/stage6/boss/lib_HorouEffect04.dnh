//--------------------------------------------------------------------------------
//--------------------------------------------------------------------------------
//　不滅っぽい翼
task SetImmortalWing(v_obj){
	ObjPrim_SetPrimitiveType(v_obj, PRIMITIVE_TRIANGLESTRIP);
	ObjPrim_SetVertexCount(v_obj, 4);
	ObjPrim_SetVertexPosition(v_obj, 0, 0, -128, 0);
	ObjPrim_SetVertexPosition(v_obj, 1, 0, 128, 0);
	ObjPrim_SetVertexPosition(v_obj, 2, 512, -128, 0);
	ObjPrim_SetVertexPosition(v_obj, 3, 512, 128, 0);
	ObjPrim_SetVertexUVT(v_obj, 0, 512, 0);
	ObjPrim_SetVertexUVT(v_obj, 1, 512, 256);
	ObjPrim_SetVertexUVT(v_obj, 2, 1024, 0);
	ObjPrim_SetVertexUVT(v_obj, 3, 1024, 256);
}

//　カクカクうごく
task SetImmortalMoveing(v_objParent, v_obj, v_distArray, v_angle){
	while( !Obj_IsDeleted(v_objParent) ){
		let tmp_f = GetAreaCommonData(CAREA_STAGE, "HOROU_OPT_FR", 0);
		let frame = trunc(tmp_f + sin(tmp_f/16+v_angle)*32 - sin(tmp_f/512+v_angle*5)*16 + sin(tmp_f*32+v_angle*2)*1.25) / 2*5;
		let angle = v_angle - 8 * sin( frame );
		let pos = [
			ObjRender_GetX(v_objParent) + v_distArray[0] * cos( angle ),
			ObjRender_GetY(v_objParent) + v_distArray[1] * sin( angle ),
		];
		ObjRender_SetPosition(v_obj, pos[0], pos[1], 0);
		ObjRender_SetAngleXYZ(v_obj, 0, 0, angle);
		yield;
	}
}
